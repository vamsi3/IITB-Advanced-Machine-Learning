(gnu specific) display info on most cpu-intensive processes once and exit. 
(gnu specific) display information about number of processes in various states. 
(gnu specific) display process information (batch mode, display once) with full command lines. 
(gnu specific) display process information for all processes whose command line contains "processname". 
(gnu specific) find the process currently taking the most cpu time. 
(gnu specific) monitor all processes belonging to user UNK_START abc UNK_END in batch mode (not accepting user input) and displaying info each 30 seconds up to 10 times. 
(gnu specific) monitor process activity, starting with the last remembered UNK_START c UNK_END state reversed: typing UNK_START c UNK_END toggles between using process names or full command lines. 
(gnu specific) set variable line to full process info of process currently taking the most cpu time, squeezing multiple consecutive spaces into one. 
(gnu specific) set variable output to full process info of process currently taking the most cpu time. 
(gnu specific) use UNK_START top UNK_END to monitor one process. 
(linux specific) copy loadable kernel module UNK_START mymodule.ko UNK_END to the drivers in modules directory matchig current kernel. 
(linux specific) display all lines containing UNK_START ip_mroute UNK_END in the current kernel's compile-time config file. 
(linux specific) display current running kernel's compile-time config file. 
(linux specific) find all loadable modules for current kernel, whose name includes UNK_START perf UNK_END 
(linux specific) look for any instance of UNK_START highmem UNK_END in the current kernel's compile-time config file. 
(linux specific) search for command UNK_START tail UNK_END in the maps of the process with pid 2671 
(linux-specific) display all lines containing probes in the current kernel's compile-time config file. 
(linux-specific) display all lines containing utrace in the current kernel's compile-time config file. 
(linux-specific) look for any instance of UNK_START ds1337 UNK_END in the modules.alias file matching current kernel release 
add UNK_START execute UNK_END to the permissions of all directories in the home directory tree 
add UNK_START new. UNK_END to the beginning of the name of "original.filename", renaming it to "new.original.filename". 
add UNK_START new. UNK_END to the beginning of the name of "original.filename", renaming it to "new.original.filename". 
add UNK_START prefix UNK_END to every non-blank line in UNK_START file.txt UNK_END 
add UNK_START prefix_ UNK_END to every non-blank line in UNK_START a.txt UNK_END 
add UNK_START .avi UNK_END extension to all files/directories with UNK_START .mkv UNK_END extension under UNK_START /volume1/uploads UNK_END directory tree 
add a cron job to existing list, without removing existing ones, ro tun UNK_START scripty.sh UNK_END at 2:01 am, 3rd day of april (4th month), if that day happens to be a friday (5th day of the week starting with sunday=0). 
add a date time stamp to every line of output in UNK_START ping google.com UNK_END 
add a line number to every line in UNK_START infile UNK_END 
add a line number to every line in UNK_START long-file UNK_END 
add a number prefix followed by UNK_START ) UNK_END to each line in UNK_START $string UNK_END 
add content of UNK_START filename UNK_END to the existing cron jobs of user "user", without removing the previously existing cron jobs. 
add cron lists from UNK_START file1 UNK_END and UNK_START file2 UNK_END to list of cron jobs, giving errors for any lines that cannot be parsed by crontab. 
add cron lists from UNK_START filename UNK_END to list of cron jobs, giving errors for any lines that cannot be parsed by crontab. 
add executable permission to UNK_START java_ee_sdk-6u2-jdk-linux-x64.sh UNK_END 
add executable permission to UNK_START pretty-print UNK_END 
add executable permission to UNK_START rr.sh UNK_END 
add execute permission to "computedate", "col", and UNK_START printdirections UNK_END for all users 
add execute permission to all files ending in UNK_START .sh UNK_END 
add group write permission to all files and directories in the current directory including hidden files and excluding UNK_START .. UNK_END 
add group write permission to all files and directories in the current directory including hidden files and excluding UNK_START .. UNK_END 
add group write permission to all files in the current directory 
add group write permission to all files matching UNK_START * UNK_END or UNK_START ...* UNK_END 
add line numbers to each non-blank line in UNK_START file UNK_END starting with number 1000001 
add prefix like number and UNK_START ^m${logfile}> UNK_END to every non-blank line received on standard input 
add read and execute permission to command UNK_START node UNK_END 
add read and execute permission to every directory under the current directory 
add read permission for UNK_START other UNK_END for all files/directories named UNK_START rc.conf UNK_END under current directory tree 
add the .abc suffix to the names of all *.txt regular files in the current directory tree 
add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories. 
add variable testvar with value UNK_START bbb UNK_END to a temporary environment, and search for testvar in all variables and their values in the resulting environment. 
adjust the timestamp of UNK_START filename UNK_END by subtracting 2 hours from it. 
adjust the timestamp of file $filename by subtracting 2 hours from it 
allow all users to execute UNK_START myscript.sh UNK_END 
allow all users to execute UNK_START $pathtoshell"myshell.sh" UNK_END 
allow anyone to run command UNK_START xvfb UNK_END as the owner of UNK_START xvfb UNK_END 
answer UNK_START n UNK_END to any prompts in the interactive recursive removal of "dir1", "dir2", and UNK_START dir3 UNK_END 
answer UNK_START y UNK_END to all UNK_START are you sure? UNK_END prompts from command UNK_START cp * /tmp UNK_END 
answer UNK_START y UNK_END to all prompts of UNK_START rm -rf foo UNK_END 
answer UNK_START y UNK_END to any prompts in the interactive recursive removal of "dir1", "dir2", and UNK_START dir3 UNK_END 
append UNK_START .txt UNK_END to all filenames in the current directory tree 
append *.java files from the current directory tree to tar archive `myfile.tar' 
append all *.mp3 files modified within the last 180 days to tar archive `music.tar' 
append all png and jpg files to tar archive UNK_START images.tar UNK_END 
append all regular files modified in the last 24 hours to the UNK_START $archive.tar UNK_END tar archive 
append all regular files modified in the last 24 hours to the UNK_START $archive.tar UNK_END tar archive 
append history lines from this session to the history list 
append the contents of UNK_START .cwdhist UNK_END file to the current in-memory history list 
append the contents of UNK_START file.txt UNK_END to the current in-memory history list 
append the current date in UNK_START %y%m%d_%h%m UNK_END format with the basename of $0 and save it to variable UNK_START logname UNK_END 
append the current date in UNK_START %d%m%y-%h-%m UNK_END format, UNK_START _ UNK_END and the current username, then save it in UNK_START name UNK_END variable 
append the current date to variable UNK_START lbuffer UNK_END 
append the date and command ran to UNK_START /tmp/trace UNK_END after every command 
append the last modification time of file $arg as the seconds since epoch with a preceding space to the variable UNK_START key UNK_END 
archive UNK_START ./dir UNK_END to UNK_START user@host:/path UNK_END via ssh on port 2222 and display progress 
archive UNK_START ./htmlguide UNK_END to UNK_START ~/src/ UNK_END with resolved symbolic links and delete any extraneous files from UNK_START ~/src/ UNK_END not found in UNK_START ./htmlguide UNK_END 
archive UNK_START /home/abc/* UNK_END to UNK_START /mnt/windowsabc UNK_END with human readable output 
archive UNK_START /home/path UNK_END to UNK_START path UNK_END on host UNK_START server UNK_END showing progress and statistics and remove files in the destination not found in the source 
archive UNK_START /home/user1 UNK_END to UNK_START wobgalaxy02:/home/user1 UNK_END excluding hidden files 
archive UNK_START /local/path/some_file UNK_END to UNK_START /some/path UNK_END on host UNK_START server.com UNK_END authenticating as user "usr", compress data during transmission, show progress details. 
archive UNK_START /media/10001/music/ UNK_END on host UNK_START server UNK_END to local directory UNK_START /media/incoming/music/ UNK_END and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission 
archive UNK_START /media/incoming/music/ UNK_END to UNK_START /media/10001/music/ UNK_END on host UNK_START server UNK_END and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission 
archive UNK_START /my/dir UNK_END on host UNK_START server UNK_END as user UNK_START user UNK_END to the current local directory excluding files ending in UNK_START .svn UNK_END 
archive UNK_START /path/to/application.ini UNK_END on host UNK_START source_host UNK_END to current directory. 
archive UNK_START /path/to/copy UNK_END on host UNK_START remote.host UNK_END as user UNK_START user UNK_END to UNK_START /path/to/local/storage UNK_END updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission 
archive UNK_START /path/to/copy UNK_END to UNK_START /path/to/local/storage UNK_END on host UNK_START host.remoted.from UNK_END as user UNK_START user UNK_END updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission 
archive UNK_START /path/to/files UNK_END on host UNK_START remotemachine UNK_END authentifying as user UNK_START user UNK_END and compressing data during transmission, copy symlinks as symlinks. 
archive UNK_START /path/to/files UNK_END to UNK_START /path UNK_END on host UNK_START user@targethost UNK_END with elevated permission on the remote host 
archive UNK_START /path/to/files UNK_END to UNK_START user@targethost:/path UNK_END 
archive UNK_START /path/to/files/source UNK_END to UNK_START user@remoteip:/path/to/files/destination UNK_END via ssh on port 2121 
archive UNK_START /path/to/sfolder UNK_END to UNK_START name@remote.server:/path/to/remote/dfolder UNK_END compressing the data during transmission 
archive UNK_START /path/to/sfolder UNK_END to UNK_START name@remote.server:/path/to/remote/dfolder UNK_END preserving hard links and compressing the data during transmission 
archive UNK_START /path/to/sfolder/ UNK_END to UNK_START name@remote.server:/path/to/remote/dfolder UNK_END preserving hard links and compressing the data during transmission 
archive UNK_START /source UNK_END and all files under UNK_START folder/ UNK_END to UNK_START /dstfolder/ UNK_END on host UNK_START remoteserver UNK_END as user UNK_START user UNK_END without copying files that already exist 
archive UNK_START /source/backup UNK_END to UNK_START /destination UNK_END with compression during transfer 
archive UNK_START /top/a/b/c/d UNK_END to host UNK_START remote UNK_END using relative path names 
archive UNK_START /usr/local/ UNK_END to UNK_START /backup/usr/local/ UNK_END on host UNK_START xxx.xxx.xxx.xxx UNK_END via ssh and show progress 
archive UNK_START /var/www/test/ UNK_END to UNK_START /var/www/test UNK_END on host UNK_START 231.210.24.48 UNK_END as user UNK_START ubuntu UNK_END via ssh using identity file UNK_START /home/test/pkey_new.pem UNK_END 
archive UNK_START _vim/ UNK_END to UNK_START ~/.vim UNK_END suppressing non-error messages and compressing data during transmission 
archive UNK_START _vimrc UNK_END to UNK_START ~/.vimrc UNK_END suppressing non-error messages and compressing data during transmission 
archive UNK_START blanktest/ UNK_END to UNK_START test/ UNK_END deleting any files in the destination not found in the source 
archive UNK_START directory UNK_END preserving hard links from host UNK_START remote UNK_END to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made 
archive UNK_START filetocopy UNK_END to UNK_START /some/nonexisting/dirtocopyto UNK_END on host UNK_START ssh.myhost.net UNK_END via ssh 
archive UNK_START foo/bar/baz.c UNK_END to UNK_START remote:/tmp/ UNK_END preserving the relative path of UNK_START foo/bar/baz.c UNK_END 
archive UNK_START myfile UNK_END to UNK_START /foo/bar/ UNK_END and create directory UNK_START /foo/bar/ UNK_END if UNK_START /foo/ UNK_END exists 
archive UNK_START path/subfolder UNK_END to "path", skipping files that are newer at the destination. 
archive UNK_START path/to/working/copy UNK_END to UNK_START path/to/export UNK_END excluding files or directories named UNK_START .svn UNK_END 
archive UNK_START somedir/./foo/bar/baz.c UNK_END to UNK_START remote:/tmp/ UNK_END preserving the relative path of UNK_START foo/bar/baz.c UNK_END 
archive UNK_START source UNK_END to UNK_START destination UNK_END via ssh on port UNK_START port_number UNK_END 
archive UNK_START src UNK_END to UNK_START dst UNK_END updating files existing in UNK_START dst UNK_END 
archive UNK_START src UNK_END to UNK_START dst UNK_END without overwriting existing files in UNK_START dst UNK_END 
archive UNK_START src-dir UNK_END to UNK_START dest-dir UNK_END on UNK_START remote-user@remote-host UNK_END and delete any files in UNK_START dest-dir UNK_END not found in UNK_START src-dir UNK_END 
archive UNK_START src/bar UNK_END on host UNK_START foo UNK_END to local directory UNK_START /data/tmp UNK_END 
archive all UNK_START .txt UNK_END files in the current directory to UNK_START /path/to/dest UNK_END keeping partially transferred files 
archive all *.xml files under current directory tree to xml.tar excluding the files that match UNK_START /workspace/ UNK_END in their paths 
archive all *html files using tar. 
archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension 
archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths 
archive all filepattern-*2009* files/directories under data/ into 2009.tar 
archive all filepattern-*2009* files/directories under data/ into 2009.tar 
archive all filepattern-*2009* files/directories under data/ into 2009.tar 
archive all files (not directories) in UNK_START folder1 UNK_END to UNK_START copy_of_folder1 UNK_END specifying to include files info.txt and data.zip 
archive all files beginning with .env or .bash in current directory to user's home directory on host "app1", preserving timestamps and skipping files that are newer on UNK_START app1 UNK_END 
archive all files specified on standard input under UNK_START /path/to/files UNK_END to UNK_START /path UNK_END on host UNK_START targethost UNK_END as user UNK_START user UNK_END with escalated privileges 
archive any files changed in the last day from UNK_START remote_host UNK_END to UNK_START local_dir UNK_END 
archive current directory to UNK_START /some/path UNK_END on localhost, using ssh to authentify as user "me", only update files that are newer in the source directory. 
archive directory UNK_START . UNK_END to UNK_START server2::sharename/b UNK_END 
archive directory UNK_START /mnt/data UNK_END to "/media/wd_disk_1/current_working_data/", deleting any extraneous files in destination, compress data during copy. 
archive directory UNK_START symdir UNK_END to UNK_START symdir_output UNK_END preserving symbolic links. 
archive directory UNK_START tata UNK_END to directory "tata2", compressing data during copy. 
archive directory specified by variable UNK_START i UNK_END to UNK_START /iscsi UNK_END preserving relative paths. 
archive directory specified by variable UNK_START myfolder UNK_END to current directory. 
archive file UNK_START file UNK_END with bzip2 tool, store compressed data to a file UNK_START logfile UNK_END and also print to screen 
archive files (not directories) in UNK_START sorce_dir UNK_END to UNK_START target_dir UNK_END 
archive files in UNK_START /mnt/source-tmp UNK_END to UNK_START /media/destination UNK_END 
archive preserving permissions and ownership files in UNK_START /var/www/ UNK_END on host UNK_START user@10.1.1.2 UNK_END to local UNK_START /var/www/ UNK_END 
archive showing progress UNK_START sourcefolder UNK_END to UNK_START /destinationfolder UNK_END excluding UNK_START thefoldertoexclude UNK_END 
archive showing progress all files in UNK_START /media/2tb\ data/data/music/ UNK_END to UNK_START /media/wd/network_sync/music/ UNK_END excluding files matching "*.vob", "*.avi", "*.mkv", "*.ts", "*.mpg", "*.iso", "*ar", "*.vob", "*.bup", "*.cdi", "*.iso", "*.shn", "*.mpg", "*.avi", "*.dat", "*.img", "*.nrg", "*.cdr", "*.bin", "*.mov", "*.goutputs*", "*.flv", "*.mov", "*.m2ts", "*.cdg", "*.ifo", "*.asf", and UNK_START *.ite UNK_END 
archive the entire file system into tarfile.tar.bz2 
archive the list of 1st level subdirectories in /fss/fin to /fss/fi/outfile.tar.gz 
as root, edit the cron job list of user UNK_START apache UNK_END using the editor specified by editor environment variable, or default /usr/bin/editor if this variable is not set. 
assign permissions 644 to files in the current directory tree 
assign permissions 755 to directories in the current directory tree 
assigns mac address 00:80:48:ba:d1:30 to interface eth0. 
attempt to connect as root to localhost and copy /home/reportuser/dailyreport.doc to directory /root/dailyreports/20150105/ - this will normally fail because ssh won't accept root connections by default. 
attempt to connect as root via ssh to host UNK_START ip UNK_END and copy /root/k to local machine, passing option UNK_START stricthostkeychecking=no UNK_END to the ssh backend - this will normally fail because ssh servers by default don't (and shouldn't) accept root logins. 
attempt to connect as root via ssh to host whose ip address or hostname is specified by environment variable ipaddress - this will normally fail because ssh servers normally don't accept root logins. 
back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory 
back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory 
backup all php files under the current directory tree 
backup all of the java files in the current directory tree by copying them and appending the suffix .bk to each 
brings down network interface eth0. 
build an UNK_START svn hotcopy UNK_END command for each subdirectory of /usr/local/svn/repos/ 
calculate and show md5 sums for every files under current directory tree 
calculate and show md5 sums for every files under current directory tree 
calculate md5 checksum of $key, take the 1st to 10th character, append them with the string UNK_START /tmp/command_cache. UNK_END and save the rsultant string to variable file 
calculate md5 checksum of $line and save to variable UNK_START md5 UNK_END 
calculate md5 checksum of UNK_START /etc/localtime UNK_END and save the first space separated part in variable UNK_START checksum UNK_END 
calculate md5 checksum of the list of all files/dirs in /path recursively including dot files and excluding the patterns 'run', 'sys', UNK_START tmp UNK_END and 'proc', then check the checksum against the checksum saved in /tmp/file 
calculate md5 checksum of thedirname 
calculate md5 sum of empty string 
calculate md5 sum of empty string 
calculate md5 sum of file $ecriv 
calculate md5 sum of file $item and save it to variable UNK_START md5 UNK_END 
calculate md5 sum of file ${my_iso_file} and save it to variable UNK_START md5 UNK_END 
calculate md5 sum of file ${my_iso_file} and save it to variable UNK_START md5 UNK_END 
calculate md5 sum of files $source_file and $dest_file 
calculate md5 sum of the md5 sum of all the sorted files under $path 
calculate md5 sums for each files matching UNK_START main.cpp* UNK_END 
calculate the md5 checksum of the current directory structure and save it in variable sum 
calculate the md5 sum of UNK_START a UNK_END 
calculate the md5 sum of UNK_START examplestring UNK_END 
calculate the md5 sum of UNK_START password UNK_END 
calculate the md5 sum of UNK_START yourstring UNK_END 
calculate the md5 sum of all UNK_START .py UNK_END files in UNK_START /your/dir UNK_END including content and filenames 
calculate the md5 sum of all *.py files in the current directory 
calculate the md5 sum of all files in UNK_START /your/dir UNK_END including content and filenames 
calculate the md5 sum of all files in UNK_START /your/dir UNK_END including content and filenames and following symbolic links 
calculate the md5 sum of all the file metadata in the current directory tree excluding UNK_START .svn UNK_END 
calculate the md5 sum of every UNK_START .py UNK_END file in directory tree UNK_START /path UNK_END 
calculate the md5 sum of hex byte 61 
calculate the md5 sum of the contents of UNK_START $files UNK_END 
calculate the md5 sum of the contents of all files sorted in directory tree UNK_START /path UNK_END 
calculate the md5 sum of the contents of the sorted list of files UNK_START $files UNK_END 
calculate the md5 sum of the file UNK_START filename UNK_END and print only the hash 
calculate the md5 sum of the list of files in the current directory 
calculate the md5 sum of the md5 sum of all the files sorted under UNK_START $path UNK_END 
calculate the md5 sum of the output of UNK_START du -csxb /path UNK_END and compare it against the md5 sum saved in UNK_START file UNK_END 
calculate the md5 sum of the tar archive of UNK_START dir UNK_END 
calculate the md5sum of all the files with name "mycprogram.c", ignoring case 
calculate the md5sum of the executable file of command UNK_START cc UNK_END 
calculate the md5sum of the executable file of command UNK_START gcc UNK_END 
calculate the md5sum of the executable file of command UNK_START c++ UNK_END 
case-insensitive search all existing environment variables and their values for "shell". 
change all UNK_START jpg UNK_END filename suffixes in current directory to "jpeg". 
change all directories under UNK_START ./bootstrap/cache/ UNK_END to owner UNK_START apache UNK_END and group UNK_START laravel UNK_END 
change all directories under UNK_START ./storage/ UNK_END to owner UNK_START apache UNK_END and group UNK_START laravel UNK_END 
change all file permissions to 664 and all directory permissions to 775 in directory tree UNK_START htdocs UNK_END 
change all files in UNK_START ~ UNK_END which are owned by the group UNK_START vboxusers UNK_END to be owned by the user group UNK_START kent UNK_END 
change all files in the current directory tree to owner UNK_START xx UNK_END 
change all files with no user under UNK_START /var/www UNK_END to have owner UNK_START root UNK_END and group UNK_START apache UNK_END 
change directory to UNK_START $dir1 UNK_END and resolve any symlinks in the resulting path 
change directory to UNK_START /lib/modules/ UNK_END of the current kernel release 
change directory to UNK_START /path/to/pdf UNK_END 
change directory to parent directory and do not resolve any symlinks in the resulting path 
change directory to the UNK_START lib UNK_END directory located two parent directories above the path to command UNK_START perl UNK_END 
change directory to the alphabetically last path under the current directory 
change directory to the basename of UNK_START $1 UNK_END with UNK_START .tar.gz UNK_END removed 
change directory to the current user's home directory 
change directory to the directory containing file path UNK_START $1 UNK_END 
change directory to the directory containing the UNK_START oracle UNK_END executable 
change directory to the directory containing the UNK_START oracle UNK_END executable 
change directory to the directory containing the UNK_START oracle UNK_END executable 
change directory to the directory containing the current script 
change directory to the directory containing the executable file of command UNK_START oracle UNK_END 
change directory to the download directory specified in the current user's user-dirs.dirs file 
change directory to the download directory specified in the current user's user-dirs.dirs file 
change directory to the output of command UNK_START ~/marker.sh go UNK_START $@ UNK_END UNK_END 
change directory to the parent of the real path of the current script 
change directory to the real path of the current working directory of process UNK_START $pid UNK_END 
change directory to the real path of the directory containing the current script 
change directory to the user's home directory 
change every directory under UNK_START /var/www/html/ UNK_END to have permissions 775 
change every file under UNK_START /var/www/html/ UNK_END to have permissions 664 
change file owner and group of UNK_START /path/to/yourapp UNK_END to root and print a diagnostic 
change file permissions on all regular files within a directory 
change folder to the one where $0 link target file is located. 
change group ownership to `foo' for files with gid=2000 
change mode of all files ending with UNK_START .php UNK_END under the current folder to 755 and write the output to the console and UNK_START logfile.txt UNK_END file 
change onwer of UNK_START file UNK_END to UNK_START user_name UNK_END 
change onwer to UNK_START root UNK_END and group to UNK_START wheel UNK_END of UNK_START com.xxxx.adbind.plist UNK_END 
change owner and group of UNK_START script.sh UNK_END to UNK_START root UNK_END 
change owner of UNK_START folder UNK_END to UNK_START user_name UNK_END 
change owner of UNK_START my_test_expect.exp UNK_END to UNK_START el UNK_END 
change owner to UNK_START $1 UNK_END and group to UNK_START httpd UNK_END of UNK_START .htaccess UNK_END 
change owner to UNK_START $fuid UNK_END and group to UNK_START $fgid UNK_END of UNK_START $file2 UNK_END 
change owner to UNK_START $user UNK_END and group to UNK_START $group UNK_END of UNK_START $file UNK_END 
change owner to UNK_START bob UNK_END and group to UNK_START sftponly UNK_END of UNK_START /home/bob/writable UNK_END 
change owner to UNK_START root UNK_END and group to UNK_START dockerroot UNK_END of UNK_START /var/run/docker.sock UNK_END 
change owner to UNK_START root UNK_END and group to UNK_START wheel UNK_END of UNK_START adbind.bash UNK_END 
change owner to UNK_START root UNK_END and group to UNK_START wheel UNK_END of UNK_START bin UNK_END 
change owner to UNK_START root UNK_END and group to UNK_START www-data UNK_END of UNK_START /foobar/test_file UNK_END 
change ownership of UNK_START /data/db UNK_END to the current user 
change ownership of UNK_START /vol UNK_END to the current user 
change permission to 000 of all directories named UNK_START .texturedata UNK_END under UNK_START /path/to/look/in/ UNK_END directory tree 
change permission to 000 of all directories named UNK_START .texturedata UNK_END under UNK_START /path/to/look/in/ UNK_END directory tree 
change permission to 755 for all directories under $d directory tree 
change permission to 755 of all files/directories under current directory tree that have 777 permission 
change permissions for all php files under the current directory tree to 755 
change permissions for all php files under the current directory tree to 755 and print the number of files changed 
change permissions for all php files under the current directory tree to 755 and print the number of files changed 
change permissions of ".bash_logout", ".bashrc", and UNK_START .profile UNK_END to 444 
change permissions of UNK_START .git/hooks/pre-commit UNK_END to 777 
change permissions of UNK_START .git/hooks/prepare-commit-msg UNK_END to 777 
change permissions of UNK_START /dvtcolorconvert.rb UNK_END to 755 
change permissions of UNK_START /usr/bin/wget UNK_END to 777 
change permissions of UNK_START mksdcard UNK_END to 755 
change permissions of all directories from the current directory tree to 644 
change permissions of all directories in the ~/dir_data directory tree in accordance with mode `a+xr,u+w' 
change permissions of all directories residing under and below ./debian to 755 
change permissions of all files ending UNK_START .php UNK_END under the current directory to 755 and print a count of modified files 
change permissions of all files ending in UNK_START .php UNK_END under the current directory to 755 and print a UNK_START + UNK_END for each file 
change permissions of all files ending in UNK_START .php UNK_END under the current directory to 755 and print a count of modified files 
change permissions of all regular files from the current directory tree to 644 
change permissions of all regular files in the ~/dir_data directory tree in accordance with mode `a-x,u+w' 
change permissions of directory UNK_START /home/sshtunnel/ UNK_END to 555 
change permissions to 0755 for all directories in the /path directory tree 
change permissions to 0755 for all directories in the /path directory tree 
change permissions to 0755 for all directories in the /path directory tree 
change permissions to 500 for all regular files under and below the current directory 
change permissions to 600 for all regular .rb files in the current directory tree 
change permissions to 644 for *.html files under /usr/local 
change permissions to 644 for all directories under and below /path/to/somedirectory/ 
change permissions to 644 for all files in the current directory tree 
change permissions to 644 for all files in the current directory tree 
change permissions to 644 for all files showing the respective chmod command 
change permissions to 644 for all regular files under and below /path/to/somedirectory/ 
change permissions to 644 for all regular files under the /path/to/dir/ tree 
change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set 
change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set 
change permissions to 644 for all subdirectories 
change permissions to 644 of multiple files with permissions 755 
change permissions to 644 of multiple regular files with permissions 755 
change permissions to 644 recursively for php files. 
change permissions to 644 recursively only for files 
change permissions to 700 for directories at the current level and deeper 
change permissions to 700 for files and directories deeper than the current directory 
change permissions to 755 for all directories in the /path/to/dir directory tree 
change permissions to 755 for all directories in the current directory tree 
change permissions to 755 recursively only for directories 
change permissions to 777 for all directories in the current directory tree 
change permissions to u=rw,g=r,o= for all files in the current directory tree 
change permissions to u=rw,g=r,o= for all files inside the current directory tree 
change permissions to u=rwx,g=rx,o= for all directories in the current directory tree 
change permissions to u=rwx,g=rx,o= for all directories inside the current directory tree 
change permssions of *.cgi files under directories htdocs and cgi-bin to 755 
change symbolic link UNK_START $f UNK_END into a file 
change the group of UNK_START myfile UNK_END to UNK_START friends UNK_END 
change the group to `temp' for all files in the current directory tree that belong to group `root' 
change the owner and group of UNK_START it UNK_END to UNK_START root UNK_END 
change the owner and group of UNK_START testfile.txt UNK_END to UNK_START root UNK_END 
change the owner and group of UNK_START uid_demo UNK_END to UNK_START root UNK_END 
change the owner of UNK_START $jboss_console_log UNK_END to UNK_START $jboss_user UNK_END 
change the owner of UNK_START /var/www/html/mysite/images/ UNK_END to UNK_START nobody UNK_END 
change the owner of UNK_START /var/www/html/mysite/tmp_file_upload/ UNK_END to UNK_START nobody UNK_END 
change the owner of UNK_START destination_dir UNK_END to UNK_START user UNK_END 
change the owner of UNK_START process UNK_END to UNK_START root UNK_END 
change the owner of all UNK_START .txt UNK_END files in directory tree UNK_START /mydir UNK_END to UNK_START root UNK_END 
change the owner of all files in UNK_START /empty_dir/ UNK_END to UNK_START root UNK_END using at most 10 files at a time 
change the owner of all files in UNK_START /empty_dir/ UNK_END to UNK_START root UNK_END using at most 10 files at a time 
change the owner of all files in the current directory tree excluding those who match UNK_START ./var/foo* UNK_END to UNK_START www-data UNK_END 
change the owner of all files in the directory tree UNK_START dir_to_start UNK_END excluding directory UNK_START dir_to_exclude UNK_END to UNK_START owner UNK_END 
change the owner of all files in the directory tree UNK_START dir_to_start UNK_END excluding file UNK_START file_to_exclude UNK_END to UNK_START owner UNK_END 
change the owner to UNK_START hduser UNK_END and group to UNK_START hadoop UNK_END of UNK_START {directory path} UNK_END 
change the owner to UNK_START owner UNK_END and group to UNK_START nobody UNK_END of UNK_START public_html UNK_END 
change the owner to UNK_START root UNK_END and group to UNK_START specialusers UNK_END of UNK_START dir1 UNK_END 
change the owner to UNK_START user UNK_END and group to UNK_START group UNK_END of files UNK_START file ... UNK_END 
change the ownership of UNK_START /etc/udev/rules.d/51-android.rules UNK_END to UNK_START root UNK_END 
change the ownership of UNK_START /home/bob UNK_END to UNK_START root UNK_END 
change the ownership of UNK_START file.sh UNK_END to UNK_START root UNK_END 
change the ownership of all aluno1's files in the current directory and below to aluno2 
change the ownership of all files in the current directory tree from root to www-data 
change the ownership of all files in the current directory tree to myuser:a-common-group-name 
change the ownership to eva for all files/directories that belong to the user UNK_START george UNK_END in the entire file system without traversing to other devices/partitions 
change the ownership to the user daisy for all directories under current directory that are owned by harry 
change the permission of all regular files under current directory tree to 644 
change the permission to 0644 for all files under current directory 
change the permission to 0644 for all files under current directory 
change the permission to 0755 for all directories under current directory 
change the permission to 644 for all files under current directory 
change the permission to 644 for all files under current directory 
change the permission to 755 for all directories under current directory 
change the permissions of all regular files whose names end with .mp3 in the directory tree /var/ftp/mp3 
change the permissions of every directory in the current directory and all files and directories within them to 700 
change the permissions of the current directory and all its subdirectories to 755. 
change the timestamp of symbolic link UNK_START somesymlink UNK_END to current date/time 
change the user and group of all files and directories under /var/www to www-data:www-data 
change the user to daisy for directories and subdirectories owned by harry 
change to directory UNK_START foo UNK_END and print to terminal all received on standard input 
change to directory UNK_START xyz UNK_END and resolve any symlinks in the resulting path, making the physical path the current one. 
change to directory listed in file UNK_START $home/.lastdir UNK_END 
change to folder where the oracle binary is. 
change to folder where the oracle binary is. 
change to folder where the oracle binary is. 
change to folder where the oracle binary is. 
change to folder where the oracle binary is. 
change to location of UNK_START $target_file UNK_END file. 
change to parent directory and resolve any symlinks in the resulting path, making the physical path the current one. 
change to the directory containing the UNK_START oracle UNK_END executable 
change to the directory of the executable UNK_START python UNK_END 
change to the directory pointed by variable tag 
change user ownership to `foo' for files with uid=1005 
change user to UNK_START amzadm UNK_END and group to UNK_START root UNK_END of UNK_START /usr/bin/aws UNK_END 
changes group ownership of UNK_START /etc/btsync/[prefered conf name].conf UNK_END to 'btsync'. 
changes group ownership of UNK_START /home/www-user/php_user.sh UNK_END to 'www-data'. 
changes group ownership of UNK_START /var/run/fcgiwrap.socket UNK_END to 'forge'. 
changes group ownership of UNK_START logdir UNK_END to 'loggroup'. 
changes group ownership of UNK_START myprog UNK_END to 'groupb'. 
changes group ownership of UNK_START myprogram UNK_END to ${user} (the current user) 
changes group ownership of UNK_START public UNK_END and UNK_START private UNK_END to 'god'. 
changes group ownership of UNK_START public UNK_END to 'pub'. 
changes group ownership of UNK_START shared UNK_END to 'workers'. 
changes group ownership of UNK_START target_directory UNK_END to 'target_group'. 
changes group ownership of /sys/class/gpio/export and /sys/class/gpio/unexport to 'gpio'. 
changes the group of defined file. 
changes to the directory where UNK_START ssh UNK_END executable is located. 
check all .txt files whether they contain UNK_START needle UNK_END 
check all .txt files whose names may contain spaces whether they contain UNK_START needle UNK_END 
check if UNK_START $file UNK_END contains dos line endings 
check if UNK_START \[$vlabel\] UNK_END is mounted and save the result in variable UNK_START amv UNK_END 
check if UNK_START ~/mnt/sdc1 UNK_END is mounted 
check if $path_in_question is mount point of filesystem 
check if UNK_START nullglob UNK_END shell option is enabled, and if so, saves its status in UNK_START is_nullglob UNK_END variable. 
check if a drive is mounted to nfs 
check if a drive with uuid UNK_START $uuid UNK_END is mounted 
check if content of all top-level *.txt files in the current directory contain only unique lines 
check if current system is running in 64-bit addressing. 
check if directory $some_dir is empty 
check if process id 1 exists (init or systemd) and current user has permission to send it signals. 
check if the $somedir directory is empty 
check if the contents of file UNK_START subset UNK_END is a subset of file UNK_START set UNK_END 
check if the directory tree whose name is given as variable $somedir contains no regular files 
check if the file UNK_START somelink UNK_END links to exists 
check md5sum of directory /path against the checksum saved in file UNK_START file UNK_END 
check that the master ssh control socket UNK_START my-ctrl-socket UNK_END to UNK_START jm@sampledomain.com UNK_END is running 
check that the master ssh connection UNK_START officefirewall UNK_END is running 
check the environment variables generated by switching to the root account. 
check whether UNK_START $path_in_question UNK_END is a mount point 
check whether UNK_START /full/path UNK_END is a mount point with no output and using the exit code 
checks compressed file integrity. 
checks that UNK_START monit UNK_END user is in UNK_START www-data UNK_END group. 
clean directories and subdirectories of the temporary files generated during normal use 
clean the current directory from all subversion directories recursively 
clear the in-memory history 
clear the in-memory history and read from the current history file 
clear the terminal's search history 
clears terminal screen. 
clears the terminal screen. 
close the master ssh control socket UNK_START my-ctrl-socket UNK_END to UNK_START jm@sampledomain.com UNK_END 
combine every two lines of standard input 
compare UNK_START $source_file UNK_END and UNK_START $dest_file UNK_END line by line 
compare UNK_START current.log UNK_END and UNK_START previous.log UNK_END line by line and print lines containing regex pattern UNK_START >\|< UNK_END 
compare UNK_START fastcgi_params UNK_END and UNK_START fastcgi.conf UNK_END line by line, output 3 lines of unified context, and print the c function the change is in 
compare UNK_START file1 UNK_END and UNK_START file2 UNK_END line by line with 3 lines of unified context 
compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ 
compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff' 
compare each .xml file under the current directory with a file of the same name in UNK_START /destination/dir/2 UNK_END 
compare each file in UNK_START repos1/ UNK_END and "repos2/", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context 
compare files UNK_START a1 UNK_END and UNK_START a2 UNK_END with 3 lines of unified context and print lines beginning with UNK_START + UNK_END 
compare files UNK_START file1 UNK_END and UNK_START file2 UNK_END and print in three columns strings unique for first file, second file, and common ones 
compare files in UNK_START /tmp/dir1 UNK_END and "/tmp/dir2", treat absent files as empty and all files as text, and print 3 lines of unified context 
compare files in UNK_START /tmp/dir1 UNK_END and "/tmp/dir2", treating absent files as empty and all files as text 
compare sorted files UNK_START f1.txt UNK_END and UNK_START f2.txt UNK_END and print in three columns strings unique for first file, second file, and common ones 
compare sorted files UNK_START f1.txt UNK_END and UNK_START f2.txt UNK_END and print in three columns strings unique for first file, second file, and common ones 
compare text UNK_START hello UNK_END and UNK_START goodbye UNK_END line by line 
compare the contents of UNK_START /bin UNK_END and UNK_START /usr/bin UNK_END line by line 
compare the contents of gzip-ompressed files UNK_START file1 UNK_END and UNK_START file2 UNK_END 
compare the files in UNK_START folder1 UNK_END and UNK_START folder2 UNK_END and show which ones are indentical and which ones differ 
compares two listings UNK_START ls UNK_END and 'ls *music*', showing only strings that unique for first listing. 
compose filepath as folder path where file $src is located, and lowercase filename of $src file, and save it in UNK_START dst UNK_END variable 
compose filepath as folder path where file $f is located, and lowercase filename of $f file, and save it in UNK_START g UNK_END variable 
composes full process tree with process id numbers, and prints only those strings that contain 'git'. 
compress UNK_START archive.tar UNK_END 
compress UNK_START hello world UNK_END and save to variable UNK_START hey UNK_END 
compress UNK_START my_large_file UNK_END with gzip and split the result into files of size 1024 mib with prefix UNK_START myfile_split.gz_ UNK_END 
compress $file file using gzip 
compress a file named UNK_START {} UNK_END in the current directory 
compress all UNK_START .txt UNK_END files in all sub directories with gzip 
compress all UNK_START .txt UNK_END files in the current directory tree with gzip 
compress all *.img files using bzip2 
compress all directories found in $logdir wherein a file's data has been modified within the last 24 hours 
compress all directories found in directory tree $logdir that have been modified within the last 24 hours 
compress all files in directory UNK_START $path_to_logs UNK_END that were last modified more than UNK_START $some_number_of_days UNK_END days ago 
compress all files in the UNK_START $file UNK_END directory tree that were last modified 30 days ago 
compress all files in the UNK_START $file UNK_END directory tree that were last modified 30 days ago and have not already been compressed with gzip 
compress all files under /source directory tree using gzip with best compression method 
compress all files under current directory tree with gzip 
compress all files with UNK_START .txt UNK_END extension under current directory 
compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in UNK_START .log UNK_END 
compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in UNK_START .log UNK_END 
compress every file in the current directory that matches UNK_START *cache.html UNK_END and keep the original file 
compress every file in the current directory tree that matches UNK_START *cache.html UNK_END and keep the original file 
compress every file in the current directory tree with gzip and keep file extensions the same 
compress files excluding *.z files 
compress from standard input and print the byte count preceded with UNK_START gzip. UNK_END 
compress from standard input with gzip 
compress in parallel regular files in the current directory tree that were last modified more than 7 days ago 
compress regular files in the current directory tree that were last modified more than 7 days ago 
compress the file UNK_START file UNK_END with UNK_START bzip2 UNK_END and append all output to the file UNK_START logfile UNK_END and stdout 
compresses all UNK_START *.xml UNK_END files under current directory with UNK_START bzip2 UNK_END utility. 
compresses all files in a current folder (not recursively). 
compresses all files in the directory UNK_START path_to_folder UNK_END without recursion and keeps uncompressed files from deletion. 
compresses all files listed in array $*, executing in background. 
compresses file UNK_START example.log UNK_END keeping original file in place. 
compresses with compression level 9 all files under the current folder but already compressed UNK_START *.bz2 UNK_END files, performing in background. 
concatenate all files under the current directory and below that contain UNK_START test UNK_END in their names 
concatenate files containing `test' in their names 
concatenate with a space every other line in UNK_START input.txt UNK_END 
connect as ssh user specified by variable user to host whose ip address or host name is specified by host, and copy remote file specified by variable src to location on local host specified by variable dest, disabling progress info but enabling debug info. 
connect to UNK_START $user_at_host UNK_END using connection sharing on UNK_START $sshsocket UNK_END and request the master to exit 
connect to host UNK_START $user_at_host UNK_END in master mode in the background without executing any commands and set the controlpath to UNK_START $sshsocket UNK_END 
connect to host UNK_START ${hostname} UNK_END as user UNK_START ${username} UNK_END and execute UNK_START ${script} UNK_END non-interactively 
connect to host UNK_START remotehost UNK_END as ssh user UNK_START user UNK_END to copy remote file UNK_START /location/kmst_datafile_*.kms UNK_END to current directory on local host. 
connect to host UNK_START server_b UNK_END as ssh user UNK_START user UNK_END and copy local file UNK_START /my_folder/my_file.xml UNK_END to server_b's directory "/my_new_folder/". 
connect to host UNK_START hostname UNK_END as user UNK_START username UNK_END by forcing host key confirmation 
connect to port 1234 of specified ip address or hostname as ssh user "user", and copy all visible files in /var/www/mywebsite/dumps/ on this host to local directory /mynewpathoncurrentlocalmachine - this directory must already exist on local host. 
connect to port 2222 of example.com as ssh user "user", and copy local file UNK_START /absolute_path/source-folder/some-file UNK_END to remote directory UNK_START /absolute_path/destination-folder UNK_END 
connect via ssh to UNK_START your.server.example.com UNK_END and recursively copy directory UNK_START /path/to/foo UNK_END on this host to direcotry UNK_START /home/user/desktop UNK_END on local host, using UNK_START blowfish UNK_END cipher algorithm. 
continuously answer UNK_START y UNK_END to any prompt from UNK_START mv ... UNK_END 
continuously send UNK_START y UNK_END to all prompts of command UNK_START rm UNK_END 
convert UNK_START 1199092913 UNK_END to dotted decimal ipv4 address 
convert UNK_START ; UNK_END separated list UNK_START luke;yoda;leila UNK_END to new line separated list 
convert UNK_START abc UNK_END to a string of hexadecimal bytes 
convert relative path UNK_START /x/y/../../a/b/z/../c/d UNK_END into absolute path with resolved symbolic links 
convert relative symbolic link UNK_START $link UNK_END to absolute symbolic link 
convert standard input into a dump of octal bytes without the first 8 bytes of address and count the unique results 
convert the content of variable UNK_START clean UNK_END to small letters 
convert the contents of UNK_START var1 UNK_END variable to lowercase 
convert the first 16 characters in UNK_START /dev/random UNK_END to a single hexadecimal value 
copies ""$project_dir"/itunesartwork", to the 'payload/itunesartwork', rewriting files if necessary. 
copies ${file} to collect folder with unique name formatted like 'job_xxxxxxxxx'. 
copies UNK_START [macvim_source_folder]/src/macvim/mvim UNK_END to the '/usr/local/bin', printing info message on each operation. 
copies UNK_START libgtest_main.so UNK_END and UNK_START libgtest.so UNK_END to '/usr/lib/', preserving all attributes, and copying symlinks as symlinks, without following in source files. 
copies UNK_START src UNK_END to UNK_START dest UNK_END preserving overwriting the existing files. 
copies all files like UNK_START *foobar* UNK_END under the current directory to the UNK_START ~/foobar UNK_END directory. 
copies all files like UNK_START lib*.so UNK_END to UNK_START ~/usr/gtest/lib/ UNK_END directory. 
copies all files under current directory like UNK_START *foobar* UNK_END to the UNK_START ~/foo/bar UNK_END directory. 
copies all files under the current directory but ones with UNK_START */not-from-here/* UNK_END in path to the UNK_START /dest/ UNK_END directory. 
copies all files under the current directory like any-cased UNK_START *foobar* UNK_END to the UNK_START ~/foo/bar UNK_END directory. 
copies all files under the current folder like UNK_START file.ext UNK_END with UNK_START foobar UNK_END in the path to the root of the current folder, preserving mode, ownership and timestamp attributes. 
copies all files with UNK_START foobar UNK_END in the path under the current directory to the UNK_START ~/foo/bar UNK_END directory. 
copies defined file to the target folder without overwriting existing files. 
copies file UNK_START /boot/config-`uname -r` UNK_END to the '.config', printing info message and prompting before owerwriting files. 
copies file UNK_START file.dat UNK_END to each top-level directory in the current directory. 
copies file UNK_START file.txt UNK_END to each top-level directory in the current directory. 
copies file UNK_START file1 UNK_END to each of directories 'dir1', 'dir2', 'dir3'. 
copies file UNK_START filename.txt UNK_END to each of directories listed in the UNK_START allfolders.txt UNK_END list. 
copies file UNK_START index.html UNK_END to each top-level directory in the current directory beginning with 'd'. 
copies file UNK_START index.html UNK_END to each top-level directory in the current directory. 
copies file UNK_START test UNK_END to each of directories like './fs*/*'. 
copies files UNK_START src/prog.js UNK_END and UNK_START images/icon.jpg UNK_END with fully-defined path to UNK_START /tmp/package UNK_END directory. 
copies newest file under the current folder to the UNK_START /tmp/ UNK_END 
copy "*.cc", "*.h", and UNK_START sconstruct UNK_END to UNK_START rsync://localhost:40001/bledge_ce UNK_END using blocking io 
copy UNK_START ./export UNK_END recursively to UNK_START /path/to/webroot UNK_END preserving permissions 
copy UNK_START /users/username/path/on/machine/ UNK_END to UNK_START username@server.ip.address.here:/home/username/path/on/server/ UNK_END and convert encoding from utf-8-mac to utf-8 
copy UNK_START /home/username/path/on/server/ UNK_END to UNK_START username@your.ip.address.here:/users/username/path/on/machine/ UNK_END and convert encoding from utf-8 to utf-8-mac 
copy UNK_START /new/x/y/z/ UNK_END over the network to UNK_START user@remote:/pre_existing/dir/ UNK_END preserving the directory hierarchy 
copy UNK_START /path/to/source UNK_END to UNK_START /path/to/dest UNK_END in remote UNK_START username@computer UNK_END 
copy UNK_START 6.3.3/6.3.3/macosx/bin/mybinary UNK_END to UNK_START ~/work/binaries/macosx/6.3.3/ UNK_END and create directory UNK_START ~/work/binaries/macosx/6.3.3/ UNK_END if UNK_START ~/work/binaries/macosx/ UNK_END exists 
copy UNK_START filename.txt UNK_END to all directories listed in UNK_START allfolders.txt UNK_END - names may not contain spaces. 
copy UNK_START some_file_name UNK_END to UNK_START destination_directory UNK_END and change ownership to UNK_START someuser:somegroup UNK_END 
copy UNK_START source UNK_END recursively to UNK_START destination UNK_END excluding UNK_START path1/to/exclude UNK_END and UNK_START path2/to/exclude UNK_END 
copy UNK_START src UNK_END to UNK_START dest UNK_END if UNK_START src UNK_END is newer than UNK_START dest UNK_END 
copy UNK_START src/prog.js UNK_END and UNK_START images/icon.jpg UNK_END to UNK_START /tmp/package UNK_END keeping relative path names 
copy UNK_START src/prog.js UNK_END and UNK_START images/icon.jpg UNK_END to UNK_START /tmp/package/ UNK_END keeping relative path names 
copy UNK_START /path/to/source UNK_END from remote UNK_START username@computer UNK_END to local UNK_START /path/to/dest UNK_END 
copy *.mp3 files to /tmp/musicfiles 
copy *.txt files from the dir/ directory tree along with their parent directories 
copy /my/configfile to all empty directories of the $somedir directory tree 
copy a comlex directory tree from one machine o another while preserving copy permissions and ownership 
copy a file xyz.c to all directories or over all files matching the letter UNK_START c UNK_END at the end of their names under current directory tree 
copy a file xyz.c to all the .c files present in the c directory and below 
copy a file xyz.c to all the directories below the current one whose names begin with UNK_START temp UNK_END 
copy a large sparse file UNK_START sparse-1 UNK_END to UNK_START sparse-1-copy UNK_END 
copy a whole directory tree skipping files residing on other files systems to destination_dir 
copy all UNK_START .php UNK_END files in UNK_START projects/ UNK_END directory tree to UNK_START copy/ UNK_END preserving directory hierarchy 
copy all UNK_START .xml UNK_END files in the current directory tree to UNK_START /new/parent/dir UNK_END preserving the directory hierarchy 
copy all *.data files under /source_path to /target_path 
copy all *.mp3 files under the current directory to /tmp/musicfiles/ 
copy all .patch files from the current directory tree to patches/ 
copy all .pdf files in the ./work/ directory tree with size bigger then 2 mb and modified more than 5 days ago to the ./backup/ directory 
copy all .png files from the home directory tree to imagesdir/ 
copy all .txt files from the dir/ directory tree along with their parent directories hierarchy 
copy all directories recursively from UNK_START source/ UNK_END to UNK_START destination/ UNK_END excluding all files 
copy all directories recursively from UNK_START source/ UNK_END to UNK_START destination/ UNK_END excluding all files 
copy all files (not directories) in UNK_START /path/to/local/storage UNK_END to UNK_START /path/to/copy UNK_END on host UNK_START remote.host UNK_END authenticating as user UNK_START user UNK_END 
copy all files and directories in UNK_START /home/ UNK_END to UNK_START /newhome UNK_END preserving directory hierarchy and modification time 
copy all files and directories under the current directory into UNK_START ../new UNK_END preserving relative paths 
copy all files below the current directory whose names contain UNK_START foobar UNK_END to directory foo/bar/ in user's home directory. 
copy all files below the current directory whose names contain UNK_START foobar UNK_END to directory foo/bar/ in user's home directory. 
copy all files below the current directory whose names contain UNK_START foobar UNK_END (case-insensitive) to directory foo/bar/ in user's home directory. 
copy all files ending in UNK_START .a UNK_END in directory trees matching UNK_START folder* UNK_END to UNK_START /path/to/dest UNK_END preserving directory hierarchy 
copy all files from the current directory tree to /path/to/destination/dir preserving their times, permissions, and ownership 
copy all files in UNK_START /mail UNK_END to UNK_START /home/username UNK_END preserving the directory hierarchy and modification times 
copy all files in UNK_START /var/spool/mail UNK_END to UNK_START /home/username/mail UNK_END preserving the directory hierarchy and modification times 
copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure 
copy all files in current directory that do not match */not-from-here/* in their names to /dest 
copy all files in current directory that do not match */not-from-here/* in their paths to /dest 
copy all files in the current directory except those containing UNK_START music UNK_END to '/target_directory'. 
copy all files in the current directory tree matching UNK_START texttosearch UNK_END to UNK_START $destination_path UNK_END 
copy all files matching UNK_START *.sh UNK_END in UNK_START $from/* UNK_END to UNK_START root@$host:/home/tmp/ UNK_END compressing data during transmission 
copy all files matching UNK_START *failed.ipynb UNK_END in the current directory tree to UNK_START ./fails UNK_END preserving the directory hierarchy 
copy all files matching UNK_START file_name.extension UNK_END to UNK_START /path/to/receiving/folder UNK_END preserving directory hierarchy 
copy all files named UNK_START script.sh UNK_END in directory UNK_START olddir UNK_END to directory UNK_START newdir UNK_END 
copy all files that match UNK_START foobar UNK_END in their paths under current directory tree to the UNK_START ~/foo/bar UNK_END directory 
copy all files unconditionally and directories in directory tree UNK_START myfiles UNK_END to UNK_START target-dir UNK_END preserving directory hierarchy and modification time 
copy all files under director UNK_START foo UNK_END whose name doesn't contain UNK_START music UNK_END to directory 'bar'. 
copy all files with UNK_START .png UNK_END (case insensitive) extension under UNK_START /home/mine UNK_END directory tree to UNK_START /home/mine/pngcoppies/ UNK_END directory with new names constructed by prepending UNK_START copy UNK_END in their names 
copy all files with UNK_START .png UNK_END (case insensitive) extension under UNK_START /home/mine UNK_END directory tree to UNK_START /home/mine/pngcoppies/copy. UNK_END directory 
copy all files with name pattern $j.sh (case insensitive) under UNK_START /tmp/2 UNK_END directory tree to $i directory 
copy all regular files from the current directory tree to directory `target' 
copy all regular files whose names end in UNK_START ~ UNK_END from the /path directory tree to ~/backups/ 
copy an entire file structure, creating empty files in the copy instead of copying the actual files. 
copy and always overwrite all files in UNK_START /zzz/zzz UNK_END to UNK_START /xxx/xxx UNK_END 
copy directory hierarchy UNK_START dir UNK_END and all its .txt files to UNK_START dir_txt UNK_END 
copy directory hierarchy from the current working directory to UNK_START /path/to/backup/ UNK_END 
copy directory structure from directory UNK_START olddir UNK_END to UNK_START newdir UNK_END 
copy directory tree preserving uid and gid and leaving user files alone 
copy file UNK_START exist UNK_END from directory UNK_START /file/that UNK_END to a new file named UNK_START file UNK_END in UNK_START /location/for/new UNK_END 
copy file UNK_START src UNK_END to 'dest', except if UNK_START dest UNK_END already exists. 
copy file header.shtml to directories dir1, dir2, dir3, and dir4 
copy file in current directory of local host to host "remote", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer. 
copy file linked to by UNK_START bar.pdf UNK_END to UNK_START bar.pdf UNK_END 
copy file linked to by UNK_START file UNK_END to UNK_START file UNK_END 
copy file or directory UNK_START gtest UNK_END from directory UNK_START include UNK_END in current directory to /usr/include, preserving ownerships and permissions. 
copy file or folder linked to by UNK_START file UNK_END to UNK_START file UNK_END 
copy local file UNK_START $1 UNK_END to host UNK_START $2 UNK_END into host directory UNK_START $3 UNK_END 
copy permissions from UNK_START version2/somefile UNK_END to UNK_START version1/somefile UNK_END 
copy recursively UNK_START /source/backup UNK_END to UNK_START /destination UNK_END preserving symbolic links, modification times, and permissions 
copy recursively UNK_START tata/ UNK_END to UNK_START tata2/ UNK_END and remove read, write, and execute permission for other 
copy src_dir recursively to dest_dir, but without overwriting existing files. 
copy the 3 specified files to /tmp/package, preserving/creating directory structure of each file as specified on command line. 
copy the current directory tree to UNK_START newdirpathname UNK_END preserving directory hierarchy 
copy the current directory tree to UNK_START /path/to/destination/dir UNK_END preserving permissions, timestamp and ownership 
copy the directory hierarchy from UNK_START original UNK_END to UNK_START new UNK_END 
copy the directory hierarchy of the current directory to UNK_START destdir UNK_END 
copy the directory structure in UNK_START src/ UNK_END to UNK_START dest/ UNK_END with empty files 
copy the entire UNK_START /lib UNK_END and UNK_START /usr UNK_END directory including symlinks from UNK_START pi@192.168.1.pi UNK_END to UNK_START $home/raspberrypi/rootfs UNK_END and delete files after the transfer 
copy the entire contents of the current directory preserving ownership, permissions, and times 
copy the entire directory tree under t1 to t2, do not create a containing t1 directory in t2. 
copy the executable UNK_START python2.7 UNK_END in $path to UNK_START myenv/bin/python UNK_END 
copy the owner and group from UNK_START file.txt UNK_END to UNK_START $tempfile UNK_END 
copy the owner and group of UNK_START oldfile UNK_END to UNK_START newfile UNK_END 
copy the standard output of a UNK_START bash UNK_END session to UNK_START /var/log/bash.out.log UNK_END 
correct permissions for directories in the web directory 
correct permissions for files in the web directory 
count all directories in maximum 1 level down the current directory 
count all directories under current directory 
count all files under UNK_START /dir UNK_END 
count all the lines of all UNK_START *.c UNK_END files in current directory recursively 
count all the lines of all files with names ending with UNK_START php UNK_END in current directory recursively 
count all the lines of all php files in current directory recursively 
count all the mp3 files in the music user's home and subdirs. 
count and show the number of lines for each php files in the current directory tree 
count files accessed more than a month ago 
count files in $dir_to_clean that are older than $days_to_save days 
count files in the current path by modification month 
count line numbers on files and record each count along with individual file name. 
count number of a records of domain UNK_START $domain UNK_END on nameserver UNK_START $server UNK_END and save value in UNK_START result UNK_END variable 
count number of lines in UNK_START sample_51770bl1_r1.fastq.gz UNK_END 
count number of lines in all files matching UNK_START *r1*.fastq.gz UNK_END 
count number of occurences of UNK_START 123 UNK_END in the string UNK_START 123 123 123 UNK_END (ie. 3) 
count the *.html files residing in the /usr/src directory tree and containing string UNK_START foo UNK_END 
count the *.html files residing in the /usr/src directory tree and containing string UNK_START foo UNK_END 
count the number of .gz files in directory tree /home/user1/data1/2012/maindir 
count the number of .gz files in the current directory tree 
count the number of .java files in all folders rooted in the current folder 
count the number of all directories under current directory non-recursively 
count the number of all directories under directory UNK_START /mount/point UNK_END non-recursively 
count the number of areas that differ in UNK_START file1 UNK_END and UNK_START file2 UNK_END with 0 lines of unified context 
count the number of characters in the list of regular files from the current directory tree 
count the number of differing lines in UNK_START file1 UNK_END and UNK_START file2 UNK_END 
count the number of differing lines in UNK_START file1 UNK_END and UNK_START file2 UNK_END with 0 lines of unified context 
count the number of directories in the current directory and below 
count the number of directories under directory UNK_START /directory/ UNK_END non-recursively 
count the number of equal lines in UNK_START file1.txt UNK_END and UNK_START file2.txt UNK_END 
count the number of equal lines in sorted files UNK_START ignore.txt UNK_END and UNK_START input.txt UNK_END 
count the number of files in the /usr/ports directory tree whose names begin with UNK_START pkg-plist UNK_END and which contain UNK_START dirrmtry UNK_END 
count the number of files in the /usr/ports directory tree whose names begin with UNK_START pkg-plist UNK_END and which contain UNK_START etc/rc.d/ UNK_END 
count the number of files in the /usr/ports directory tree whose names begin with UNK_START pkg-plist UNK_END and which contain UNK_START unexec.rmdir%d UNK_END 
count the number of files in the current directory and below 
count the number of files in the directory trees whose pathnames match pattern UNK_START /dev/sd*[a-z] UNK_END 
count the number of files in the directory trees whose pathnames match pattern UNK_START /dev/sd*[a-z] UNK_END 
count the number of files named UNK_START job.history UNK_END under UNK_START /data/spoolin UNK_END directory tree that match UNK_START fail UNK_END in their contents 
count the number of files named UNK_START job.history UNK_END under UNK_START /data/spoolin UNK_END directory tree that match UNK_START fail UNK_END in their contents 
count the number of files named UNK_START job.history UNK_END under UNK_START /data/spoolin UNK_END directory tree that match UNK_START fail UNK_END in their contents 
count the number of files named `file1' 
count the number of files/directories named file1 under current directory 
count the number of files/directories with UNK_START .php UNK_END extension under current directory tree and change the permissions to 755 
count the number of lines in UNK_START /dir/file.txt UNK_END 
count the number of lines in UNK_START /etc/fstab UNK_END 
count the number of lines in UNK_START myfile.txt UNK_END 
count the number of lines in UNK_START testfile UNK_END wrapped to fit in a width of UNK_START $columns UNK_END characters 
count the number of lines in all UNK_START .php UNK_END files in the current directory tree 
count the number of lines in all UNK_START .php UNK_END files in the current directory tree 
count the number of lines in all UNK_START .txt UNK_END files 
count the number of lines in all files in the xargstest/ directory tree that match pattern UNK_START file?? UNK_END 
count the number of lines in each .java file in the current directory tree 
count the number of lines in every regular .rb file in the current directory tree 
count the number of lines in every regular .rb file in the current directory tree 
count the number of non localhost users 
count the number of open files for pid UNK_START $pythonpid UNK_END every 2 seconds 
count the number of regular files in the current directory that contain a vowel in their names 
count the number of regular files in the current directory tree 
count the number of regular files with 755 permission under current directory tree 
count the number of regular files with case insensitive name pattern $srchfor under UNK_START teste2 UNK_END directory tree 
count the number of the regular files residing under and below ./randfiles/ 
count the number of total files and folders under current directory tree 
count the number of unique duplicate lines in UNK_START file1 UNK_END and UNK_START file2 UNK_END combined 
count the number of unique lines in sorted file UNK_START a.txt UNK_END compared to sorted file UNK_START b.txt UNK_END 
count the number of users logged in 
count the occurrence of 2 in the string UNK_START 1 1 2 2 2 5 UNK_END 
count the total number of lines in all UNK_START *.gz UNK_END files in the current directory tree after decompression 
count the total number of lines in all html files under /usr/src that contain string UNK_START foo UNK_END 
count total number of lines in all *txt files in current directory 
counts all *.mod files in a /boot/grub/ folder. 
counts all business days in a current month. 
counts all files in a dir_name folder and subfolders. 
counts all files in a current folder and subfolders. 
counts all files in a current folder and subfolders. 
counts all files in a current folder and subfolders. 
counts all lines in $i file. 
counts all top-level files in a current folder. 
counts lines in each *.cpp, *.c, *.h file. 
counts lines in each *.php file sorted by file path. 
counts lines in each *.php file, sorted by number of lines, descending. 
counts lines in each *.php file. 
counts lines in each *.php file. 
counts lines in each *.php file. 
counts lines in each *.php file. 
counts lines in each of *.php files in a current folder and subfolders and prints total count as well. 
counts lines in each of *.php files in a current folder and subfolders and prints total count as well. 
counts lines in each of *.php files in a current folder and subfolders ignoring UNK_START tests UNK_END folder and prints total count as well. 
counts lines in each of *.php files in a current folder and subfolders ignoring UNK_START tests* UNK_END folders and prints total count as well. 
counts lines in each of *.php files in current folder with subfolders and prints total count as well. 
counts lines in file UNK_START filename UNK_END ignoring empty lines and lines with spaces only. 
counts lines of UNK_START file UNK_END file. 
counts lines of /dir/file.txt file. 
counts lines of /dir/file.txt file. 
counts lines of /etc/fstab file. 
counts lines of all *.txt files in a current folder. 
counts lines of myfile.txt file. 
counts lines with all-cased word UNK_START null UNK_END in file 'myfile.txt'. 
counts non-blank lines (lines with spaces are considered blank) in all *.py files in a current folder. 
counts non-empty lines in file filename. 
counts number of *.php files in a current folder and subfolders. 
counts number of processors and saves in variable numcpu. 
counts the number of lines in *.php and *.inc files in a current folder and subfolders. 
counts total lines in all *.php files in the current directory recursively 
creae a tarball UNK_START files.tar.gz UNK_END containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05 
create 1000 files each file having a number from 1 to 1000 named UNK_START file000 UNK_END to UNK_START file999 UNK_END 
create 5 empty .txt files 
create 6-letter named temporary directory in a folder path that is provided as the first positional parameter, and save the path to it in a variable UNK_START tmp UNK_END 
create 6-letter named temporary file in a folder path $file1, and save the path to it in a variable UNK_START tmpfile UNK_END 
create 6-letter named temporary file in a folder path that is provided as the first positional parameter, and save the path to it in a variable UNK_START tmpfile UNK_END 
create 998 directories one inside another with sequential names folder1, folder2, ... folder998 and create an additional folder named UNK_START folder9991000 UNK_END inside the last UNK_START folder998 UNK_END directory 
create a compressed archive from UNK_START www UNK_END and split the contents into files of at most 1073741824 bytes and use prefix UNK_START www-backup.tar. UNK_END 
create a compressed archive named UNK_START my_directory.tar.gz UNK_END with files inside directory UNK_START my_directory UNK_END without including the directory entry UNK_START my_directory UNK_END itself 
create a compressed archive of UNK_START /home UNK_END and split the contents into files with at most 4000 mib each and use prefix UNK_START /media/drivename/backupname.tgz UNK_END 
create a copy of index.html in all directories in current directory whose name contains va, pausing for confirmation before overwriting any existing files - names may not contain spaces. 
create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces. 
create a directory named UNK_START alpha_real UNK_END in the current directory 
create a full path symbolic link UNK_START $newlink UNK_END from a relative path symbolic link UNK_START $origlink UNK_END 
create a gzip archive file ($tarfile) of all *.log files under $sourcepath 
create a hard link named UNK_START my-hard-link UNK_END to UNK_START myfile.txt UNK_END 
create a local ssh tunnel from UNK_START localhost UNK_END port 16379 to UNK_START localhost UNK_END port 6379 using key UNK_START keyfile.rsa UNK_END and disables the interactive shell 
create a new rsa key for ssh with no passphrase, store it in ~/.ssh/id_rsa without prompting to overwrite if this file exists, and minimize output from ssh-keygen. 
create a new directory UNK_START existing-dir/new-dir/ UNK_END on host UNK_START node UNK_END 
create a rsa key of 2048 bits with comment UNK_START michael UNK_END and store it in file "key". 
create a rsa key with comment specified by variable app and passphrase specified y sshkeypass. 
create a ssh key and store it in the file ~/.ssh/apache-rsync 
create a ssh key of rsa type, and prompt for a filename to store it, presenting the default for this type of key as $home/.ssh/id_rsa 
create a ssh key with no passphrase and store it in "outfile". 
create a ssh tunnel on local port 2222 through UNK_START bridge.example.com UNK_END to UNK_START remote.example.com UNK_END port 22 without executing any commands and run in the background 
create a symbolc link in the current directory to UNK_START target UNK_END 
create a symbolc link named UNK_START latest UNK_END to the last modified file or directory in UNK_START target-directory UNK_END 
create a symbolc link named UNK_START public_html UNK_END to UNK_START current/app/webroot UNK_END under the current working directory 
create a symbolic link in UNK_START /bar/tmp/ UNK_END for each file in directory UNK_START /foo UNK_END that does not start with UNK_START runscript UNK_END 
create a symbolic link in directory UNK_START /path/to/dir UNK_END for each file and directory under the current directory starting with UNK_START . UNK_END 
create a symbolic link in directory UNK_START new UNK_END for each file in UNK_START original UNK_END directory tree 
create a symbolic link in directory UNK_START ~/newlinks UNK_END for each file listed in UNK_START results2.txt UNK_END 
create a symbolic link in target directory UNK_START $tmpdir UNK_END for each file under the current directory 
create a symbolic link in target directory UNK_START ~/newlinks UNK_END to UNK_START $source UNK_END 
create a symbolic link in the current directory for each .jpg file under UNK_START dir UNK_END 
create a symbolic link in the current directory for each file .dbf under the directories matching UNK_START /home/michael/foxpro/mount/a[1fv]/[12][0-9][0-9][0-9] UNK_END 
create a symbolic link in the current directory for each file under the directories matching UNK_START ../[12][0-9][0-9] UNK_END 
create a symbolic link in the current directory for each hidden file or directory in UNK_START git-stuff/home/ UNK_END excluding UNK_START . UNK_END and UNK_START .. UNK_END 
create a symbolic link in the current directory to UNK_START $file UNK_END 
create a symbolic link in the current directory to UNK_START ../config/init UNK_END 
create a symbolic link named UNK_START $1/link UNK_END to the current working directory 
create a symbolic link named UNK_START $1/link UNK_END to the existing full and real path of UNK_START $2 UNK_END 
create a symbolic link named UNK_START $home/bin/ UNK_END to UNK_START $home/downloads/fnord UNK_END 
create a symbolic link named UNK_START $symlink UNK_END to UNK_START $actual_dir UNK_END 
create a symbolic link named UNK_START $tmpdir/bam UNK_END to the full path of command UNK_START bam2 UNK_END found in UNK_START $path UNK_END 
create a symbolic link named UNK_START ${destination}${file} UNK_END to UNK_START ${target}${file} UNK_END 
create a symbolic link named UNK_START .bash_profile UNK_END to UNK_START .bashrc UNK_END 
create a symbolic link named UNK_START .profile UNK_END to UNK_START git-stuff/home/profile UNK_END without dereferencing UNK_START .profile UNK_END 
create a symbolic link named UNK_START /lib/libc.so.0 UNK_END to UNK_START /lib/libc.so.6 UNK_END 
create a symbolic link named UNK_START /usr/bin/my-editor UNK_END to UNK_START /usr/share/my-editor/my-editor-executable UNK_END and attemp to hard link directories 
create a symbolic link named UNK_START /usr/local/bin/subl UNK_END to UNK_START /applications/sublime text 2.app/contents/sharedsupport/bin/subl UNK_END 
create a symbolic link named UNK_START foo UNK_END to UNK_START /var/cache/apt/archives/bash_4.3-14ubuntu1_amd64.deb UNK_END 
create a symbolic link named UNK_START temp UNK_END to UNK_START newtarget UNK_END 
create a symbolic link named UNK_START wh UNK_END to UNK_START $wh UNK_END 
create a symbolic link named UNK_START ~/bin/subl UNK_END to UNK_START /applications/sublime text 2.app/contents/sharedsupport/bin/subl UNK_END 
create a symbolic link named UNK_START ~/bin/subl UNK_END to UNK_START /applications/sublime text.app/contents/sharedsupport/bin/subl UNK_END 
create a symbolic link named the basename of UNK_START $file UNK_END to UNK_START $file UNK_END 
create a symbolic link relative to link location named UNK_START $dest_dir/$orig_name UNK_END to UNK_START $orig_dest UNK_END 
create a symbolic link to UNK_START $file UNK_END named UNK_START /tmp/allfiles UNK_END 
create a symbolic link to file UNK_START /usr/bin/perl UNK_END named with escaped characters UNK_START /usr/local/bin/perl\r\n UNK_END 
create a symbolic lnk named UNK_START $1/link UNK_END to UNK_START $dir UNK_END 
create a symolic link in UNK_START /usr/local/ UNK_END to UNK_START /applications/sublime\ text.app/contents/sharedsupport/bin/subl UNK_END 
create a symolic link in UNK_START /usr/local/bin/ UNK_END to UNK_START /applications/sublime\ text.app/contents/sharedsupport/bin/subl UNK_END 
create a symolic link in UNK_START /usr/local/bin/ UNK_END to UNK_START /applications/sublime\ text\ 2.app/contents/sharedsupport/bin/subl UNK_END 
create a tar archive with all *.java files under the current directory 
create a tar file containing all the files in ~/library folder that contain spaces in their names 
create all directories in the path specified by variable $javausrlib as super user 
create all directories in the path specified by variable $tempwork 
create an archive named newarch from the contents of ./test directory 
create an empty file UNK_START foo UNK_END in each directory under the current directory containing a file named "bar". 
create an empty file UNK_START last.check UNK_END in directory pointed by variable "log_dir", with specified timestamp. 
create an empty file (or update timestamp of file) specified by variable UNK_START correctfilepathandname UNK_END 
create an empty file called UNK_START emptyfile.c UNK_END 
create an empty file in each directory named UNK_START mydir UNK_END under current directory. 
create an empty file with a carriage return character in its name. 
create an empty file with a carriage return character in its name. 
create an empty index.html in each directory under the current one, updating timestamps of already existing index.html files. 
create an empty index.html, or update its timestamp if it already exists. 
create compressed archive from UNK_START my_large_file_1 UNK_END and UNK_START my_large_file_2 UNK_END and split into files of size 1024 mib with prefix UNK_START myfiles_split.tgz_ UNK_END 
create compressed archive of all the files in the current directory tree that have been modified in the last 7 days 
create directorie(s) UNK_START some/path UNK_END as required in the current directory 
create directories UNK_START /tmp/x/y/z/ UNK_END on remote host before copying UNK_START $source UNK_END to UNK_START user@remote:/tmp/x/y/z/ UNK_END 
create directory dir2 
create empty files (or update timestamps if they exist) with names matching each word in variable UNK_START correctfilepathandname UNK_END 
create hard links of all files and directories matching UNK_START test/icecream/cupcake/* UNK_END or UNK_START test/mtndew/livewire/* UNK_END in UNK_START test-keep UNK_END preserving directory hierarchy 
create intermediate directories "b and UNK_START c UNK_END as required and directory UNK_START c UNK_END 
create intermediate directories "full", UNK_START path UNK_END as required and directory UNK_START to UNK_END 
create intermediate directories UNK_START tmp UNK_END as required and directories real_dir1 and real_dir2 
create intermediate directories UNK_START x UNK_END and UNK_START p UNK_END as required and create UNK_START q UNK_END 
create intermediate directories as required 
create intermediate directories as required and directory /my/other/path/here 
create intermediate directories as required and directory /tmp/test/blah/oops/something 
create intermediate directories as required and directory project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a} 
create intermediate directories as required directory{1..3} and subdirectory{1..3} and directories subsubdirectory1 and subsubdirectory2 
create intermediate directories foo and bar as required and directory foo/bar/baz 
create intermediate directories ~/foo/bar/ as required and directories baz, bif, bang 
create intermediate directoriy path2 as required and directories a..z 
create links for all files in the current directory tree that are more than 1000 days old in UNK_START /home/user/archives UNK_END 
create master ssh control socket UNK_START my-ctrl-socket UNK_END in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via UNK_START jm@sampledomani.com UNK_END 
create new crontab set for user UNK_START test UNK_END including $job and only jobs from current crontab of UNK_START test UNK_END user that don`t contain $command 
create new crontab set including $job and only jobs from current crontab that don`t contain $command 
create ssh tunnel through UNK_START genja.org UNK_END connecting localhost port 4444 to UNK_START raptor.lan UNK_END port 22 
create symbolic link UNK_START $1/link UNK_END to the absolute path of UNK_START $2 UNK_END 
create symbolic links in current directory for all files located in UNK_START dir UNK_END directory and have filename extension UNK_START jpg UNK_END 
create symbolic links in the current directory for all files excluding UNK_START configfile UNK_END located in UNK_START /your/project UNK_END 
create symbolic links in the current directory for all files excluding UNK_START configfile UNK_END located under UNK_START /your/project UNK_END directory tree 
create symbolic links in the current directory for all files located in directory UNK_START /path/with/files UNK_END with a name containing UNK_START txt UNK_END 
create symbolic links in the current directory for all files under UNK_START bar1 UNK_END that are not directories and do not end in UNK_START .cc UNK_END 
create symlinks to all /home/folder1/*.txt files and UNK_START folder1_ UNK_END directory with the same name in a target directory named UNK_START + UNK_END 
create symlinks to all /home/folder1/*.txt files and UNK_START folder2_ UNK_END directory with the same name in a target directory named UNK_START + UNK_END 
create symlinks to all /home/folder1/*.txt files with the same name in current directory 
create symlinks to all /home/folder2/*.txt files with the same name in current directory 
create tar archive UNK_START dirall.tar UNK_END and copy all files from directory tree /tmp/a1 to it 
create tar archive UNK_START foo.tar UNK_END and copy all files from directory tree /tmp/a1 to it 
create tar.gz files older than one day logs 
create the directory UNK_START .npm-global UNK_END in the user's home directory(~). 
create the directory UNK_START .npm-packages UNK_END in the user's home directory($home) 
creates 5-letter random file name and saves it in UNK_START rand_str UNK_END variable. 
creates alias for network interface UNK_START eth0 UNK_END with ip address UNK_START 192.0.2.55 UNK_END and network mask '255.255.255.255'. 
creates file by template UNK_START aws-sync-xxxxx UNK_END in a current folder and stores file name in a UNK_START dir UNK_END variable. 
creates full path with parents, that matches to folder path extracted from $f variable. 
creates random file name formatted like expression in variable ${str// /x} and saves it in UNK_START rand_str UNK_END variable. 
creates temporary directory in UNK_START /tmp/ UNK_END folder and saves path to it in UNK_START my_tmp_dir UNK_END variable. 
creates temporary directory with name formatted like .daemonxxxxxxx in /tmp/ folder, and saves path to it in UNK_START tmpdir UNK_END variable. 
creates temporary file and saves path to it in UNK_START content_dir1 UNK_END variable. 
creates temporary file and saves path to it in UNK_START content_dir2 UNK_END variable. 
creates temporary file and saves path to it in UNK_START fif2 UNK_END variable. 
creates temporary file and saves path to it in a UNK_START tmpfile UNK_END variable. 
creates temporary file and saves path to it in a UNK_START tmpfile UNK_END variable. 
creates temporary file by template provided in option '-t'. 
creates temporary file in $appdir variable with name formatted like expression in variable ${template}, and saves path to it in UNK_START launcherfile UNK_END variable. 
creates temporary file in tmpdir folder or /tmp/ if tmpdir is not defined, named by template ${tempname}.xxxxxx, and saves path to new file in a tmpps_prefix variable. 
creates temporary file in a tmpdir folder or /tmp folder if tmpdir doesn`t defined, with file name like current shell name and '-xxxxx'-formatted suffix, and saves created path to the UNK_START tempfile UNK_END variable. 
creates temporary file in a tmpdir folder with name like tmp.xxxxxxxxxx. 
creates temporary file in a current folder and saves path to it in UNK_START f UNK_END variable. 
creates temporary file in a current folder with name formatted like 'templatexxxxxx', and saves path to it in UNK_START tempfile UNK_END variable. 
creates temporary file in default folder and saves path to it in UNK_START source UNK_END variable. 
creates temporary file name and saves path to it in UNK_START tmp_file UNK_END variable. 
creates temporary file with appended suffix UNK_START .cmd UNK_END and saves path to it in UNK_START lgt_temp_file UNK_END variable. 
creates temporary file with file name formatted like /tmp/gnuplot_cmd_$(basename "${0}").xxxxxx.gnuplot and saves path to it in a variable 'gnuplotscript'. 
creates temporary file with name formatted like UNK_START .script.xxxxxx UNK_END in UNK_START /tmp/ UNK_END folder and saves path to it in UNK_START script1 UNK_END variable. 
creates temporary file with name formatted like UNK_START .script.xxxxxx UNK_END in UNK_START /tmp/ UNK_END folder and saves path to it in UNK_START script2 UNK_END variable. 
creates temporary file with name formatted like UNK_START emacs-manager.xxxxxx UNK_END in UNK_START /tmp/ UNK_END folder and saves path to it in UNK_START tmp_file UNK_END variable. 
creates temporary file with name formatted like expression in variable ${prog}, and saves path to it in UNK_START mytemp UNK_END variable. 
creates temporary file, replacing xxxxxxxxxxxxxxxxxxxxxxx with equal length suffix. 
creates temporary folder and save path to that in a tmpdir variable. 
creates temporary folder and saves path to it in UNK_START other UNK_END variable. 
creates temporary folder and saves path to it in UNK_START td UNK_END variable. 
creates temporary folder and saves path to it in a UNK_START tempd UNK_END variable. 
creates temporary folder in /tmp/ (by default) with 10-letter suffux. 
creates temporary folder in tmpdir (if defined) or in '/tmp/', and stores path to created folder in UNK_START dir UNK_END variable. 
creates temporary folder in tmpdir (if defined) or in '/tmp/', and stores path to created folder in UNK_START tmpdir UNK_END variable. 
creates temporary folder in a $temp_dir folder with name pattern defined by $template, and stores path to created folder in UNK_START my_temp UNK_END variable. 
creates temporary folder in a tmpdir folder or /tmp folder if tmpdir doesn`t defined, with folder name like current shell name and 10-letter suffix, and saves created path in UNK_START mydir UNK_END variable. 
creates temporary folder like UNK_START /tmp/tardir-xxxxxx UNK_END with 6-letter suffix and saves its path in UNK_START tmpdir UNK_END variable. 
creates temporary folder relative to directory '/path/to/dir'. 
creates temporary folder within tmpdir, with name like current shell name and 10-letter suffix. 
creates temporary folder within a $mnt_dir folder and saves path to it in a UNK_START rsync_src UNK_END variable. 
creates temporary folder, and saves current folder path joined with created temporary folder path in UNK_START tdir UNK_END variable. 
cut off three last symbols from string UNK_START 1234567890 * UNK_END 
cuts off last part from the path $dir, and deletes resulted folder if empty. 
cuts off last two parts from the path $dir, and deletes resulted folder if empty. 
decompress UNK_START /file/address/file.tar.gz UNK_END to standard output 
decompress UNK_START path/to/test/file.gz UNK_END to standard output and save all lines matching UNK_START my regex UNK_END and not matching UNK_START other regex UNK_END to files with a 1000000 line limit 
decompress UNK_START path/to/test/file.gz UNK_END to standard output and save all lines matching UNK_START my regex UNK_END to files with a 1000000 line limit 
decompress UNK_START path/to/test/file.gz UNK_END to standard output and save all lines matching UNK_START my regex UNK_END to files with a 1000000 line limit 
decompress ${set1[@]} files with gzip 
decompress UNK_START file.gz UNK_END 
decompress UNK_START file.gz UNK_END to standard output and execute the output in bash 
decompress and extract UNK_START /usr/src/redhat/sources/source-one.tar.gz UNK_END 
decompress and extract UNK_START archive.tar.gz UNK_END into UNK_START /destination UNK_END 
decompress and extract UNK_START libxml2-sources-2.7.7.tar.gz UNK_END 
decompress and sort UNK_START $part0 UNK_END and UNK_START $part1 UNK_END of files in different processes 
decompress and unarchive UNK_START hello-0.2.tar.gz UNK_END 
decompresses each of UNK_START *bz2 UNK_END files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields. 
decompresses file 'xac.bz2', redirecting output to standard out. 
decompresses file. 
delete all UNK_START .ds_store UNK_END files/directories under test directory 
delete all UNK_START - UNK_END character from $1 and save the resultant string to variable UNK_START column UNK_END 
delete all UNK_START restore.php UNK_END files in /var/www and 3 levels below 
delete all *.zip files under current directory that are older than 2 days 
delete all *.zip files under current directory that are older than 2 days 
delete all *txt files under current directory 
delete all .bam files in the current directory tree 
delete all .pyc files in the current directory tree 
delete all .pyc files in the current directory tree 
delete all .svn directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn files/directories under current directory 
delete all .svn subdirectories under current directory 
delete all 1us* (case insensitive) files under current directory 
delete all html files under tree ~/mydir 
delete all mp3 files under /tmp 
delete all __temp__* directories under maximum 1 level down the current directory tree 
delete all __temp__* files/directories under current directory tree 
delete all __temp__* files/directories under current directory tree 
delete all broken symbolic links under UNK_START /usr/ports/packages UNK_END directory tree 
delete all but the most recent 5 files 
delete all directories found in $logdir that are more than a work-week old 
delete all directories in the /mydir directory tree 
delete all directories in the tbd directory that were modified more than 1 day ago 
delete all directories under UNK_START .cache/chromium/default/cache UNK_END directory tree that are at least 1 level deep and are bigger than 100 mb in size 
delete all directories under UNK_START .cache/chromium/default/cache/ UNK_END directory tree that are bigger than 100mb and are at least 1 level deep 
delete all empty directories and directories that contain only empty directories under current directory 
delete all empty directories in minimum 1 level down the directory UNK_START directory UNK_END 
delete all empty directories in minimum 2 levels down the root directory 
delete all empty directories in the UNK_START test UNK_END directory tree 
delete all empty directories in the current directory tree 
delete all empty directories under current directory 
delete all empty directories under root 
delete all empty directories under test directory 
delete all empty files and directories in the UNK_START test UNK_END directory tree 
delete all empty files in the current directory tree 
delete all empty files/directories under test directory 
delete all empty subdirectories in and below directory/ 
delete all filename* files under /dir directory 
delete all filename* files under /dir directory 
delete all filename* files under /dir directory 
delete all files (files, directories, links, pipes...) named UNK_START core UNK_END under current directory 
delete all files and directories 
delete all files beneath the current directory that begin with the letters 'foo'. 
delete all files in directory $dir that have not been accessed in at least 5 days 
delete all files in the UNK_START ${s}/bundled-libs UNK_END folder except UNK_START libbass.so UNK_END 
delete all files in the $dir directory that have not been accessed in 5 or more days. 
delete all files in the /tbd directory that were modified more than 1 day ago 
delete all files in the /mydir directory tree that were last modfied 7 days ago 
delete all files in the /mydir directory tree that were last modfied 7 days ago 
delete all files in the /mydir directory tree that were last modfied more than 7 days ago 
delete all files in the /mydir directory tree that were last modified 7 days ago 
delete all files in the tbd directory that were modified more than 1 day ago 
delete all files in the current directory tree whose names end with ~ 
delete all files in the current directory tree whose names end with ~ 
delete all files in the current directory. 
delete all files in the current user's home directory and its sub-directories that have not been accessed for more than 100 days. 
delete all files named UNK_START filename UNK_END in the current directory tree, except the one with path ./path/to/filename 
delete all files named UNK_START filename UNK_END in the current directory tree, except those with paths ending in UNK_START /myfolder/filename UNK_END 
delete all files named UNK_START -f UNK_END under current directory tree 
delete all files named UNK_START waldo UNK_END under ~/books directory tree where UNK_START ~ UNK_END expands to user's home directory 
delete all files named UNK_START sample UNK_END (case insensitive) under UNK_START /home/user/series UNK_END directory tree with superuser privilege 
delete all files not owned by valid users 
delete all files that have not been accessed in the last 30 days 
delete all files that were modified more than 60 days ago under UNK_START /path-to-directory UNK_END tree 
delete all files throughout the entire filesystem that are no longer owned by a valid user. 
delete all files under $destination directory tree that were modified more than 7 days ago 
delete all files under $intranetdestination/monthly directory tree that were modified more than 366 days ago 
delete all files under $intranetdestination/weekly directory tree that were modified more than 32 days ago 
delete all files under UNK_START /home/backups UNK_END directory tree with UNK_START .tgz UNK_END or UNK_START .gz UNK_END extension (case insensitive) that were modified more thant 60 days ago 
delete all files under /path/to/files that are not newer than dummyfile 
delete all files under /path/to/input/ that match the case insensitive string literal UNK_START spammer@spammy.com UNK_END in their contents 
delete all files under and below the current directory 
delete all files under current directory tree with UNK_START .$1 UNK_END extension where $1 expands as the first positional parameter 
delete all files under root whose status were changed more than 30 minutes ago 
delete all files under user's home directory tree that were accessed more than 365 days after their status was changed 
delete all files with UNK_START .o UNK_END extension in the entire filesystem 
delete all files with UNK_START .old UNK_END extension under current directory tree 
delete all files with UNK_START .old UNK_END extension under current directory tree 
delete all files with 128128 inode number under current directory tree 
delete all files with indoe number $inum under current directory tree 
delete all files with inode number 804180 
delete all files/directories in minimum 2 levels down the root directory 
delete all files/directories named UNK_START file-to-find UNK_END under current directory tree 
delete all files/directories named UNK_START file UNK_END under current directory tree 
delete all files/directories named UNK_START sample UNK_END (case insensitive) under UNK_START /home/user/series/ UNK_END directory tree as super user 
delete all files/directories named test under maximum 2 level down the current directory 
delete all files/directories older than 48 hours in /path/to/files* paths 
delete all files/directories taken by the glob pattern * except the ones with the name UNK_START b UNK_END 
delete all files/directories taken by the glob pattern * except the ones with the name UNK_START b UNK_END 
delete all files/directories under current directory 
delete all files/directories under current directory tree excluding UNK_START .gitignore UNK_END files/directories and files/directories matching the patterns UNK_START .git UNK_END or UNK_START .git/* UNK_END in their paths 
delete all files/directories under current directory tree with UNK_START .$1 UNK_END extension where $1 expands as the first positional parameter 
delete all files/directories with UNK_START .old UNK_END extension under current directory tree 
delete all files/directories with inode number 117672808 under current directory tree 
delete all files/directories with node number $inum under current directory tree 
delete all hard links to the physical file with inode number 2655341 
delete all hidden files in the directory tree given as variable $folder 
delete all hidden files under $some_directory 
delete all hidden files under $some_directory 
delete all hidden files under $some_directory 
delete all hidden files/directories under $some_directory 
delete all hidden files/directories under $some_directory including $some_directory 
delete all in the current directory tree 
delete all non digits from index UNK_START $i UNK_END in bash array UNK_START depsalastmodified UNK_END and print the hex dump as characters 
delete all regular files named UNK_START file-to-find UNK_END under current directory tree 
delete all regular files named UNK_START findcommandexamples.txt UNK_END under current directory tree 
delete all regular files named UNK_START imag1806.jpg UNK_END under current directory tree 
delete all regular files named UNK_START image1806.jpg UNK_END under current directory tree 
delete all regular files that have not been modified in the last 31 days under UNK_START /path/to/junk/files UNK_END directory tree 
delete all regular files that have not been modified in the last 60 weeks under $dir directory tree 
delete all regular files that reside in directory $outputdir and below, and were last modified more than 7 days ago 
delete all regular files that start with UNK_START sess_ UNK_END in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree 
delete all regular files under $dir directory tree that have been modified before file $a 
delete all regular files under current directory 
delete all regular files with UNK_START .cache UNK_END extension that were accessed more than 30 days ago under $home/library/safari/icons directory tree 
delete all regular files with UNK_START .txt UNK_END extension that were modified in more than 25 minutes ago in maximum 1 level down the directory UNK_START /home/u20806/public_html UNK_END 
delete all regular files with UNK_START .txt UNK_END extension that were modified in more than 25 minutes ago in maximum 1 level down the directory UNK_START /home/u20806/public_html UNK_END 
delete all regular files with inode number 314167125 under current directory tree 
delete all the .c files present in the current directory and below 
delete all the files found in the current directory tree whose names begin with UNK_START heapdump UNK_END 
delete all the files found in the current directory tree whose names begin with UNK_START heapdump UNK_END 
delete and count files in $dir_to_clean that are older than $days_to_save days 
delete characters in columns 36 through 40 from the output of UNK_START finger UNK_END 
delete current cron job list, and use those in yourfile.text 
delete empty directories 
delete empty files and print their names 
delete empty regular files 
delete everything in the current directory 
delete file with inode number 314167125 
delete files UNK_START *doc copoy UNK_END in directory tree /mnt/zip 
delete files containing whitespaces 
delete files containing whitespaces without recursion 
delete files in $dir_to_clean older than $days_to_save days 
delete files in /var/tmp/stuff and below that have not been modified in over 90 days 
delete files in /var/tmp/stuff and below that have not been modified in over 90 days 
delete files in /var/tmp/stuff and below that have not been modified in over 90 days 
delete files in /var/tmp/stuff and below that have not been modified in over 90 days 
delete files in /var/tmp/stuff and below that have not been modified in over 90 days 
delete files in /var/tmp/stuff and below that have not been modified in over 90 days 
delete files in the dir directory tree whose names begin with UNK_START 2015 UNK_END and contain UNK_START album UNK_END or UNK_START picture UNK_END 
delete files older than 31 days 
delete files under $location that match $required_files in their names and were modified more than 1 day ago 
delete files under $location that match $required_files in their names and were modified more than 360 minutes ago 
delete files with inode number 782263 under current directory 
delete files with inode number specified by [inode-number] under current directory 
delete history entry at offset, defined in first argument of executed script 
delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days 
delete interactively all the files/directories with inode number 782263 under current directory tree 
delete line 2 in numbered file UNK_START file UNK_END and renumber 
delete recursively empty files named UNK_START bad UNK_END 
delete the files under the current working directory with inode numbers specified on standard input 
delete the oldest file with UNK_START .tgz UNK_END or UNK_START .gz UNK_END extension under UNK_START /home/backups UNK_END directory tree 
deletes empty folder 'nonsense_dir'. 
deletes folder like /tmp/*/* or deeper, older than +7 days if they don`t contain files or other folders. 
delimit standard input with UNK_START : UNK_END and display as a table 
descend into every directory under /etc and print the file/directory names with relative paths 
determine if /full/path exists on a mounted file system. 
determine if user UNK_START $user UNK_END is logged in 
determine the user associated with stdin 
disables shell option 'compat31'. 
disables shell option 'dotglob'. 
disables shell option 'nocasematch'. 
disables shell option 'nullglob'. 
discard the first letter from every line in $line and calculate the md5 sum of the remaining 
display UNK_START /tmp/file UNK_END as a table of width 30 with columns filled before rows 
display UNK_START infile UNK_END as printable characters or backslash escapes 
display 12345 backwards 
display 798 backwards 
display a binary file as a sequence of hex codes 
display a character dump of UNK_START oldfile UNK_END 
display a count of regular files in each directory at the current level. 
display a dump of UNK_START file UNK_END as floating point values of double size 
display a dump of standard input as floating point values of double size 
display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size 
display a list of files with sizes in decreasing order of size of all the regular files under UNK_START /your/dir UNK_END directory tree that are bigger than 5 mb in size 
display a long list of all the files/directories named UNK_START .todo UNK_END under $storagefolder directory tree 
display a long listing of all 0777 permission directories under current directory tree 
display a long listing of all directories under UNK_START /nas UNK_END directory tree 
display a long listing of all files/directories named UNK_START file UNK_END under current directory tree 
display a long listing of all files/directories that are bigger than 10mb under UNK_START /var/ UNK_END directory tree 
display a long listing of all regular files that are less than 50 bytes in size under UNK_START /usr/bin UNK_END directory tree 
display a long listing of all regular files with 0777 permission under current directory tree 
display a long listing of all the files/directories under current directory tree that are newer than the file UNK_START nov UNK_END by modification time 
display a long listing of all the regular files in the file system which belong to user UNK_START root UNK_END and which have suid bit set 
display a long listing of all the regular files owned by the user UNK_START bluher UNK_END in the entire filesystem 
display a long listing of all the regular files under current directory tree that are newer than ‘apr 18 23:59:59 edt 2013’ and older than ‘apr 20 00:00:00 edt 2013’ by modification time 
display a long listing of the files/directories with human readable sizes (100m, 10g etc..) under UNK_START /var UNK_END directory tree which are bigger than 10mb 
display a long listing of the oldest file under UNK_START /hom/backups UNK_END directory tree 
display a named character dump of UNK_START test.sh UNK_END 
display a sorted count of all the characters in UNK_START filename UNK_END 
display all files in a folder 
display all files in a folder 
display all files in the current directory tree that match UNK_START *foo UNK_END 
display all files in the folder home which are owned by the group test. 
display all lines contiaining UNK_START funcname UNK_END in system map file matching current kernel. 
display all symlinks and their targets in the current directory 
display all symlinks and their targets in the current directory tree 
display all the files/directories under UNK_START /home/bozo/projects UNK_END directory tree that have been modified within the last day 
display an amount of processes running with a certain name 
display current system's kernel name, kernel release and version, and machine architecture 
display detailed usage help of the UNK_START cp UNK_END (copy) command. 
display difference between one.txt and two.txt side-by-side. 
display differences between /destination/dir/1 and /destination/dir/2 excluding xml files. 
display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file "exclude.pats". 
display differences between /destination/dir/1 and /destination/dir/2 excluding files with names ending with extensions '.foo', UNK_START .bar UNK_END and UNK_START .baz UNK_END 
display differences between /tmp/test1 and /tmp/test2 side-by-side. 
display differences between /tmp/test1 and /tmp/test2. 
display differences between a and b side-by-side 
display differences between directories dir1 and dir2, treating absent files as empty. 
display differences between directories dir1 and dir2. 
display differences between directories dir1 and dir2. 
display differences between directories repos1 and repos2, ignoring changes due to tab expansion, white spaces and treating absent files as empty. 
display differences between file1 and file2 side-by-side. 
display differences between files UNK_START a.txt UNK_END and UNK_START b.txt UNK_END side-by-side and do not output common lines. 
display differences between files dir1.txt and dir2.txt. 
display differences between list of files in /bin and /usr/bin. 
display differences in UNK_START /tmp/ksh-9725.log UNK_END when compared to UNK_START /tmp/ksh-9781.log UNK_END 
display each line in file.txt backwards 
display file type description of UNK_START file-name UNK_END based on contents. 
display file type information for all instances of UNK_START file UNK_END in the current path. 
display hardware platform, ie. x86_64 even if current kernel uses 32-bit addressing. 
display hostname. 
display human-readable file type description of ascii.txt 
display human-readable file type description of utf8.txt 
display infinite scroll of random ascii art 
display infinite scroll of random ascii art 
display kernel name, release, and version. 
display kernel release name. 
display list of files ending with UNK_START .txt UNK_END in the current folder to the terminal twice and output it to the text file UNK_START txtlist.txt UNK_END 
display long listing of all the files/directories owned by the user UNK_START me UNK_END under UNK_START /tmp UNK_END directory tree 
display machine architecture, ie. x86_64 
display mime type of file specified by variable UNK_START file UNK_END 
display name and value of UNK_START variable UNK_END if it exists. 
display non-hidden files in the current directory with the given output format 
display only first and second dot-separated numbers of kernel version, ie. 4.4 
display only mimetype of myfile.txt, without the filename. 
display operating system type, ie. gnu/linux 
display permissions, user, group, and full path for each file in the current directory tree 
display permissions, user, group, and full path for each file in the current directory tree as a list 
display standard input as a table with UNK_START ${tab} UNK_END separators 
display standard input as octal bytes 
display standard input as printable characters or backslash escapes with no addressing radix 
display summary of each specified file in human readable form 
display system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type. 
display the 5 largest files in the current directory and its sub-directories. 
display the 5 smallest files in the current directory and its sub-directories ignoring any empty files. 
display the 5 smallest files in the current directory and its sub-directories. 
display the biggest file sizes only 
display the content of file UNK_START f UNK_END in home directory if it exists and is executable 
display the contents of UNK_START file UNK_END formatted into a table, removing duplicate lines where the first 12 characters are duplicates, and display the number of occurrences at the beginning of each line. 
display the contents of UNK_START myfile UNK_END located in the current directory. 
display the contents of UNK_START text UNK_END 
display the count of regular files for which the owner has read and execute permission under UNK_START home/magie/d2 UNK_END directory tree 
display the count of regular files under UNK_START home/magie/d2 UNK_END directory tree which have execute permission to all the users 
display the current directory tree except files or directories starting with UNK_START 3rd UNK_END 
display the differences between UNK_START file1.cf UNK_END and UNK_START file2.cf UNK_END side-by-side with a width of 150 characters 
display the entire file system in a tree-like format 
display the file size of file UNK_START /data/sflow_log UNK_END in bytes 
display the file type description of /bin/bash, ie. symbolic link, elf executable, etc. 
display the files/directories under current directory tree matching the regex UNK_START /$prefix$ypatt UNK_END where $prefix and $ypatt expands in the current shell 
display the first 10 lines of the byte hex dump with no file offset data for UNK_START /bin/ls UNK_END 
display the first 32 bytes in UNK_START foo UNK_END as printable characters with 16 characters per line 
display the host's ecdsa fingerprint using the md5 hasing algorithm. 
display the host's ecdsa fingerprint using the sha256 hasing algorithm. 
display the last 3 characters of variable foo. 
display the last colon-separated field of variable UNK_START var UNK_END 
display the last dot-separated field, in this case "com". 
display the last slash-separated part of each filename path in file.txt 
display the last slash-separated part of path, in this case "example". 
display the last space-separated field of each line in file.txt 
display the mimetype of UNK_START filename UNK_END 
display the named characters in UNK_START line1\r\nline2 UNK_END 
display the number of lines in all regular files under current directory tree and also show the total count 
display the number of regular files under current directory tree 
display the number of regular files under current directory tree 
display the output of UNK_START ls UNK_END for an 80 character wide display 
display the sizes and filepaths of all files/directories sorted in ascending order of size 
display the sizes and filepaths of all files/directories sorted in descending order of size 
display the sizes and filepaths of all files/directories with UNK_START .undo UNK_END extension under current directory tree 
display the total count of all the files/directories with UNK_START .old UNK_END extension under current directory tree 
display top 500 mp4 and flv files under current directory along with their timestamps in the sorted order of time 
display total apparent size of a file 
display what flags mount points are mounted with 
display who is logged on and what they are doing 
displays a tree of all process alongside their command line arguments. 
displays calendar for a previous, current and next month. 
displays calendar of a previous, current and next month for december of 2120 year. 
displays information about all network interfaces in system, including inactive ones. 
displays process tree of a process with id 'pid', showing parent process and processes id. 
displays status of currently active network interfaces. 
displays the count of of each unique line read from standard input 
do a dry run of renaming file extension UNK_START .andnav UNK_END to UNK_START .tile UNK_END for all files/directories under current directory tree 
download UNK_START louis theroux's la stories UNK_END using rsync over ssh 
dry run making directories in UNK_START /target_folder_root/ UNK_END for each UNK_START .mov UNK_END file in the current directory tree 
dump UNK_START /dev/ttysomething UNK_END in both hex and text 
dump UNK_START filename UNK_END as 2 byte wide hexadecimal numbers 
dump UNK_START file UNK_END as ascii characters 
dump UNK_START filename UNK_END as 2 byte wide hexadecimal and printable characters 
dump UNK_START testscript.sh UNK_END as 2 byte hexadecimale, printable characters, and octal values 
dump the character output of UNK_START echo 'hi' UNK_END 
dump the character output of UNK_START echo `echo "ho ho ho"` UNK_END 
duplicate directory tree under /mnt/usr/lib to /usr but creating symlinks to files instead of copying them. 
error - probably means -pgodt (capital d) 
error - need to add -a or -r for recursive copy 
error - this is for dos 
error - will overwrite the executable if it's not a symlink. 
edit current user's cron job list with editor specified by editor environment variable, or default /usr/bin/editor if editor is not set. 
edit the cron job list for user UNK_START wwwrun UNK_END using default editor specified by the editor environment variable, or /usr/bin/editor if no default editor is specified. 
eliminates partially duplicate lines by column, keeping the last occurrence 
enables UNK_START dotglob UNK_END shell option. 
enables UNK_START globstar UNK_END (recursive globbing) shell option. 
enables UNK_START nullglob UNK_END shell option. 
enables shell option 'autocd'. 
enables shell option 'cdable_vars'. 
enables shell option 'cmdhist'. 
enables shell option 'compat31'. 
enables shell option 'direxpand'. 
enables shell option 'expand_aliases'. 
enables shell option 'failglob'. 
enables shell option 'histappend'. 
enables shell option 'lastpipe'. 
enables shell option 'lithist'. 
enables shell option 'nocaseglob'. 
enables shell option 'nocasematch'. 
enables shell option 'nullglob'. 
enables shell option 'progcomp'. 
enables shell option 'promptvars'. 
enables shell options 'expand_aliases', 'extglob', 'xpg_echo'. 
enables shell options UNK_START extglob UNK_END and UNK_START progcomp UNK_END 
enables shell options UNK_START nullglob UNK_END and 'dotglob'. 
ensure all 5 of uedp0{1..5}_20120821.csv files exist, creating empty files for any missing ones (updates the file's timestamps) 
erase user's cron jobs and add one cron job to run UNK_START script UNK_END every minute. 
evaluate the output of recursively changing the owner and group of UNK_START /data/* UNK_END to UNK_START mongodb UNK_END 
exclude directory from find . command 
exclude directory from find . command 
exclude directory from find . command 
exclude directory from find . command 
exclude directory from find . command 
exclude directory from find . command 
exclude directory from find . command 
exclude directory from find . command 
exclude directory from find . command 
execute UNK_START ${md5} UNK_END on all files found under "${1}", numerically sort the results, and save to variable UNK_START data UNK_END 
execute UNK_START cat /tmp/iostat.running UNK_END every 10 seconds 
execute UNK_START date UNK_END every second 
execute UNK_START du -s path UNK_END every 300 seconds 
execute UNK_START ls -l data.temp UNK_END every 2 seconds 
execute UNK_START ls -l UNK_END every 0.5 seconds 
execute UNK_START ls -l UNK_END every 2 seconds 
execute UNK_START ls -l UNK_END every 2 seconds 
execute UNK_START ls -l UNK_END every 2 seconds and highlight the differences in runs 
execute UNK_START ls -l UNK_END on host UNK_START something UNK_END as user UNK_START root UNK_END 
execute UNK_START ls UNK_END every 2 seconds 
execute UNK_START ls UNK_END every second 
execute UNK_START ps -c java -o pcpu,state,cputime,etimes UNK_END every second 
execute UNK_START wget -qo- http://fake.link/file.txt UNK_END every 5 seconds 
execute UNK_START echo -e UNK_START \033[31mhello world\033[0m UNK_END UNK_END every without color support 2 seconds 
execute UNK_START echo -e UNK_START \thello world UNK_END UNK_END every 2 seconds 
execute /usr/bin/find with $* arguments 
execute /usr/bin/find with $* arguments where current directory is the first argument 
execute `echo' for each file found 
execute `find -type f | egrep -i "(jpg|bmp|png|gif)$"` every 300 seconds and display without title 
execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename 
execute all arguments to a shell script and write the output to console and UNK_START $file UNK_END 
execute all commands in UNK_START commands-to-execute-remotely.sh UNK_END on server UNK_START blah_server UNK_END 
execute command UNK_START $cmd_str UNK_END on host UNK_START $server UNK_END as user UNK_START $user UNK_END 
execute md5sum command on files found by the find command 
execute python script UNK_START test.py UNK_END with UNK_START ld_preload=./linebufferedstdout.so UNK_END and write the output to console and append to UNK_START test.out UNK_END 
execute the UNK_START echo UNK_END command on each file from the current directory tree individually 
execute the file utility for each file found under /etc and below 
execute the file utility for each file found under /etc or below that contains UNK_START test UNK_END in its pathname 
execute the first instance of UNK_START parallel UNK_END found in the path, passing it all parameters received by the script/function 
execute zcat on every file matching UNK_START *20120805.gz UNK_END in the current directory and subdirectories 
expand bash array UNK_START myargs UNK_END as arguments to UNK_START mv UNK_END 
extract all gzip-compressed files from tar archives beginning with UNK_START myfiles_split.tgz_* UNK_END 
extract and print hostname and protocol part from url like "http://www.suepearson.co.uk/product/174/71/3816/". 
extract any line in UNK_START f1 UNK_END or UNK_START f2 UNK_END which does not appear in the other 
extract any line in UNK_START file1 UNK_END or UNK_START file2 UNK_END which does not appear in the other 
extract any line in UNK_START file1.txt UNK_END which does not appear as the first UNK_START ; UNK_END delimited entry in UNK_START file2.txt UNK_END 
extract any line in UNK_START filea UNK_END which does not appear as the first word of any line in UNK_START fileb UNK_END 
extract any line in UNK_START set1 UNK_END which does not appear in UNK_START set2 UNK_END 
extract any line in sorted file UNK_START a UNK_END that does not appear in "b", "c", or UNK_START d UNK_END 
extract files from archive UNK_START archive.tar UNK_END 
extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters. 
extract host name part from url. 
extract path and query part from url 
extract protocol and host name from url. 
extract protocol part from url. 
extract the contents of "input.txt.gz", list the unique first comma separated field prefixed by the number of occurrences 
extract the second-to-last slash-separated path component, ie. UNK_START 90_2a5 UNK_END in this case. 
extract, sort and print only group names from /etc/group. 
extracts a bz2 file. 
extracts single file UNK_START filename UNK_END from bzip2-compressed tarball archive.tbz. 
find files in current directory and grep text and html files - but not index.html and report things that contain the word UNK_START elevator UNK_END in four or more lines 
fetch UNK_START stackoverflow.com UNK_END domain ip addresses from dig dns lookup 
fiind and remove multiple files such as *.mp3 or *.txt 
file UNK_START files.txt UNK_END contains a list of files, copy all files listed to host "remote", connecting as ssh user "user", and copying the files to this user's home directory - this will not work with files/directory names containing spaces. 
file UNK_START save_pid.txt UNK_END contains a process id, instantly kill this process with sigkill signal. 
filnd all directory in root directory with 777 permission and change permision755 with chmod commad . 
filnd all files in root directory with 777 permission and change permision 644 with chmod commad . 
filter out current date in current time zone from the gmt+30 and gmt+20 representations of current date and show the last one 
filters only directories from long file listing of the current directory 
filters only directories from long file listing of the current directory 
filters only directories from long file listing of the current directory. 
filters out strings, using the extended regexp pattern UNK_START ^#|^$|no crontab for|cannot use this program UNK_END from UNK_START $usertab UNK_END 
filters unique lines by matching against the first column of a .csv file 
find UNK_START *.dat UNK_END files recursively in the current directory, print the lines starting on line 5 to the console and save to UNK_START concat.txt UNK_END 
find UNK_START *201512* UNK_END regular files in /home/myhome/data/archive/ and move them to /home/myhome/archive/tempfolder/ 
find UNK_START *prefs copy UNK_END files in the /mnt/zip directory tree and remove them 
find UNK_START *prefs copy UNK_END files in the /mnt/zip directory tree and remove them with prompting 
find UNK_START .c UNK_END and UNK_START .h UNK_END files in the current directory tree and print line numbers and lines containing UNK_START #include UNK_END 
find UNK_START .c UNK_END and UNK_START .h UNK_END files in the current directory tree and print lines containing UNK_START #include UNK_END 
find UNK_START file.xml UNK_END under the current directory and change directory to its parent 
find UNK_START file.xml UNK_END under the current directory and change directory to its parent 
find & replace broken symbolic links 
find UNK_START *prefs copy UNK_END files under /mnt/zip and delete them with confirmation prompt ensuring white space safety 
find UNK_START .git UNK_END directories in directory tree /home/madhu/release/workspace 
find UNK_START .git UNK_END directories in directory tree /path/to/files and print the pathnames of their parents 
find UNK_START .java UNK_END files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory 
find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder 
find *.c and *.h files under the current directory tree skipping hidden directories and files 
find *.c and *.sh files 
find *.c files under $home and search for the string UNK_START sprintf UNK_END in those files 
find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end 
find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end 
find *.css files in the current directory tree, skipping all directories that match pattern UNK_START */lang/en.css UNK_END 
find *.html files in the /usr/src/linux directory tree 
find *.html files in the current directory tree that were last modified more than 7 days ago 
find *.html files in the current directory tree that were modified 7 days ago 
find *.html files in the current directory tree that were modified less than 7 days ago 
find *.java files under current directory and compress them to myfile.tar 
find *.java files under current directory and compress them to myfile.tar (unsafe) 
find *.jpg screenshots that are bigger than 500k 
find *.o files with permissions 664 in the current directory tree 
find *.pl files/directories under /users/tom 
find *.scm files recursively in the current directory 
find *.tex files in the current directory tree that contain text UNK_START documentclass UNK_END 
find *.txt files in the current directory tree, ignoring paths ./movies/*, ./downloads/*, and ./music/* 
find *2011* files and grep for the string UNK_START from: ralph UNK_END in those files 
find *log files/directories within a maximum of 3 levels of directories 
find .cpp files that differs in subdirectories path1 and path2. 
find .java files in the current directory tree that contain 'todo', and print their names 
find .java files in the current directory tree that contain 'todo', and print their pathnames 
find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with "autumn". 
find .jpg files owned by user daniel in the current directory and its sub-directories. 
find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here 
find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here 
find .rmv files in the current directory recursively 
find .txt files on the system whose size is greater than 12000 bytes 
find 10 largest files in the current directory and its subdirectories 
find 10 most recently changed files in the current directory tree 
find <filename> files/directories under current directory 
find css files omitting results containing UNK_START cvs UNK_END 
find php files containing 2 or more classes 
find php files with abstract classes 
find sgid files 
find sgid files 
find sql files with text `expression' 
find suid files 
find suid files 
find stringbuffer in all *.java files 
find `string' in all *.java files ignoring the case of that string 
find a 400 permission file under /data directory 
find a directory named UNK_START project.images UNK_END case insensitively in the entire filesystem and show it in long listing format 
find a directory named UNK_START project.images UNK_END in the entire filesystem 
find a directory named UNK_START project.images UNK_END in the entire filesystem and show it in long listing format 
find a hostname that resolves to ip UNK_START 173.194.33.71 UNK_END 
find a more recent version of httpd.conf file than /etc/apache-perl/httpd.conf in entire file system 
find a single file called findcommandexamples.txt under current directory and remove it 
find a single file called tecmint.txt and remove it 
find a size of only the target directory in mb format 
find a used disk space of a target directory and files inside of it 
find a.out and object files in the current directory tree 
find absolute path of command with pid UNK_START $pid UNK_END 
find all UNK_START custlist* UNK_END files under current directory 
find all UNK_START g*.html UNK_END files modified more than 7 days ago in the current directory tree 
find all UNK_START yourprogramname UNK_END regular files in the current directory tree and print the full paths to the directories containing them 
find all $1 files/directories under current directory and enter into the parent directory of the first one found 
find all $2 files in $1 path and search for the regex expanded by $3 in those files 
find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with /proc in their paths 
find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files 
find all $tofind* files/directories under $parentdir 
find all UNK_START *~ UNK_END files under current directory 
find all UNK_START test UNK_END directories in the current directory tree 
find all UNK_START test UNK_END directories in the current directory tree and remove them 
find all UNK_START test UNK_END directories in the current directory tree and remove them 
find all UNK_START test UNK_END directories in the current directory tree and remove them 
find all * * regular files under current directory 
find all *$version* files/directories under current directory where $version is a variable 
find all *-* files under current directory 
find all *.$input_file_type files/directories under $source_dir 
find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter 
find all *.* directories under /home/feeds/data directory 
find all *.* files not within .git directory and run $sed_cmd -i UNK_START s/$1/$2/g UNK_END on each of them 
find all *.* files under current directory 
find all *.[ch] files under current directory 
find all *.axvw files/directories under current directory 
find all *.c files in /usr/src bigger than 100k 
find all *.c files located under /home and below 
find all *.c files on the system and feed the output to wc 
find all *.c files under /home 
find all *.c files under and below the current directory that contain UNK_START hogehoge UNK_END 
find all *.c files under and below the current directory that contain UNK_START wait_event_interruptible UNK_END 
find all *.c files under and below the current directory that contain UNK_START wait_event_interruptible UNK_END 
find all *.c files under and below the current directory that contain UNK_START wait_event_interruptible UNK_END 
find all *.c files under and below the current directory that contain UNK_START wait_event_interruptible UNK_END 
find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755 
find all *.cgi files/directories under current directory and change their permission to 755 
find all *.cgi files/directories under current directory and change their permission to 775 
find all *.cls files/directories under current directory and print UNK_START {if(length($0) > l) { line=$0; l = length($0)}} end {print line"l"l} UNK_END for each of them where $0 is expanded to the file/directory path 
find all *.cpp files in the current directory tree that contain UNK_START sub UNK_END in their names 
find all *.css files under /starting/directory and print filenames and the lines matching the regex UNK_START \.exampleclass UNK_END from those files 
find all *.csv files under /foo/bar and move them to some_dir 
find all *.csv files under /foot/bar/ and move them to some_dir 
find all *.data files under jcho directory 
find all *.dbf files/directories in entire file system 
find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths 
find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory 
find all *.err files under current directory that are larger than 5120 bytes in size 
find all *.ext files/directories under current directory and print their path and parent directory path 
find all *.foo files under current directory and print their contents 
find all *.foo files under current directory and print their contents 
find all *.foo files under current directory and print their contents 
find all *.foo files under current directory and print their contents 
find all *.foo files under current directory and search for UNK_START bar UNK_END in those files 
find all *.gz files in the current directory and decompress them using gunzip 
find all *.gz files/directories under asia and emea directory 
find all *.gz files/directories under asia and emea directory 
find all *.htm files under current directory 
find all *.html files under current directory 
find all *.ini files 
find all *.java files in the current directory tree 
find all *.java files under current directory 
find all *.java files under current directory and archive them to myfile.tar 
find all *.java files under current directory containing the string UNK_START string UNK_END 
find all *.java files under current directory containing the string UNK_START string UNK_END 
find all *.jpg (case insensitive) files under current directory 
find all *.jpg files and copy them to / 
find all *.jpg files in */201111 paths 
find all *.jpg files in */201111/* paths and numerically sort them according to the second field in the file name with a delimiter UNK_START _ UNK_END 
find all *.jpg files under current directory 
find all *.jpg files under current directory and print only duplicate names 
find all *.jpg files under current directory and print only unique names 
find all *.jpg files under current directory and print only unique names 
find all *.jpg files/directories under current directory 
find all *.log files under current directory that contain the string UNK_START exception UNK_END 
find all *.log files under path/ 
find all *.log files under path/ that do not contain UNK_START string that should not occur UNK_END 
find all *.m4a files under /home/family/music directory 
find all *.m4a files/directories under /home/family/music directory 
find all *.m4a files/directories under /home/family/music directory 
find all *.mov (case insensitive) files under current directory and list their paths with their names 
find all *.mov files under current directory 
find all *.mp3 (case insensitive) files/directories under /tmp and remove them 
find all *.mp3 files in entire file system greater than 10mb and delete them 
find all *.mp3 files in file system with more than 10mb and delete them using rm command 
find all *.mp3 files under current directory 
find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory 
find all *.mp4 files under /foo/bar and move them to /some/path 
find all *.mp4 files under /foo/bar and move them to /some/path 
find all *.mp4 files under /working 
find all *.mp4 files under directory named UNK_START working UNK_END and show the first one found 
find all *.ogg (case insensitive) files under your home directory that are less than 100mb in size 
find all *.ogg (case insensitive) files/directories in entire file system 
find all *.ogg (case insensitive) files/directories under your home directory 
find all *.ogg (case insensitive) files/directories under your home directory that are greater than 100mb in size 
find all *.ogg (case insensitive) files/directories under your home directory that are greater than 20mb in size 
find all *.ogg (case insensitive) files/directories under your home directory that are not greater than 20mb in size 
find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory 
find all *.ogg files on the system ignoring the case 
find all *.ogg files under the home directory ignoring the case 
find all *.old files and move them to directory oldfiles 
find all *.p[lm] files under /users/tom directory that matches both the regex UNK_START ->get( UNK_END and UNK_START #hyphenate UNK_END in their contents 
find all *.p[lm] files under /users/tom directory that matches the regex UNK_START ->get(\|#hyphenate UNK_END in their contents 
find all *.p[lm] files/directories under current directory 
find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output 
find all *.pdf files under ./polkadots 
find all *.pdf.marker files under ${input_location} and move them to ${output_location} also move any *.pdf files with the same name under current directory to ${output_location} 
find all *.php (case insensitive) and *.js files (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths 
find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $exclude/* paths 
find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding *.js files/directories under /home/jul/here/exclude/* paths 
find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths 
find all *.php files under current directory and change their permission to 640 
find all *.php files under current directory and change their permission to 644 
find all *.plist files/directories under current directory 
find all *.plist files/directories under current directory 
find all *.plist files/directories under current directory 
find all *.ps files under $startdir 
find all *.py (case insensitive) files/directories under dir directory ignoring .git path 
find all *.py files under and below the current directory and search them for UNK_START xrange UNK_END 
find all *.py files under current directory 
find all *.py files under current directory and search for regular expressions taken from the search_terms.txt file 
find all *.py files/directories under current directory 
find all *.py files/directories under current directory 
find all *.rb (regular) files under current directory 
find all *.rb (regular) files under current directory and change their mode to 600 
find all *.rb (regular) files under current directory and count their line numbers 
find all *.rb (regular) files under current directory and count their line numbers 
find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path. 
find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals UNK_START hello, UNK_END and UNK_START ! UNK_END 
find all *.rb (regular) files under current directory ensuring white space safety and print at most two file names/paths per line 
find all *.rb and *.py files/directories under current directory 
find all *.rb files/directories under current directory 
find all *.rb files/directories under current directory 
find all *.rb files/directories under current directory 
find all *.rb files/directories under current directory 
find all *.rpm files/directories under current directory 
find all *.sh files owned by user vivek 
find all *.sql file that are not newer than $oldest_to_keep excluding the $oldest_to_keep file 
find all *.srt files under directory named UNK_START working UNK_END and show the first one found 
find all *.swp files/directories under current directory 
find all *.tar.gz files/directories under /directory/whatever which were modified more than $days ago 
find all *.tex files/directories in maximum 2 levels down the current directory 
find all *.tex regular files in maximum 2 levels down the current directory 
find all *.tex regular files under current directory 
find all *.texi files in /usr/local/doc 
find all *.txt (case insensitive) files of user root under / directory and show a few lines of output from the beginning 
find all *.txt and *.json files 
find all *.txt and *.json files in current directory 
find all *.txt file (case insensitive) in the entire system and copy them to /tmp/txt 
find all *.txt files of user tecmint under /home directory 
find all *.txt files that reside under and below /home/wsunid/ 
find all *.txt files under / and print their sizes and paths 
find all *.txt files under /foo and delete them 
find all *.txt files under /foo and print their total size 
find all *.txt files under current directory and print their timestamps and paths 
find all *.txt files under current directory that contains the regex UNK_START pattern UNK_END and list them with their filenames and matches 
find all *.txt files under current directory with their timestamps and paths, sort them and print the last entry only 
find all *.txt files under current directory, change their permission to 666 and copy them to /dst/ directory 
find all *.txt files under the current directory whose names are not UNK_START file.txt UNK_END 
find all *.txt files under the current directory whose names are not UNK_START file.txt UNK_END 
find all *.txt files/directories in entire file system 
find all *.txt files/directories under current directory 
find all *.txt files/directories under current directory 
find all *.txt files/directories under current directory 
find all *.txt files/directories under current directory 
find all *.txt files/directories under current directory 
find all *.txt files/directories under current directory 
find all *.txt files/directories under current directory discarding UNK_START permission denied UNK_END errors 
find all *.txt files/directories under current directory terminating their names/paths with null character 
find all *.txt files/directories under your home directory 
find all *.txt files/directories under your home directory 
find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names 
find all *.xml files under current directory 
find all *.xml.bz2 files under current directory 
find all *.xml.bz2 files under current directory 
find all *1234.56789* files/directories under current directory 
find all *company* files/directories under /root/of/where/files/are directory 
find all *foobar* files/directories under current directory and copy them to ~/foo/bar 
find all *foobar* files/directories under current directory and copy them to ~/foo/bar 
find all *bar files/directories under current directory 
find all *blue* files/directories under /myfiles 
find all *company* (case-insensitive) files/directories under /basedir with null character as the delimiter 
find all *company* files/directories under /root/of/where/files/are directory 
find all *conf* files recursively under current directory 
find all *fink* files/directories in entire file system 
find all *fink* files/directories in entire file system 
find all *fink* files/directories under current directory 
find all *foo files/directories under current directory 
find all *foo files/directories under current directory (error prone) 
find all *fstab* files under and below /etc 
find all *gz files under asia and emea directory 
find all *shp* directories under current directory and move UNK_START * UNK_END (literal) file/directory inside those directories to shp_all 
find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/ 
find all *shp* directories under current directory and move their contents to ../shp_all/ 
find all *shp* files/directories under current directory 
find all *shp* files/directories under current directory and move them to ../shp_all/ 
find all *stat files/directories under /usr 
find all *text files/directories under current directory 
find all *~ files/directories under dir and print an rm command for each of them for deletion 
find all .* files excluding list_files (case insensitive) under current directory 
find all .bak files starting from the current directory and delete them 
find all .c and .c files in the current directory tree that contain UNK_START main( UNK_END and copy them to directory test1/ 
find all .c and .h files in the current directory tree and search them for UNK_START expr UNK_END 
find all .c, .h files in the current directory tree and search them for string UNK_START expr UNK_END 
find all .core files on the system starting from / and delete them 
find all .core files on the system starting from / and delete them 
find all .gif and .jpg files in the /var/www directory tree 
find all .gif files in the /var/www directory tree 
find all .gif files in the /var/www directory tree that are between 5 kb and 10 kb in size 
find all .gz archives in the /path/to/dir directory tree 
find all .gz archives in the current directory tree 
find all .gz archives in the current directory tree and check if they are valid 
find all .gz archives in the current directory tree and check if they are valid 
find all .gz archives in the current directory tree and check if they are valid 
find all .java files under current directory 
find all .java files starting from the current folder 
find all .java files starting from the current folder 
find all .java files under and below the current directory 
find all .java files whose name contains UNK_START message UNK_END 
find all .jpg files in the current directory and below. 
find all .js files in the $d directory tree whose pathnames do not contain whitespaces 
find all .js files in the current directory tree that do not contain a whitespace 
find all .less files in the current directory tree 
find all .mp3 files starting from the current directory 
find all .mp3 files starting from the current directory and delete them 
find all .mp3 files with more than 10mb and delete them 
find all .mp3 files with more then 10mb and delete them from root directory . 
find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string UNK_START debug ( UNK_END 
find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string UNK_START debug ( UNK_END 
find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string UNK_START debug ( UNK_END 
find all .php files in the current directory tree 
find all .php files starting from the root directory / 
find all .php files starting from the root directory and ignoring /media 
find all .py files in the current directory except UNK_START setup.py UNK_END and those beginning with UNK_START test_ UNK_END 
find all .rb files owned by root in the /apps/ folder and below that have been accessed in the last two minutes. 
find all .rpm files and change their permissions to 755 
find all .sh files in or below the current directory and move them to folder ~/back.scripts 
find all .sh files in or below the current directory and move them to folder ~/back.scripts 
find all .sh files in the current directory tree and remove them 
find all .sh files in the current directory tree and remove them 
find all .sh files in the current directory tree and remove them 
find all .sql files in the current directory recursively and print their path names separated by zeroes 
find all .svn directories under current directory and delete them 
find all .tmp files under and below the /tmp/ directory and remove them 
find all .txt files except readme.txt 
find all .txt files in current directory and rename with .html . 
find all .txt files in the /home/user directory tree and copy them to /home/backup 
find all .txt files in the /home/user1 directory tree and copy them to /home/backup 
find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/ 
find all .txt files in the user's home directory and below. 
find all .txt files of user tecmint under /home directory 
find all .txt files under the current directory and below 
find all .txt files under the current directory and below 
find all .txt files under the current directory and below 
find all .zip files in the current directory tree 
find all .zip files starting from the current directory which are owned by user tommye 
find all /path/to/check/* regular files without descending into any directory 
find all 0644 permission files/directories under current directory tree and show only the first 10 of them 
find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444 
find all 100mb files in file system and delete them using rm command 
find all 100mb+ files and delete them 
find all 15mb files 
find all 15mb files in entire file system 
find all 1us* files/directories under current directory 
find all 2*.data files/directories under jcho directory 
find all 400 permission files under /data directory 
find all 400 permission files under /data directory 
find all 400 permission files under /data directory and change their permission to 755 
find all 400 permission files under /data directory and print UNK_START modifying UNK_END appended with file path for each of them 
find all 400 permission files under /data directory with null character as the delimiter 
find all 400 permission files under /data directory, print UNK_START modifying UNK_END appended with file path for each of them and change their permission to 755 
find all 50mb files 
find all 50mb files in file system 
find all 664 permission files/drectories under current directory tree 
find all 755 permission regular files under current directory tree 
find all 777 permission directories and use chmod command to set permissions to 755 
find all 777 permission directories and use chmod command to set permissions to 755 
find all 777 permission directories under current directory and set permissions to 755 
find all 777 permission files and use chmod command to set permissions to 644 
find all 777 permission files in entire file system and set permissions to 644 
find all 777 permission files/directories under current directory tree 
find all 777 permission regular files and use chmod command to set permissions to 644 
find all c source code files from the current directory tree that contain UNK_START keyword UNK_END in their pathnames, ignoring the case 
find all css files 
find all css files that do something with html id #content 
find all es* and fs_* files under current directory 
find all executable files 
find all executable files in the file system 
find all html files starting with letter UNK_START a UNK_END in the current directory and below 
find all html files starting with letter UNK_START a UNK_END in the current directory and below ignoring the case 
find all ip addresses in /etc directory files 
find all jpg files under the UNK_START $source UNK_END directory and below 
find all mp3 files in the home directory tree that were modified in the last 24 hours 
find all mp3s in the /home directory tree 
find all makefile's in the current directory tree 
find all makefile's in the current directory tree and look for line 235 in each of them 
find all name* files under ../../$name-module and rename them by replacing UNK_START name UNK_END with $name (will be expanded in the current shell) in their names 
find all ogg files in the home directory larger than 20 megabytes 
find all ogg files in the home directory that are at most 20 megabytes in size 
find all php files in the current directory recursively 
find all php files in the current directory recursively and search them for string UNK_START $test UNK_END with 8 simultaneous processes 
find all php files under current directory 
find all php files under current directory that contain only one line 
find all png and jpg files and append them to archive `images.tar' 
find all perl source code files 
find all readme's in /usr/share 
find all read only files 
find all read only files in entire file system and show a few lines of output from the beginning 
find all read only files in the file system 
find all sgid files 
find all sgid files in entire file system 
find all sgid files in entire file system 
find all sgid set files 
find all sgid set files in the file system 
find all sgid set files under current directory and show a few lines of output from the beginning 
find all suid files . 
find all suid files in entire file system 
find all suid files in entire file system 
find all suid set files 
find all suid set files in the file system 
find all suid set files under current directory and show a few lines of output from the beginning 
find all subscription.java files/directories under current directory and enter into the parent directory of the first one found 
find all subscription.java files/directories under current directory and enter into the parent directory of the first one found 
find all subscription.java files/directories under current directory and enter into the parent directory of the first one found 
find all txt files in the current directory and copy them to directory UNK_START $home/newdir UNK_END 
find all txt files in the current directory and copy them to directory UNK_START $home/newdir UNK_END 
find all txt files in the current directory and copy them to directory UNK_START $home/newdir UNK_END 
find all txt files on the system and copy them to /tmp/txt 
find all txt files that belong to user root 
find all `doc.txt' files in the current directory tree printing UNK_START found UNK_END for each of them 
find all aliencoders.[0-9]+ files under /home/jassi/ directory 
find all aliencoders.[0-9]+ files/directories under /home/jassi/ directory 
find all broken symlinks in maximum 1 level down the $path directory 
find all broken symlinks under /path/to/search directory 
find all broken symlinks under /path/to/search directory 
find all broken symlinks under current directory 
find all broken symlinks under current directory 
find all broken symlinks under current directory 
find all broken symlinks under current directory 
find all broken symlinks under current directory 
find all broken symlinks under current directory 
find all btree*.c files under current directory 
find all build* directories under /var/www/html/ and print all but first 5 appending with the string UNK_START rf UNK_END 
find all build* directories under /var/www/html/ and reverse sort them 
find all build* directories under current directory and reverse sort them 
find all catalina* files/directories under /path/to/search/in 
find all catalina* files/directories under current directory 
find all dir* files/directories under parent 
find all directories and for each of them, print an mv command to move it to /new/location 
find all directories at level 3 of directory tree $from_dir 
find all directories by the name `httpdocs' on the system 
find all directories by the name `httpdocs' on the system 
find all directories containing UNK_START linux UNK_END in their names under UNK_START /root UNK_END directory tree 
find all directories in /path/to/dir/ without going into sub-directories 
find all directories in /path/to/dir/ without going into sub-directories and append a null character at the end of each paths 
find all directories in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique paths 
find all directories in 1 level down the /home directory that have two consecutive vowels in their names and count them 
find all directories in 1 level down the current directory 
find all directories in current directory without going into sub-directories 
find all directories in directory tree `httpdocs' 
find all directories in entire file system which are larger than 50kb 
find all directories in level 1 down the $queue directory 
find all directories in maximum 1 level down the current directory that were modified less than 1 day ago 
find all directories in maximum 2 levels down the /tmp directory 
find all directories in maximum 2 levels down the /tmp/test directory 
find all directories in the /data1/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago 
find all directories in the /data1/realtime directory tree that were modified within the last 60 minutes 
find all directories in the /path/to/base/dir tree 
find all directories in the current directory tree 
find all directories in the current directory tree excluding hidden directories and create them in UNK_START ../demo_bkp UNK_END 
find all directories in the current directory tree that are not accessible by all 
find all directories in the current directory tree that do not have `execute' permissions for anyone 
find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago 
find all directories in the current directory tree with UNK_START music_files UNK_END in their names 
find all directories in the current one recursively which have the write bit set for UNK_START other UNK_END 
find all directories in the current one with UNK_START linkin park UNK_END in their names and copy them to /users/tommye/desktop/lp 
find all directories matching the regex UNK_START .texturedata UNK_END in their names under UNK_START /path/to/look/in/ UNK_END directory tree 
find all directories name nasa in the current directory and below. 
find all directories named UNK_START 0 UNK_END in the current directory tree and create a single tar archive of their rs* subdirectories 
find all directories named UNK_START 0 UNK_END in the current directory tree and create a tar archive of their rs* subdirectories 
find all directories named UNK_START d UNK_END in the UNK_START a UNK_END directory tree 
find all directories named UNK_START d UNK_END in the current directory tree 
find all directories named UNK_START d UNK_END in the current directory tree 
find all directories named UNK_START nasa UNK_END 
find all directories named $1 under $home directory tree and remove them 
find all directories named UNK_START .texturedata UNK_END under UNK_START /path/to/look/in/ UNK_END directory tree 
find all directories named UNK_START files UNK_END under current directory and set read-write-execute permission for owner and group and no permission for other for those directories 
find all directories named UNK_START local UNK_END in entire file system 
find all directories named UNK_START mydir UNK_END under UNK_START local UNK_END and UNK_START /tmp UNK_END directory tree 
find all directories named UNK_START octave UNK_END under current directory tree 
find all directories named cvs, and deletes them and their contents. 
find all directories named build under the current directory 
find all directories named essbase under /fss/fin 
find all directories named postgis-2.0.0 under / directory 
find all directories on the system whose size is greater than 50k 
find all directories recursively starting from / and count them 
find all directories recursively starting from / and skipping the contents of /proc/, and count them 
find all directories starting from / that have permissions 777 
find all directories starting from your_starting_directory that contain the string UNK_START 99966 UNK_END in their names 
find all directories starting from the current directory 
find all directories that have been accessed $ftime days ago under current directory tree 
find all directories that have been modified in the last seven days. 
find all directories that start with stat 
find all directories under $1/.hg and set their sgid bit 
find all directories under $1/.hg and set their sgid bit 
find all directories under $folder, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically 
find all directories under $root_dir and show the sub-directories of the directories before the directories themselves 
find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories 
find all directories under $path 
find all directories under $root and replace all newlines with : (colon) in the output 
find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories 
find all directories under ${1:-.} directory without descending into any sub-directories 
find all directories under UNK_START .cache/chromium/default/cache UNK_END that are bigger than 100 mb in size excluding single letter directory names 
find all directories under UNK_START /nas UNK_END directory tree 
find all directories under UNK_START /var/www UNK_END directory tree excluding UNK_START /var/www/web-release-data UNK_END and UNK_START /var/www/web-development-data UNK_END directories and their sub-directories 
find all directories under UNK_START a UNK_END directory tree excluding paths containing the directory UNK_START a UNK_END 
find all directories under UNK_START project UNK_END directory without going into subdirectories that do not match the posix egrep regex $pattern in their paths and are not empty 
find all directories under UNK_START test UNK_END directory tree that match the regex UNK_START .*/course[0-9.]* UNK_END in their paths 
find all directories under UNK_START test UNK_END directory tree that match the regex UNK_START [course*] UNK_END in their paths 
find all directories under UNK_START test UNK_END directory tree whose paths match the regex UNK_START .*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$ UNK_END 
find all directories under /directory-path and change their permission to 2755 
find all directories under /fss/fin 
find all directories under /home/me 
find all directories under /home/me/"$d" 
find all directories under /home/me/target_dir_1 
find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750 
find all directories under /home/username/public_html/modules and set their permission to 750 
find all directories under /home/username/public_html/sites/all/modules and set their permission to 750 
find all directories under /home/username/public_html/sites/all/themes and set their permission to 750 
find all directories under /home/username/public_html/sites/default/files and set their permission to 770 
find all directories under /home/username/public_html/themes and set their permission to 750 
find all directories under /home/username/tmp and set their permission to 770 
find all directories under /myfiles directory 
find all directories under /path/to/dir and set their permission to 755 
find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs and change their permission to 755 
find all directories under /path/to/base/dir and change their permission to 755 
find all directories under /path/to/base/dir and change their permission to 755 
find all directories under /path/to/base/dir and change their permission to 755 
find all directories under /path/to/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension 
find all directories under /path/to/dir and change their permission to 755 
find all directories under /var/www directory and set their permission to 755 
find all directories under /var/www/some/subset and set their sgid bit 
find all directories under and below /home/admin/public_html/, and change their permissions to 755 
find all directories under and below /root that match pattern "*linux*", case insensitive 
find all directories under and below directory "folder_name", and change their permissions to 775 
find all directories under and below parent_directory 
find all directories under current directory 
find all directories under current directory 
find all directories under current directory 
find all directories under current directory and change their permission to 500 
find all directories under current directory and change their permission to 644 
find all directories under current directory and change their permission to 700 
find all directories under current directory and change their permission to 755 
find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other 
find all directories under current directory and set read & execute permission for group and other for these files 
find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories 
find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories 
find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories 
find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and other for those directories 
find all directories under current directory and set their permission to 755 
find all directories under current directory and set their permission to 775 
find all directories under current directory and set their permission to 775 
find all directories under current directory excluding directories (along with their contents) that start with a . (dot) in their names 
find all directories under current directory excluding directories (along with their contents) that start with a . (dot) in their names 
find all directories under current directory excluding those which match the regex /\. in their names 
find all directories under current directory having dirname in their name 
find all directories under current directory tree that match the case insensitive regex UNK_START ^\./course\([0-9]\.\)*[0-9]$ UNK_END in their paths 
find all directories under current directory tree that were modified $ftime days ago 
find all directories under current directory whose names are 33 characters long 
find all directories under current directory whose paths are 5 characters long 
find all directories under current directory with 755 permission and change their permission to 644 
find all directories under dir whose names are 33 characters long 
find all directories under foldername directory and set their permission to 755 
find all directories under htdocs directory and set their permission to 775 
find all directories under maximum 1 level down the /parent directory and set their permission to 700 recursively 
find all directories under maximum 1 level down the current directory and set their permission to 700 
find all directories under maximum 1 level down the current directory and set their permission to 700 recursively 
find all directories under media/ directory and change their permission to 700 
find all directories under minimum 1 level down the $given_dir directory 
find all directories under minimum 1 level down the $given_dir directory with null character as the delimiter 
find all directories under minimum 1 level down the current directory and set their permission to 755 
find all directories under minimum 1 level down the current directory excluding directories (along with their contents) that start with a . (dot) in their names 
find all directories under minimum 2 levels down the mydir directory 
find all directories under mydir 
find all directories under path_to_dir directory 
find all directories under present working directory 
find all directories under the current directory that is on the same filesystem, execute UNK_START /tmp/count_em_$$ UNK_END with the directory as an argument, sort the result numerically from least value to greatest value 
find all directories under var/ directory and change their permission to 700 
find all directories under ~/code without descending into hidden directories and print them appended with : (colon) 
find all directories whose name is tecmint in / directory 
find all directories whose name is root in / directory 
find all directories whose status were changed $ftime days ago 
find all directories with 755 permission and change the permission to 700 
find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755 
find all directories with space in their names under current directory and rename them by replacing all spaces with _ 
find all duplicate UNK_START .jar UNK_END files in the current directory tree 
find all empty directories in minimum 2 levels down the root directory 
find all empty directories in the current one and delete them 
find all empty directories in the current one and delete them 
find all empty directories recursively starting from the current one and delete them 
find all empty directories recursively starting from the current one and delete them 
find all empty directories under $somedir and copy /my/configfile into those directories 
find all empty directories under /tmp 
find all empty directories under /tmp and below 
find all empty directories under a certain path 
find all empty directories under current directory 
find all empty files (zero byte files) in your home directory and its sub-directories. 
find all empty files in /tmp 
find all empty files in home directory 
find all empty files in the current directory and delete them 
find all empty files in the current directory and delete them 
find all empty files in the current directory and delete them 
find all empty files starting from the current directory and delete them 
find all empty files starting from the current directory and delete them 
find all empty files under /tmp 
find all empty files under /tmp and below 
find all empty files under a certain path 
find all empty folders in the current directory and below 
find all empty regular files in the current directory and below 
find all empty regular files in the current directory tree 
find all executable files 
find all executable files under current directory and reverse sort them 
find all executable files under current directory and show a few lines of output from the beginning 
find all executable files under the current directory and below 
find all executable files under {} and reverse sort them 
find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory 
find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory 
find all executable upvoter-* files (following symlinks) under maximum 1 level down the current directory 
find all executable upvoter-* files/symlinks under maximum 1 level down the {} directory 
find all executables in the current directory tree 
find all executables under /path directory 
find all fglrx-libgl* files under and below debian/fglrx/ 
find all fglrx-libglx* files under and below debian/fglrx/ 
find all file in current directory with have .c extenstion & have 777 permission . delete then 
find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time 
find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time 
find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths 
find all file which have more the 2 hard link 
find all file.ext files/directories under /home/kibab directory and print . for each of them 
find all file.ext files/directories under current directory with UNK_START foobar UNK_END in their paths and copy them into the current directory 
find all file.ext files/directories under present working directory and print . for each of them 
find all file1 and file9 files/directories under current directory 
find all filename.* files/directories under /root/directory/to/search 
find all filenames ending with .c in the /usr directory tree 
find all filenames ending with .c in the current directory tree 
find all filenames ending with .c in the current directory tree, case insensitive 
find all files accessed on the 29th of september, 2008, starting from the current directory 
find all files and directories and count them 
find all files and directories containing UNK_START disc UNK_END in their names 
find all files and directories in the current directory recursively that contain spaces in their names 
find all files and directories in the current directory tree except those whose name is "dirname", case insensitive 
find all files and directories in the current directory tree with UNK_START linkin park UNK_END in their names and copy them to /users/tommye/desktop/lp 
find all files and directories last modified less than a day ago and copy to UNK_START ../changeset UNK_END creating directories as needed 
find all files and directories on the system whose name is `filedir' 
find all files and directories starting from the current directory 
find all files and directories that do not match the pattern given as the $controlchars variable 
find all files and directories that have been modified in the last seven days. 
find all files and directories under current directory 
find all files and directories under current directory without crossing over to other partitions 
find all files and directories whose names end in UNK_START .rpm UNK_END and change their permissions to 755 
find all files and directories whose names end in ".rpm", ignoring removable media, such as cdrom, floppy, etc. 
find all files and directories with permissions 664 
find all files beneath the current directory that end with the extension .java and contain the characters string ignoring case. print the name of the file where a match is found. 
find all files beneath the current directory that end with the extension .java and contain the characters stringbuffer. print the name of the file where a match is found. 
find all files called UNK_START file1.txt UNK_END that reside under and below /home/wsunid/ 
find all files called wp-config.php in the /var/www directory and below 
find all files changed on the 29th of september, 2008, starting from the current directory 
find all files except files with UNK_START .gz UNK_END extension in the current directory non-recursively and compress them with gzip 
find all files excluding *.gz files in the current directory tree and compress them with gzip 
find all files excluding files ending with 'gz', UNK_START tmp UNK_END and UNK_START xftp UNK_END in their names in the current directory tree and compress them with gzip not preserving timestamp and original name 
find all files files under the current directory except *.txt 
find all files in UNK_START /home/ UNK_END which contain "string1", UNK_START string2 UNK_END or the host name in its filename 
find all files in $dir directory (non-recursive) and count them 
find all files in $dir directory without going into sub-directories 
find all files in /dir1 and print only the filenames (not paths) 
find all files in /dir1 and print only the filenames (not paths) 
find all files in /home/kos and below whose names end in UNK_START .tmp UNK_END 
find all files in /home/user/ that were created or changed 10 minutes ago 
find all files in /tmp whose names begin with the current user's name followed by UNK_START . UNK_END 
find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days 
find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths 
find all files in and below all subdirectories of the current directory 
find all files in and below the home directory that have been modified in the last 90 minutes 
find all files in current directory and search for UNK_START searchname UNK_END in those files 
find all files in current directory and search for UNK_START searchname UNK_END in those files and show errors for files that are not directly on the current directory 
find all files in current directory excluding hidden files and put the output into full_backup_dir variable 
find all files in current directory excluding hidden files, archive them and put the output into variable full_backup_dir 
find all files in current directory that were modified less than 1 day ago excluding hidden files and archive them and put the output into the variable file_changed 
find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable 
find all files in directory tree UNK_START dirname UNK_END 
find all files in entire file system which are larger than 20000kb 
find all files in maximum 1 level down the current directory that were modified less than 1 day ago 
find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today 
find all files in maximum 2 levels down the current directory 
find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/. 
find all files in the /home/ directory tree that are owned by bob 
find all files in the /home/ directory tree that were last accessed more than 7 days ago 
find all files in the /home/ directory tree that were last modified less than 7 days ago 
find all files in the /home/myuser directory recursively that are older than 7 days 
find all files in the /myfiles directory tree following symbolic links 
find all files in the /usr directory tree that are owned by group `staff' 
find all files in the /var/tmp directory tree with uid=1000 
find all files in the `sourcedir' directory 
find all files in the `sourcedir' directory tree 
find all files in the `work' directory tree, pass them to grep and search for UNK_START profit UNK_END 
find all files in the current directory and below with extension .php and replace UNK_START php UNK_END with UNK_START html UNK_END in their names 
find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours. 
find all files in the current directory and its sub-directories that have not been assessed in more than 30 days. 
find all files in the current directory recursively that were last modified more than 5 days ago 
find all files in the current directory recursively with UNK_START linkin park UNK_END in their names and copy them to /users/tommye/desktop/lp 
find all files in the current directory recursively with UNK_START linkin park UNK_END in their names and copy them to /users/tommye/desktop/lp, preserving path hierarchy 
find all files in the current directory tree and count them 
find all files in the current directory tree containing UNK_START foo UNK_END in their names 
find all files in the current directory tree except .html, ignoring .svn directories 
find all files in the current directory tree ignoring the UNK_START .git UNK_END directory 
find all files in the current directory tree named UNK_START files.ext UNK_END 
find all files in the current directory tree that are newer than some_file 
find all files in the current directory tree that are not newer than some_file 
find all files in the current directory tree that match pattern UNK_START a(b* UNK_END 
find all files in the current directory tree that were last changed $minutes minutes ago 
find all files in the current directory tree which do not belong to any user 
find all files in the current directory tree whose names are UNK_START .ds_store UNK_END 
find all files in the current directory tree whose names are UNK_START .ds_store UNK_END and delete them 
find all files in the current directory tree whose names are "file_name", except for those with pathnames matching pattern UNK_START ./dirt to be excluded/* UNK_END 
find all files in the current directory tree whose names begin with UNK_START - UNK_END 
find all files in the current directory tree whose names end with the suffix ".keep.$1", where $1 is the first command line argument, and remove that suffix 
find all files in the current directory tree whose path names match pattern UNK_START ./sr*sc UNK_END 
find all files in the current directory tree whose pathnames match pattern UNK_START ./sr*sc UNK_END 
find all files in the current directory tree whose pathnames match pattern UNK_START */1/lang/en.css UNK_END 
find all files in the current directory tree whose size is greater than 1mb 
find all files in the current directory tree whose size is greater than 1mb, and move them to the UNK_START files UNK_END folder 
find all files in the current directory tree whose size is greater than 1mb, and move them to the UNK_START files UNK_END folder 
find all files in the current directory tree whose size is greater than 1mb, and move them to the UNK_START files UNK_END folder with confirmation 
find all files in the current directory tree with size bigger than 5 mb and sort them by size 
find all files in the current directory tree, except git files 
find all files in the current directory аргумент and its sub-directories with the optional constraints of опция_поиска, значение and/or значение. 
find all files in the current user's home directory and its sub-directories with the optional constraints of опция_поиска, значение and/or опция_действия. 
find all files in the directory $directory or below with the permissions specificed by $permissions. 
find all files in the file system with the suid bit 
find all files in the home directory tree that are owned by another user 
find all files in the home directory tree that are owned by another user and change their ownership to the current user 
find all files in the home directory with open permissions 
find all files in the level 6 subdirecotries of /usr/src and below, ignoring cvs files 
find all files in your home directory and below that are exactly 100m. 
find all files in your home directory and below that are larger than 100m. 
find all files in your home directory and below that are smaller than 100m. 
find all files in ~/clang+llvm-3.3/bin/ and print UNK_START basename /file/path UNK_END for each file 
find all files larger than 100m and delete them 
find all files larger than 20000k 
find all files matching UNK_START abc* UNK_END in the current directory and append a column with UNK_START ok UNK_END 
find all files matching pattern UNK_START .#* UNK_END in the current directory tree 
find all files matching shell pattern UNK_START foo/bar UNK_END in the foo directory tree 
find all files matching the pattern UNK_START ${pattern} UNK_END in their name and execute ${my_command} for each of them with the file path as argument 
find all files modified on the 7th of june, 2007, starting from the current directory 
find all files more than 700 megabytes 
find all files name passwd in the root directory and all its sub-directories. 
find all files named UNK_START mycprogam.c UNK_END (ignoring the case) and calculate each file's md5sum. 
find all files named UNK_START file.ext UNK_END in the current directory tree and print the path names of the directories they are in 
find all files named UNK_START file.ext UNK_END in the current directory tree and print the path names of the directories they are in 
find all files named UNK_START file.ext UNK_END in the current directory tree and print the path names of the directories they are in 
find all files named UNK_START file.ext UNK_END under the current working directory tree and print its filename 
find all files named UNK_START file.ext UNK_END within the current folder and print the path where each one is located 
find all files named UNK_START file.ext UNK_END within the current folder and print the path where each one is located 
find all files named UNK_START filename UNK_END 
find all files named UNK_START filename UNK_END in the current directory tree, not descending into UNK_START folder1 UNK_END directories 
find all files named UNK_START filename UNK_END in the current directory tree, not descending into UNK_START folder1 UNK_END directories 
find all files named UNK_START foo_bar UNK_END in the current directory recursively 
find all files named UNK_START something UNK_END in the current folder and below and run them through the ls -l command in a one batch. 
find all files named UNK_START something UNK_END in the current folder and below and run them through the ls -l command, one by one. 
find all files named UNK_START test2 UNK_END in the current directory 
find all files named UNK_START test2 UNK_END in the current directory tree 
find all files named UNK_START makefile UNK_END in the /usr/ports directory tree and count the number of lines in them beginning with use_rc_subr 
find all files named UNK_START makefile UNK_END in the /usr/ports directory tree and count the number of lines in them matching regular expression UNK_START ^master_site.*cpan UNK_END 
find all files named UNK_START makefile UNK_END in the /usr/ports directory tree and count the number of lines in them matching regular expression UNK_START ^master_site_subdir.*\.\./.*authors UNK_END 
find all files named UNK_START aaa.txt UNK_END under current directory tree and display their contents 
find all files named UNK_START file UNK_END in 1 level down the current directory whose status were changed more than 1 day ago 
find all files named UNK_START file UNK_END in 1 level down the current directory whose status were changed more than 1 hour ago 
find all files named UNK_START foo UNK_END under current directory tree without descending into directories named UNK_START foo UNK_END 
find all files named UNK_START foo UNK_END under your home directory and list them with confirmation prompt 
find all files named UNK_START new UNK_END under current directory tree and display their contents 
find all files named UNK_START new UNK_END under current directory tree and display their contents 
find all files named UNK_START test UNK_END in the current directory tree, not descending into UNK_START test UNK_END directories 
find all files named UNK_START text.txt UNK_END under current directory tree and display their contents 
find all files named `file1' on the system 
find all files named `file1' starting from / 
find all files newer than httpd.conf under and below the current directory 
find all files of the user with uid=1000 
find all files of the user with uid=1000 
find all files on the system that are larger than 600 mb 
find all files on the system that are world writable 
find all files on the system that are world writeable 
find all files on the system that have been modified in the last 10 minutes 
find all files on the system whose names are UNK_START autoload.php UNK_END 
find all files on the system whose names are UNK_START composer.json UNK_END 
find all files on the system whose names are UNK_START composer.json UNK_END and search them for UNK_START drush UNK_END 
find all files on the system whose names are UNK_START drush UNK_END 
find all files on your system that are world writable 
find all files owned by group `group2' 
find all files owned by group `root' in the current directory tree and change their user to `temp' 
find all files owned by the user daniel in the current directory and below. 
find all files owned by user `comp' 
find all files owned by user vivek 
find all files recursively starting from / that have been modified in the past 30 minutes and list them 
find all files recursively which end in UNK_START .php UNK_END 
find all files residing in /home/dm/video or below that were changed less than 7 days ago 
find all files residing in /home/dm/video or below that were last changed at least 10 days ago 
find all files starting from / that belong to user1 
find all files starting from / whose names end with UNK_START .rpm UNK_END and change their permissions to 755 
find all files starting from the current directory that contain UNK_START .java UNK_END in their pathnames 
find all files starting from the current directory that match regular expression UNK_START .*message.*\.java UNK_END 
find all files starting from the current directory which are exactly 100mb in size 
find all files starting from the current directory which are larger than 100mb 
find all files starting from the current directory which are owned by the user tommye 
find all files starting from the current directory which are smaller than 100mb 
find all files that are exactly 50 bytes 
find all files that are less than 50 bytes 
find all files that are modified in last 3 days 
find all files that are set group id to 10 
find all files that are set group id to staff 
find all files that are set user id to root 
find all files that are set user id to root 
find all files that aren't owned by user www-data 
find all files that belong to group developer 
find all files that belong to group root 
find all files that belong to user root 
find all files that belongs to group UNK_START root UNK_END under / directory and show a few lines of output from the beginning 
find all files that belongs to group developer under /home directory 
find all files that belongs to user tecmint under /home directory 
find all files that belongs to user root under / directory and show a few lines of output from the beginning 
find all files that contain the case insensitive regex UNK_START stringtofind UNK_END in maximum 1 level down the / directory without descending into other partitions 
find all files that contain the case insensitive regex UNK_START stringtofind UNK_END in maximum 1 level down the / directory without descending into other partitions 
find all files that contain the case insensitive regex UNK_START stringtofind UNK_END in maximum 1 level down the / directory without descending into other partitions 
find all files that have additional permissions 
find all files that have been modified in the last seven days. 
find all files that have either a .php or a .js extension 
find all files that have the suid bit set 
find all files that have wrong permission 
find all files that were last accessed less than7 days ago under /home 
find all files that were last accessed more than 7 days ago under /home 
find all files that were last modified less than7 days ago under /home 
find all files that were modified later than ordinary_file in the current directory and its sub-directories. 
find all files that were not accessed in the past 100 days 
find all files throughout the entire file hierarchy with the optional constraints of опция_поиска, значение and/or опция_действия. 
find all files under UNK_START /path UNK_END that do not contain a UNK_START . UNK_END and append UNK_START .jpg UNK_END to their file name 
find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths 
find all files under $1 not matching the regex UNK_START .*/\..* UNK_END and execute hashmove on each of them with the file path as its argument 
find all files under $your_dir 
find all files under $d directory and set read-write permission for owner and group and no permission for other for those files 
find all files under $dir 
find all files under $dir 
find all files under $dir directory 
find all files under $musicdir directory 
find all files under $root_dir 
find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter 
find all files under $source_dir that match the regex expanded by $input_file_type in their paths 
find all files under $x directory and set read-write permission for owner and group and no permission for other for those files 
find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3} in their contents where ${string1} etc.. will be expanded 
find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3} in their contents where ${string1} etc.. will be expanded 
find all files under ${searchpath} that match the regex UNK_START "${string1}".*"${string2}".*"${string3}" UNK_END (${string1} ... won't be expanded) in their contents 
find all files under ./lib/app and redirect their sorted list to myfile 
find all files under ./lib/app and sort them 
find all files under /home that belong to user tecmint 
find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths 
find all files under /home/myfolder that match the regex UNK_START abc.*def.*ghi UNK_END in their contents 
find all files under /home/mywebsite/public_html/sites/all/modules and set their permission to 640 
find all files under /home/username/public_html/modules and set their permission to 640 
find all files under /home/username/public_html/sites/all/modules and set their permission to 640 
find all files under /home/username/public_html/sites/all/themes and set their permission to 640 
find all files under /home/username/public_html/sites/default/files and set their permission to 660 
find all files under /home/username/public_html/themes and set their permission to 640 
find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter 
find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter 
find all files under /mountpoint and below which have hard links 
find all files under /myfiles with 647 permission 
find all files under /myfiles with read-write access for others 
find all files under /path and below executable by `group' or `other' 
find all files under /path and below writable by `group' and `other' 
find all files under /path and below writable by `group' and `other' 
find all files under /path and below writable by `group' and `other' 
find all files under /path and below writable by `group' or `other' 
find all files under /path and calculate their md5sum 
find all files under /path/to/dir and set their permission to 644 
find all files under /path/to/base/dir and change their permission to 644 
find all files under /path/to/base/dir and change their permission to 644 
find all files under /path/to/base/dir and change their permission to 644 
find all files under /path/to/dir and change their permission to 644 
find all files under /path/to/dir that were modified less than 7 days ago and show only first several lines of output 
find all files under /path/to/dir that were modified less than 7 days ago with null character as the delimiter 
find all files under /path/to/input/ that match the case insensitive string literal UNK_START spammer@spammy.com UNK_END in their contents 
find all files under /somefolder matching the case insensitive regex UNK_START \(.*error.*\)\|\(^second.*\log$\)\|\(.*ffpc\.log$\) UNK_END in their paths 
find all files under /somefolder matching the extended case insensitive regex UNK_START \./(.*\.error.*|second.*log|.*ffpc\.log)$ UNK_END in their paths 
find all files under /somefolder matching the extended regex UNK_START \./(.*\.error.*|second.*log|.*ffpc\.log)$ UNK_END in their paths 
find all files under /somefolder matching the pattern expanded by $file_pattern in thier names 
find all files under /var/www directory and set their permission to 644 
find all files under and below /dir that were accessed less than 60 minutes ago 
find all files under and below /dir that were changed or created less than 60 minutes ago 
find all files under and below /dir that were modified less than 60 minutes ago 
find all files under and below the current working directory with the word california in the file 
find all files under and below the current working directory with the word california in the file (case insensitive), and count the number of lines in the output 
find all files under and below the current working directory with the word california in the file, and count the number of lines in the output 
find all files under and below the current working directory with the word california in the file, and count the number of lines in the output 
find all files under current directory 
find all files under current directory 
find all files under current directory 
find all files under current directory 
find all files under current directory and append a null character at the end of each of their paths 
find all files under current directory and change their permission to 400 
find all files under current directory and change their permission to 600 
find all files under current directory and change their permission to 644 
find all files under current directory and count the output line number 
find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission 
find all files under current directory and print only the filenames (not paths) 
find all files under current directory and print only the filenames (not paths) 
find all files under current directory and print them appending a null character at the end of each file paths 
find all files under current directory and search for UNK_START something UNK_END in those files 
find all files under current directory and search for UNK_START something UNK_END in those files 
find all files under current directory and set read permission for group and other for these files 
find all files under current directory and set read-write permission for owner and group and no permission for other for those directories 
find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files 
find all files under current directory and set their permission to 775 
find all files under current directory and set their permission to 775 
find all files under current directory and show their file information 
find all files under current directory and show their file information 
find all files under current directory and show their file information 
find all files under current directory excluding hidden directories 
find all files under current directory excluding hidden files 
find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', UNK_START mod_jk.log.[0-9]* UNK_END in their names 
find all files under current directory matching the pattern UNK_START [error,access,error_log,access_log,mod_jk.log]*.[0-9]* UNK_END in their names 
find all files under current directory matching the posix-egrep type regex UNK_START ^.*/[a-z][^/]*$ UNK_END in their names 
find all files under current directory matching the regex UNK_START .*\(\(error\|access\)\(_log\)?\|mod_jk\.log\)\.[0-9]+ UNK_END in their paths 
find all files under current directory that are larger than 10kb in size 
find all files under current directory that are read less than 1 minute ago 
find all files under current directory that were modified in the last 24 hours 
find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago 
find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago 
find all files under current directory that were modified less than 1 day ago 
find all files under current directory that were modified more than 1 day ago 
find all files under current directory that were modified more than 7 days ago and delete them 
find all files under current directory tree named UNK_START filename_regex UNK_END excluding UNK_START .svn UNK_END and UNK_START .pdv UNK_END directories and files then search for the case insensitive pattern UNK_START your search string UNK_END in those files 
find all files under current directory whose file type description contains "image", display only path to each file. 
find all files under current directory whose file type description contains "image", display the paths to files and file type descriptions. 
find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output 
find all files under current directory with 755 permission and change their permission to 644 
find all files under current directory with their size and paths, reverse sort them numerically, then print first 4 entries 
find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries 
find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter 
find all files under directory tree /path/to/dir whose permissions are not 644 
find all files under directory tree /path/to/dir whose permissions are not 644 
find all files under foldername directory and set their permission to 644 
find all files under images directory 
find all files under maximum 1 level down the ./subfolder and ./subfolder/*/ paths 
find all files under media/ directory and change their permission to 600 
find all files under minimum 1 level down the current directory 
find all files under path_to_dir 
find all files under the current directory and copy their permissions to the same file in UNK_START ../version1 UNK_END 
find all files under the current directory that are not the same file as UNK_START /home/nez/file.txt UNK_END 
find all files under the current directory whose filenames are not "file.txt", ignoring the case 
find all files under the current directory whose pathnames do not end with "video", ignoring the case 
find all files under var/ directory and change their permission to 600 
find all files which are accessed after modifying /etc/passwd files. 
find all files which begin with UNK_START a UNK_END or UNK_START b UNK_END from current directory downwards and print them. 
find all files which belong to user lal and change their ownership to ravi 
find all files which have 211028 inode number in current directory then locating and renaming unprintable directories 
find all files whose filename does not end with *.html. 
find all files whose name or type description includes "text", display only paths to files. 
find all files whose names begin with UNK_START makefile UNK_END at the /usr/ports directory tree's level 3 and count the number of lines with noportdocs or noportexamples in them. 
find all files whose names begin with UNK_START makefile UNK_END in the /usr/ports directory tree and count how many of them contain UNK_START qmakespec UNK_END 
find all files whose names begin with UNK_START makefile UNK_END in the /usr/ports directory tree and count how many of them contain UNK_START qtdir UNK_END 
find all files whose names contain the string UNK_START xpilot UNK_END which exist within UNK_START /usr/local/games UNK_END 
find all files whose names do not begin with UNK_START zsh UNK_END on ext3 file systems 
find all files whose names end with UNK_START macs UNK_END in and below the current directory 
find all files whose names end with UNK_START ~ UNK_END in the /home/peter directory tree, following symlinks, and delete them 
find all files whose names end with UNK_START ~ UNK_END in the /home/peter directory tree, following symlinks, and delete them 
find all files whose names end with UNK_START ~ UNK_END in the /home/peter directory tree, following symlinks, and delete them 
find all files whose names end with UNK_START ~ UNK_END in the /home/peter directory tree, following symlinks, and delete them 
find all files whose names end with UNK_START ~ UNK_END in the /home/peter directory tree, following symlinks, and delete them 
find all files whose owner is `user1' 
find all files whose permission are 777 
find all files with UNK_START .conf UNK_END extension under UNK_START /etc UNK_END directory going into at most 2 level deep and show the last 10 of them 
find all files with UNK_START .conf UNK_END extension under UNK_START /etc UNK_END directory tree that have been modified in the last 30 minutes 
find all files with UNK_START .db UNK_END extension (case insensitive) that belong to user UNK_START exampleuser UNK_END and were modified exactly 7 days ago under UNK_START /home UNK_END directory tree 
find all files with UNK_START .jpg UNK_END extension in the current directory ignoring sub-directories and archive them to a file named jpeg.tgz 
find all files with UNK_START .txt UNK_END (case insensitive) extension under $dir directory non-recursively and sort them numerically 
find all files with UNK_START .txt UNK_END extension under UNK_START /home/my_dir UNK_END dirctory tree and display the number of lines in these files 
find all files with 644 permission and change the permission to 664 
find all files with extension .aac in the /home directory tree 
find all files with name UNK_START file.ext UNK_END under the current working directory tree and print each full path directory name 
find all files with name ending with .txt and display only the filenames without full paths 
find all files with space in their names under current directory 
find all files with the suid bit set 
find all files with the suid bit set beginning with the root directory 
find all files with the suid bit set, starting from / 
find all files with the extension jpg regardless of case 
find all files with the name UNK_START myprogram.c UNK_END in the current directory and all of it's sub-directories. 
find all files with the name UNK_START myprogram.c UNK_END in the current directory and its sub-directories while ignoring the case of the file name. 
find all files you have modified in the last two days 
find all files, folders, symlinks, etc in the current directory recursively 
find all files, folders, symlinks, etc matching pattern UNK_START *.php UNK_END in the current directory recursively 
find all files, starting from / but ignoring removable media, whose names end with UNK_START .rpm UNK_END 
find all files/directoires that were modified more than 3 days ago under $dir directory tree 
find all files/directores that are newer than /etc/motd and conain the string UNK_START top UNK_END at the beginning of their names under user's home directory tree 
find all files/directores under UNK_START /usr/local UNK_END directory tree that case insensitively contain the word UNK_START blast UNK_END in their names 
find all files/directores under UNK_START /usr/local UNK_END directory tree that contain the word UNK_START blast UNK_END in their names 
find all files/directores under /etc and run the file command on each of them 
find all files/directores under /etc filter them by searching for UNK_START test UNK_END in their name and run the file command on each of them 
find all files/directories under /eserver6 directory and follow symlinks if needed 
find all files/directories case insensitively containing UNK_START xt UNK_END in their names under UNK_START /etc UNK_END directory tree 
find all files/directories containing UNK_START blah UNK_END (case insensitive) in their names that were modified in less than 2 days ago uder current directory tree 
find all files/directories containing UNK_START farm UNK_END in their names under UNK_START /usr/share UNK_END directory tree 
find all files/directories containing UNK_START foo UNK_END in their names under current directory tree 
find all files/directories containing the case insensitive string something' in their names under current directory tree 
find all files/directories excluding paths that match UNK_START .git UNK_END or UNK_START .gitignore UNK_END 
find all files/directories following symbolic links under current directory tree that are owned by UNK_START root UNK_END user 
find all files/directories following symlinks under /path/to/dir/* paths and print the timestamp in ymdhms format along with their paths 
find all files/directories greater than 100mb and print their list along with their size in /root/big.txt file 
find all files/directories ignoring *~ files/directories without descending into .snapshot directory with null character as the delimiter 
find all files/directories in 1 level down the current directory 
find all files/directories in all paths expanded by the glob pattern * 
find all files/directories in current directory and execute the script itself with minimal invocation for those files/directories 
find all files/directories in directories/files taken from the glob pattern UNK_START /folder/path/* UNK_END recursively that have not been modified in the last 2 hours and delete them 
find all files/directories in directories/files taken from the glob pattern UNK_START /tmp/test/* UNK_END recursively that have not been modified from the start of the day 
find all files/directories in directories/files taken from the glob pattern UNK_START /tmp/test/* UNK_END that were modified within the last day (day counted from today) 
find all files/directories in entire file system for which owner has at least read/write permissions, or the group has at least read permission, or others have at least read permission 
find all files/directories in entire file system for which owner has read/write/execute permissions, or the group has at least execute permission, or others have at least execute permission 
find all files/directories in entire file system less than 50 bytes 
find all files/directories in entire file system more than 700 megabytes 
find all files/directories in entire file system that are exactly 50 bytes 
find all files/directories in entire file system that are owned by UNK_START shadow UNK_END group 
find all files/directories in entire file system that are owned by UNK_START syslog UNK_END user 
find all files/directories in entire file system that have UNK_START write UNK_END bit set for either the owner, the group, or others 
find all files/directories in entire file system that have UNK_START write UNK_END bit set for either the owner, the group, or others 
find all files/directories in entire file system that have UNK_START write UNK_END bit set for either the owner, the group, or others 
find all files/directories in entire file system with 644 permission 
find all files/directories in level $i down the current directory with all positional parameters appended with the find command 
find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command 
find all files/directories in level 2 down the current directory 
find all files/directories in maximum 1 level down the current directory which do not have only read permission for UNK_START other UNK_END 
find all files/directories in the paths expanded by the glob pattern UNK_START .* UNK_END 
find all files/directories matching the regex .*sql.* 
find all files/directories matching the regex pattern UNK_START .*\\.rb$ UNK_END under current directory 
find all files/directories named $something under current directory 
find all files/directories named UNK_START .todo UNK_END under $storagefolder directory tree and print the parent directory names 
find all files/directories named UNK_START .todo UNK_END under $storagefolder directory tree and print the parent directory names 
find all files/directories named UNK_START .todo UNK_END under $storagefolder directory tree and print their parent paths 
find all files/directories named UNK_START desktop UNK_END under current directory 
find all files/directories named UNK_START findcommandexamples.txt UNK_END that belong to the user UNK_START root UNK_END in the entire filesystem 
find all files/directories named UNK_START findcommandexamples.txt UNK_END under UNK_START /root UNK_END directory tree 
find all files/directories named UNK_START waldo UNK_END under UNK_START books UNK_END directory tree that is located in user's home directory 
find all files/directories named UNK_START apt UNK_END in the entrie filesystem 
find all files/directories named UNK_START articles.jpg UNK_END under UNK_START /home/username/public_html/images UNK_END directory tree 
find all files/directories named UNK_START articles.jpg UNK_END under UNK_START images UNK_END directory tree 
find all files/directories named UNK_START articles.jpg UNK_END under current directory tree 
find all files/directories named UNK_START com.apple.syncedpreferences.plist UNK_END (case insensitive) under ~/library directory tree 
find all files/directories named UNK_START date UNK_END under /usr 
find all files/directories named UNK_START document UNK_END in maximum 4 levels down the UNK_START /usr UNK_END directory 
find all files/directories named UNK_START document UNK_END in the entire filesystem 
find all files/directories named UNK_START document UNK_END in the root filesystem partition 
find all files/directories named UNK_START file UNK_END and print them with null character as the delimiter instead of newline 
find all files/directories named UNK_START file UNK_END without descending into directories with the same name under current directory tree 
find all files/directories named UNK_START file1 UNK_END under current directory tree 
find all files/directories named UNK_START file_name UNK_END under current directory tree 
find all files/directories named UNK_START filename UNK_END that belong to user UNK_START username UNK_END and group UNK_START groupname UNK_END in the entire filesystem 
find all files/directories named UNK_START findcommandexamples.txt UNK_END (case insensitive) in the entire filesystem 
find all files/directories named UNK_START foo UNK_END in the entire filesystem 
find all files/directories named UNK_START foo UNK_END under current directory tree without descending into directories named UNK_START foo UNK_END 
find all files/directories named UNK_START foo.bar UNK_END in the entire filesystem 
find all files/directories named UNK_START foo.bar UNK_END under UNK_START ./dir1 UNK_END and UNK_START ./dir2 UNK_END directory trees 
find all files/directories named UNK_START foo.rb UNK_END under current directory tree 
find all files/directories named UNK_START fprintf.c UNK_END under UNK_START /usr/src UNK_END directory tree 
find all files/directories named UNK_START game UNK_END under current directory tree 
find all files/directories named UNK_START java UNK_END under /usr directory 
find all files/directories named UNK_START javac UNK_END under current directory 
find all files/directories named UNK_START my.txt UNK_END in the entire filesystem 
find all files/directories named UNK_START myfile UNK_END under your home directory 
find all files/directories named UNK_START pattern UNK_END under current directory tree 
find all files/directories named UNK_START photo.jpg UNK_END (case insensitive) under current directory tree 
find all files/directories named UNK_START photo.jpg UNK_END under current directory tree 
find all files/directories named UNK_START photo?.jpg UNK_END under current directory tree 
find all files/directories named UNK_START photoa.jpg UNK_END under current directory tree 
find all files/directories named UNK_START query UNK_END (case insensitive) under current directory 
find all files/directories named UNK_START query UNK_END (case insensitive) under current directory tree 
find all files/directories named UNK_START query UNK_END under current directory 
find all files/directories named UNK_START query UNK_END under current directory tree 
find all files/directories named UNK_START test UNK_END under current directory tree 
find all files/directories named UNK_START testfile.txt UNK_END under current directory tree 
find all files/directories named UNK_START text UNK_END under current directory 
find all files/directories named UNK_START top UNK_END (case insensitive) in the entire filesystem 
find all files/directories named UNK_START top UNK_END in the entire filesystem 
find all files/directories named UNK_START vimrc UNK_END in the entire filesystem 
find all files/directories named UNK_START имя_файла UNK_END in the entire filesystem 
find all files/directories named root under current directory and copy them to newroot 
find all files/directories named file in 2 and 3 levels down the current directory 
find all files/directories named file in minimum 4 levels down the current directory 
find all files/directories named file1 in maximum 2 levels down the current directory 
find all files/directories named file1 under current directory 
find all files/directories named modules under current directory 
find all files/directories named modules under current directory and list them twice 
find all files/directories named orm.properties in entire file system 
find all files/directories named orm.properties under /eserver6 directory 
find all files/directories named orm.properties under /eserver6/share/system/config/cluster directory 
find all files/directories named orm.properties under current directory 
find all files/directories newer than ttt or owned by user UNK_START wn UNK_END in entire file system 
find all files/directories not with the name UNK_START query_to_avoid UNK_END under current directory 
find all files/directories not with the name UNK_START query_to_avoid UNK_END under current directory 
find all files/directories owned by the user UNK_START bob UNK_END under UNK_START /home UNK_END directory tree 
find all files/directories owned by user UNK_START joebob UNK_END under UNK_START /some/directory UNK_END directory tree 
find all files/directories owned by user UNK_START michel UNK_END under current directory 
find all files/directories starting with UNK_START app- UNK_END and ending with UNK_START .log UNK_END in their names and have been modified in the last 5 minutes 
find all files/directories starting with UNK_START onlyme UNK_END in their names under current directory tree in minimum 1 level deep 
find all files/directories starting with UNK_START readme UNK_END (case insensitive) under UNK_START /usr/share/doc UNK_END directory tree 
find all files/directories startring with UNK_START onlyme UNK_END in their names under current directory without going into sub-directories 
find all files/directories that are bigger than 100 bytes under UNK_START /home/apache UNK_END directory tree 
find all files/directories that are newer than UNK_START backup.tar.gz UNK_END by modification time 
find all files/directories that are newer than UNK_START ttt UNK_END by modification time or owned by the user UNK_START wnj UNK_END in the entire filesystem 
find all files/directories that are not newer than jul 01 by modification time 
find all files/directories that are owned by user UNK_START dave UNK_END under current user's home directory tree 
find all files/directories that are owned by user UNK_START eric UNK_END under current directory tree 
find all files/directories that are owned by user UNK_START takuya UNK_END under current directory tree 
find all files/directories that are owned by user UNK_START wnj UNK_END and are newer than UNK_START ttt UNK_END by modification time in the entire filesystem 
find all files/directories that belong to the group UNK_START accts UNK_END under UNK_START /apps UNK_END directory tree 
find all files/directories that belong to the group UNK_START audio UNK_END under UNK_START /dev UNK_END directory tree 
find all files/directories that belong to the group UNK_START staff UNK_END under UNK_START /usr UNK_END directory tree 
find all files/directories that contain UNK_START packet UNK_END (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size 
find all files/directories that contain UNK_START target UNK_END (case insensitive) in their names under current directory no-recursively 
find all files/directories that contain the string literal UNK_START $version UNK_END in their names under current directory tree 
find all files/directories that contain the string literal UNK_START `$version` UNK_END in their names under current directory tree 
find all files/directories that do not belong to any user under UNK_START /home UNK_END directory tree 
find all files/directories that do not contain UNK_START photo UNK_END in their names under current directory tree 
find all files/directories that have read, write, execution permission for user and belong to the user UNK_START my_user UNK_END under current directory tree 
find all files/directories that start with UNK_START a1a2 UNK_END and end with UNK_START txt UNK_END in their names and move their parent directories to UNK_START /home/spenx/dst/ UNK_END directory 
find all files/directories that start with UNK_START onlyme UNK_END in their names under maximum 2 levels down the current directory 
find all files/directories that start with UNK_START readme UNK_END (case insensitive) in their names under UNK_START /usr/share/doc UNK_END directory tree 
find all files/directories that start with UNK_START screen UNK_END (case insensitive) in their names under user's home directory tree 
find all files/directories that start with UNK_START test UNK_END in their names under current directory tree 
find all files/directories that were modified after february 1st under UNK_START /usr UNK_END directory tree 
find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories 
find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories 
find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories 
find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories 
find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories 
find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories 
find all files/directories under $target_dir directory tree matching the posix extended regular expression \".*/$now.*\" (where $now is a variable) and save the output in file $file_list 
find all files/directories under $dir directory 
find all files/directories under $dir directory tree which have been modified in the last 3 days 
find all files/directories under $something directory 
find all files/directories under UNK_START /abs/path/to/directory UNK_END directory non-recursively that match the pattern UNK_START .*invalidtemplatename.* UNK_END in their names 
find all files/directories under UNK_START /directory_path UNK_END directory tree that have been modified within the last day 
find all files/directories under UNK_START /etc UNK_END directory tree that are greater than 5mb and print their sizes and names 
find all files/directories under UNK_START /etc UNK_END directory tree that have been modified after UNK_START /etc/motd UNK_END 
find all files/directories under UNK_START /home/exampleuser/ UNK_END directory tree whose names end with UNK_START conf UNK_END and were modified exactly 3 days ago 
find all files/directories under UNK_START /home/user/ UNK_END directory tree whose status was changed exactly 10 minitues ago 
find all files/directories under UNK_START /home/user/ UNK_END directory tree whose status were changed 10 minutes ago 
find all files/directories under UNK_START /usr UNK_END directory tree that have been modified exactly 5 minutes ago 
find all files/directories under UNK_START /usr UNK_END directory tree that have not been modified in the last 356 days counting days from today 
find all files/directories under UNK_START /usr/local UNK_END containing UNK_START blast UNK_END (case insensitive) in their names 
find all files/directories under UNK_START /usr/local/games UNK_END directory tree that contain the string UNK_START xpilot UNK_END in their names 
find all files/directories under UNK_START /usr/share/data UNK_END directory tree that match the posix extended regex UNK_START .*/20140624.* UNK_END in their paths and save the list to UNK_START /home/user/txt-files/data-as-of-20140624.txt UNK_END 
find all files/directories under UNK_START /usr/share/doc UNK_END directory tree that contain UNK_START readme UNK_END (case insensitive) at the beginning of their names 
find all files/directories under UNK_START /usr/share/doc UNK_END directory tree whose name start with UNK_START readme UNK_END 
find all files/directories under UNK_START /var/log UNK_END directory tree that bave been modified today (from the start of the day) 
find all files/directories under UNK_START /var/tmp UNK_END directory tree that belong to a user with user id 1000 
find all files/directories under UNK_START a UNK_END directory tree excluding directory UNK_START a/a UNK_END and all of it's contents 
find all files/directories under UNK_START a UNK_END directory tree excluding the paths containing the directory UNK_START a UNK_END 
find all files/directories under UNK_START my key phrase UNK_END directory 
find all files/directories under .. directory and copy them to ~/foo/bar 
find all files/directories under ./var/log directory 
find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding *.log files/directories 
find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding error_log files/directories 
find all files/directories under /home/bozo/projects directory that were modified 1 day ago 
find all files/directories under /home/feeds/data directory 
find all files/directories under /home/foo/public_html/ that were modified less than 60 minutes ago 
find all files/directories under /myfiles following symlinks if needed 
find all files/directories under /myfiles that are 2560 bytes in size 
find all files/directories under /myfiles that were accessed more than 30 days ago 
find all files/directories under /myfiles that were modified 2 days ago 
find all files/directories under /non-existent/directory directory with ~/bin/find 
find all files/directories under /path directory that were modified more than 30 minutes ago 
find all files/directories under /path/to/dir and set directory permission to 0755 and file permission to 0644 
find all files/directories under /path/to/dir/* paths and print the timestamp in ymdhms format along with their paths and object of symlinks 
find all files/directories under /proc and run ls command on each. 
find all files/directories under /usr/tom which matches the extended regex UNK_START *.pl| *.pm UNK_END in their names 
find all files/directories under /var/log directory 
find all files/directories under /var/www/some/subset and change their owner and group to www-data 
find all files/directories under _cache_* directories 
find all files/directories under current /export/home/someone directory and upload them to ftp://somehost/tmp/ 
find all files/directories under current directory 
find all files/directories under current directory 
find all files/directories under current directory 
find all files/directories under current directory 
find all files/directories under current directory 
find all files/directories under current directory and append a null character at the end of each path 
find all files/directories under current directory and count the number of lines for the output 
find all files/directories under current directory and print their paths 
find all files/directories under current directory and print their paths 
find all files/directories under current directory and print their paths 
find all files/directories under current directory and print their paths 
find all files/directories under current directory and print their paths 
find all files/directories under current directory and print them 
find all files/directories under current directory and print them twice in each line 
find all files/directories under current directory and print them with newline as the delimiter 
find all files/directories under current directory and put the output into full_backup_dir variable 
find all files/directories under current directory and set their permission to 775 
find all files/directories under current directory and sort them 
find all files/directories under current directory appending a null character at the end of each file name/path 
find all files/directories under current directory bypassing file hierarchies in lexicographical order 
find all files/directories under current directory excluding the paths that match the posix extended regex UNK_START .*def/incoming.*|.*456/incoming.* UNK_END 
find all files/directories under current directory following symlinks if needed 
find all files/directories under current directory in maximum 3 levels deep 
find all files/directories under current directory matching the case insensitive pattern UNK_START pattern UNK_END 
find all files/directories under current directory that are 10mb in size 
find all files/directories under current directory that are greater than 10mb in size 
find all files/directories under current directory that match the case insensitive extended regex .*/(ea|fs)_.* 
find all files/directories under current directory that match the case insensitive glob pattern {ea,fs}_* 
find all files/directories under current directory that match the case insensitive regex .*/\(ea\|fs\)_.* 
find all files/directories under current directory that match the case insensitive regex ./\(ea\|fs\)_.* 
find all files/directories under current directory that match the case insensitive regex ./\(rt\|ed\).* and show several lines of output from the beginning 
find all files/directories under current directory that were accessed 30 minutes ago 
find all files/directories under current directory that were accessed less than 1 day ago 
find all files/directories under current directory that were accessed more than 25 but less than 35 minutes ago 
find all files/directories under current directory that were modified exactly 30 minutes ago 
find all files/directories under current directory that were modified later than /reference/file 
find all files/directories under current directory tree 
find all files/directories under current directory tree excluding files/directories with name UNK_START query_to_avoid UNK_END 
find all files/directories under current directory tree excluding files/directories with name UNK_START query_to_avoid UNK_END 
find all files/directories under current directory tree excluding hidden files/directories 
find all files/directories under current directory tree that are newer than backup.tar.gz by modification time 
find all files/directories under current directory tree that are owned by UNK_START root UNK_END 
find all files/directories under current directory tree that belong to the group UNK_START compta UNK_END 
find all files/directories under current directory tree that belong to the user UNK_START tom UNK_END 
find all files/directories under current directory tree that belong to user UNK_START john UNK_END 
find all files/directories under current directory tree that contain UNK_START 1 UNK_END or UNK_START k UNK_END in their names 
find all files/directories under current directory tree that contain UNK_START pattern UNK_END in their names 
find all files/directories under current directory tree that have modified in the last 2 days and contain UNK_START blah UNK_END (case insensitive) in their names 
find all files/directories under current directory tree that start with UNK_START r UNK_END and end with UNK_START ver UNK_END in their names and were modified more than 1 day ago 
find all files/directories under current directory tree that start with UNK_START test UNK_END in their names without descending into directories with the same name pattern 
find all files/directories under current directory tree whose names start with UNK_START (test) UNK_END followed by two digits and end with UNK_START .txt UNK_END extension 
find all files/directories under current directory tree whose names start with UNK_START some_text_2014.08.19 UNK_END 
find all files/directories under current directory tree whose names start with UNK_START test UNK_END followed by two digits and end with UNK_START .txt UNK_END extension 
find all files/directories under current directory tree whose paths match the pattern UNK_START *ack*1 UNK_END (case insensitive) 
find all files/directories under current directory tree whose paths match the regex UNK_START filename-regex.\*\.html UNK_END 
find all files/directories under current directory tree whose paths start with UNK_START ./sr UNK_END and end with UNK_START sc UNK_END 
find all files/directories under current directory tree wihout descending into UNK_START ./src/emacs UNK_END directory 
find all files/directories under current directory tree with UNK_START .old UNK_END extension 
find all files/directories under current directory tree with inode number 211028 and move them to UNK_START newname.dir UNK_END 
find all files/directories under current directory which have read-write permission for owner and only read permission for group and others 
find all files/directories under current directory with UNK_START foobar UNK_END in their paths and copy them to ~/foo/bar 
find all files/directories under current directory with UNK_START foobar UNK_END in their paths and copy them to ~/foo/bar 
find all files/directories under current directory with UNK_START foobar UNK_END in their paths and copy them to ~/foo/bar 
find all files/directories under current directory with UNK_START foobar UNK_END (case insensitive) in their names and copy them to ~/foo/bar 
find all files/directories under current directory with a depth-first search 
find all files/directories under current directory with null character as the delimiter 
find all files/directories under current directory with null character as the delimiter 
find all files/directories under current directory with null character as the delimiter and then replace the null characters with : 
find all files/directories under current directory with the null character as the delimiter 
find all files/directories under directory UNK_START .cache/chromium/default/cache/ UNK_END which are bigger than 100mb and which are atleast 1 level deep and delete them 
find all files/directories under minimum 1 level down the $folder directory and sort them 
find all files/directories under minimum 2 level down the current directory and set their permission to 700 
find all files/directories under test directory 
find all files/directories under whatever and ... directory and copy them to /var/tmp 
find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern UNK_START /tmp/test/* UNK_END 
find all files/directories which have been modified within the last day in the drectories/files taken from the glob pattern UNK_START /tmp/test/* UNK_END 
find all files/directories whose names start with UNK_START readme UNK_END (case insensitive) under UNK_START /usr/share/doc UNK_END directory tree 
find all files/directories with UNK_START .bar UNK_END extension in maximum 2 levels down the current directory 
find all files/directories with UNK_START .err UNK_END extension under UNK_START /home/username UNK_END directory tree 
find all files/directories with UNK_START .js UNK_END extension under current directory tree excluding paths that contain the directory UNK_START ./directory UNK_END 
find all files/directories with UNK_START .js UNK_END extension under current directory tree without descending into and ignoring UNK_START ./directory UNK_END completely 
find all files/directories with UNK_START .js UNK_END extension under current directory tree without descending into UNK_START ./directory UNK_END 
find all files/directories with UNK_START .log UNK_END extension that belong to the group UNK_START adm UNK_END under UNK_START /var/log UNK_END directory tree 
find all files/directories with UNK_START .log UNK_END extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found 
find all files/directories with UNK_START .mp4 UNK_END extension and all regular files with UNK_START .flv UNK_END extension, sort them according to their names and display the first 500 of them 
find all files/directories with UNK_START .o UNK_END extension under UNK_START /lib/modules UNK_END directory tree 
find all files/directories with UNK_START .pdf UNK_END extension excluding UNK_START pdfs UNK_END directory and all of its contents 
find all files/directories with UNK_START .tar.gz UNK_END extension under $dir/tmp/daily/ directory tree, sort them numerically and show the last 3 of them 
find all files/directories with UNK_START .txt UNK_END extension that are less than 100 kb in size under UNK_START /home UNK_END directory tree 
find all files/directories with UNK_START .txt UNK_END extension under UNK_START /home UNK_END directory tree that are exactly 100kb in size 
find all files/directories with UNK_START .txt UNK_END extension under UNK_START /home UNK_END directory tree that are greater than 100kb in size 
find all files/directories with UNK_START .what_to_find UNK_END extension under current directory tree and show the list by excluding paths that contain UNK_START excludeddir1 UNK_END and UNK_START excludeddir2 UNK_END 
find all files/directories with UNK_START .xml UNK_END extension that start with UNK_START log4j UNK_END in their names under UNK_START /cygdrive/e/mydocs/downloads/work/oats domain related/ UNK_END directory tree, search for files that contain the string UNK_START console UNK_END in their contents, then search for the string UNK_START async UNK_END in the matched files and display the matched lines along with their filenames 
find all files/directories with UNK_START my key phrase UNK_END in their names under current directory 
find all files/directories with 644 permission in entire file system 
find all files/directories with 664 permission under current directory tree 
find all files/directories with 755 permission under current directory tree 
find all files/directories with 777 permission under UNK_START /apps/audit UNK_END and strip write permission for UNK_START other UNK_END from them 
find all files/directories with 777 permission under current directory tree 
find all files/directories with case insensitive name pattern $target that are located in minimum 10 level down the current directory 
find all files/directories with execute permission by group or others 
find all files/directories with inode number 16187430 and move them to UNK_START new-test-file-name UNK_END 
find all files/directories with name pattern $nombre that are at most 2 levels down the $dir_temporal and $dir_descarga directories and show only the file names (without parent path) appended with UNK_START .torrent UNK_END 
find all files/directories with permission $permissions under $directory directory tree 
find all files/directories with space in their names under /tmp/ directory and rename them by replacing all spaces with _ 
find all files/directories with space in their names under /tmp/ directory and rename them by replacing all spaces with _ 
find all files/directories with space in their names under $1 directory 
find all files/directories with space in their names under current directory 
find all files/directories with space in their names under current directory and rename them by replacing all spaces with _ 
find all files/directories with spaces in their names under ~/library directory 
find all files/directories with user id 120 under current directory tree 
find all files/drectories under UNK_START /u/bill UNK_END directory tree that have been accessed in the last 2 to 6 minutes 
find all first occurrences of directories named UNK_START .texturedata UNK_END under UNK_START /path/to/look/in UNK_END directory tree 
find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex UNK_START foo= UNK_END in their contents 
find all fonts (in '/usr/local/fonts') that belong to the user UNK_START warwick UNK_END 
find all foo.mp4 files in the current directory tree 
find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories 
find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories 
find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories 
find all hard links to file /path/to/file that exist under the current directory tree 
find all hard links to file1 under /home directory 
find all hidden (regular) files under /tmp 
find all hidden directories starting from the current directory 
find all hidden files 
find all hidden files in the current directory 
find all hidden files starting from the directory given as variable $folder 
find all hidden files under /tmp 
find all hidden regular files starting from the current directory 
find all hidden regular files under /tmp and below 
find all httpd.conf files in entire file system 
find all image.pdf files under ./polkadots 
find all image.pdf files/directories under ./polkadots 
find all image.pdf files/directories under ./polkadots with null character as the delimiter 
find all index.* files/directories under current directory 
find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines. 
find all l files in the UNK_START foo UNK_END folder but ones with name like UNK_START *music* UNK_END to the UNK_START bar UNK_END folder. 
find all leaf directories that include only one occurrence of UNK_START modules UNK_END 
find all level 1 subdirectories of the current directory 
find all lines matching UNK_START $user UNK_END in UNK_START file UNK_END and number the output 
find all links pointing to /path/to/foo.txt 
find all links to path/to/file 
find all mysong.ogg files/directories under your home directory 
find all of jzb's files 
find all of the character devices on the system 
find all or single file called findcommandexamples.txt under / directory of owner root 
find all or single file called tecmint.txt under the / directory of owner root 
find all orm* files/directories under current directory 
find all orm.* files/directories under current directory 
find all pdf files excluding *_signed.pdf files under /some/dir with null character as the delimiter 
find all pdf files under /dir/containing/unsigned with null character as the delimiter 
find all php files in a directory 
find all php files in the current directory 
find all php files that belong to user UNK_START takuya UNK_END and have been modified in the last 1 day 
find all php files under current directory 
find all php files whose name is tecmint.php in a current working directory 
find all php files whose name is tecmint.php in the current directory 
find all python files (.py files) in $topdir directory tree and search for UNK_START makefile UNK_END in all these folders and display all distinct folders having UNK_START makefile UNK_END 
find all python files under current directory tree, save the list to UNK_START output.txt UNK_END and search for UNK_START something UNK_END in those files 
find all read only files in /home directory 
find all read-only files 
find all readme.txt files/directories under your home directory 
find all regular *.css files 
find all regular .abc files under and below /the/path and rename them prefixing their names with UNK_START version_1 UNK_END 
find all regular .html files in the /var/www directory tree 
find all regular .mp3 files larger than 10m and delete them 
find all regular files 1 level down the $dir directory 
find all regular files in /usr/bin accessed more than 20 days ago 
find all regular files in /usr/bin modified less than within the last 10 days 
find all regular files in and below the home directory that have been modified in the last 90 minutes 
find all regular files in current directory and /home/www directory 
find all regular files in minimum 1 level down the $dir directory 
find all regular files in the UNK_START $dir UNK_END directory 
find all regular files in the UNK_START aaa UNK_END directory 
find all regular files in the /path/to/base/dir tree 
find all regular files in the current director and set their permissions to '644'. 
find all regular files in the current directory and its subdirectories. 
find all regular files in the current directory and search them for UNK_START example UNK_END 
find all regular files in the current directory tree and count them 
find all regular files in the current directory tree and count them 
find all regular files in the current directory tree and print a command to move them to the current directory 
find all regular files in the current directory tree and search them for UNK_START example UNK_END 
find all regular files in the current directory tree ignoring git and svn directories 
find all regular files in the current directory tree ignoring directory ./source/script 
find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using find's -ls option 
find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format UNK_START %ty %p\n UNK_END 
find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format UNK_START %tc %p\n UNK_END 
find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format UNK_START %tm %p\n UNK_END 
find all regular files in the current directory tree that are not readable by all 
find all regular files in the current directory tree that are not readable by anyone 
find all regular files in the current directory tree that do not contain a whitespace 
find all regular files in the current directory tree that have been modified within the last 10 minutes 
find all regular files in the current directory tree that match pattern UNK_START btree*.c UNK_END 
find all regular files in the current directory tree whose names end with UNK_START .ds_store UNK_END and delete them 
find all regular files in the current directory tree, except git files 
find all regular files in the entire filesystem that belong to the group UNK_START users UNK_END 
find all regular files in the home directory tree that were modified in the last 24 hours 
find all regular files in the the user's home/mail directory and search for the word "linux". 
find all regular files matching the name pattern UNK_START *.?htm* UNK_END under UNK_START /srv/www UNK_END and UNK_START /var/html UNK_END directory tree 
find all regular files named UNK_START chapter1 UNK_END under current directory tree 
find all regular files named UNK_START waldo UNK_END under UNK_START books UNK_END directory tree that is located in user's home directory 
find all regular files named UNK_START waldo UNK_END under ~/books directory tree 
find all regular files named UNK_START whatever UNK_END under current directory tree excluding all paths that contain any hidden directory 
find all regular files named postgis-2.0.0 under current directory 
find all regular files named postgis-2.0.0 under your home directory 
find all regular files newer than UNK_START /tmp/$$ UNK_END (where $$ expands to current process id) under UNK_START /tmefndr/oravl01 UNK_END directory tree 
find all regular files on the system whose names are UNK_START myfile UNK_END 
find all regular files on the system whose size is greater than 20000k 
find all regular files or symlinks in the entire file system 
find all regular files recursively in the current directory 
find all regular files residing in the current directory tree and search them for string UNK_START /bin/ksh UNK_END 
find all regular files starting from / that have permissions 777 
find all regular files starting from level 3 of directory tree ~/container and move them one level up 
find all regular files starting from level 3 of directory tree ~/container and move them one level up 
find all regular files starting from level 3 of directory tree ~/container and move them to the current directory 
find all regular files starting from level 3 of directory tree ~/container and move them to the current directory's parent 
find all regular files starting from the current directory 
find all regular files that contain UNK_START linux UNK_END (case insensitive) in their names under UNK_START /root UNK_END directory tree 
find all regular files that reside in the current directory tree and were last modified 1 day ago 
find all regular files that reside in the current directory tree and were last modified at least 1 day ago 
find all regular files that reside in the current directory tree and were last modified more than 1 day ago 
find all regular files that reside in the current directory tree and were last modified more than 2 days ago 
find all regular files that reside in the current directory tree and were last modified more than 3 days ago 
find all regular files that reside in the current directory tree and were last modified more than 4 days ago 
find all regular files that reside in the current directory tree and were last modified more than 5 days ago 
find all regular files that reside in the current directory tree and were last modified more than 7 days ago 
find all regular files that start with stat 
find all regular files that were modified $ftime days ago under current directory tree 
find all regular files that were modified more than 60 days ago under UNK_START /path-to-directory UNK_END directory tree, sort them according to timestamp and print the filenames preceded with the timestamps 
find all regular files undee UNK_START /usr/bin UNK_END directoryt tree that are less than 50 bytes in size 
find all regular files under $somedir directory and print each of their paths after a string literal UNK_START found unexpected file UNK_END 
find all regular files under $dir directory tree whose paths match the regex UNK_START .*\.${types_re} UNK_END where ${types_re} expands as a variable 
find all regular files under $dir directory tree with UNK_START .$type UNK_END extension (case insensitive) where $type expands in the current shell 
find all regular files under $dir/tmp/daily/, sort them in reverse numerical order and copy the first two files to $dir/tmp/weekly/ 
find all regular files under $directory_to_process matching the case insensitive regex UNK_START .*\.$files_to_proces UNK_END where $files_to_proces is a variable and not matching the name pattern UNK_START $find_excludes UNK_END where $find_excludes is another variable, then print the files with null delimiter instead of newline 
find all regular files under $files_path directory tree and save the output to UNK_START files UNK_END variable 
find all regular files under $folder directory tree that start with UNK_START UNK_START . UNK_END and end with UNK_START UNK_END UNK_END in their names and were modified in less than $retention days excluding the files whose contents match one of the regular expressions defined per line in file $skip_file 
find all regular files under $d directory tree and change their permissions to 777 
find all regular files under $dir 
find all regular files under $dir directory tree that are bigger than $size mb in size and print them along with their sizes in decreasing order of size 
find all regular files under ${s} directory 
find all regular files under ${path} without following symlinks 
find all regular files under UNK_START /directory_path UNK_END directory tree that have been modified within the last day 
find all regular files under UNK_START /home/john UNK_END directory tree that start with UNK_START landof UNK_END in their names 
find all regular files under UNK_START /home/john/scripts UNK_END directory tree excluding files with UNK_START .ksh UNK_END extension 
find all regular files under UNK_START /usr/bin UNK_END directory tree that are less than 50 bytes in size 
find all regular files under ./desktop directory 
find all regular files under and below /home/admin/public_html/, and change their permissions to 644 
find all regular files under and below /home/user/demo/ 
find all regular files under and below /root that match pattern "*linux*", case insensitive 
find all regular files under and below /somepath that have extensions pdf, tif, tiff, png, jpg, jpeg, bmp, pcx, or dcx, ignoring the case and excluding UNK_START *_ocr.pdf UNK_END files 
find all regular files under current directory 
find all regular files under current directory 
find all regular files under current directory non-recursively that have execute permission set for all (user, group and other) 
find all regular files under current directory tree containing UNK_START some text UNK_END in their names without descending into hidden directories and excluding hidden files 
find all regular files under current directory tree excluding files from UNK_START ./dir1 UNK_END (except './dir1/subdir1/) and UNK_START ./dir2 UNK_END directories 
find all regular files under current directory tree that contain UNK_START some text UNK_END in their names excluding paths that contain dot files/directories 
find all regular files under current directory tree that match the regex UNK_START tgt/etc/* UNK_END in their paths 
find all regular files under current directory tree that were accessed $ftime days ago 
find all regular files under current directory tree whose names end with UNK_START cache UNK_END or UNK_START xml UNK_END or UNK_START html UNK_END 
find all regular files under current directory tree without descending into UNK_START ./dir1 UNK_END (except UNK_START ./dir1/subdir1* UNK_END pattern) and UNK_START ./dir2 UNK_END directories 
find all regular files under test directory 
find all regular files whose names contain UNK_START @ UNK_END in directory tree ~/$folder 
find all regular files whose names contain UNK_START @ UNK_END in directory tree ~/$folder 
find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them 
find all regular files whose names do not end in UNK_START *.html UNK_END 
find all regular files with UNK_START .jpg UNK_END (case insensitive) extension, sort them by name, print the output and also save the list to file UNK_START file_list.txt UNK_END 
find all regular files with UNK_START .r UNK_END and UNK_START .c UNK_END in their names under current directory tree 
find all regular files with UNK_START .txt UNK_END extension excluding UNK_START readme.txt UNK_END files under current directory tree 
find all regular files with UNK_START .what_to_find UNK_END extension in the entire filesystem and move them to directory UNK_START /new_directory UNK_END 
find all regular files with 400 permission under UNK_START /data UNK_END directory tree 
find all regular files with 755 permission under current directory tree and change their permission to 644 
find all regular files with name pattern $filename under $fileloc directory tree 
find all regular files with permissions 777 under and below /home/user/demo/ 
find all regular files with permissions 777 under and below /home/user/demo/, and change their permissions to 755 
find all regular files with space in their names under current directory and rename them by replacing all spaces with _ 
find all regular files with the group read permission set in your home directory and below and output detailed information about each file. 
find all regular non-hidden files in the current directory and its subdirectories 
find all sample* files/directories under current directory and print UNK_START program {}-out {} UNK_END where {} will expand to file paths 
find all sample*_1.txt files/directories under current directory 
find all socket files in the current directory and its sub-directories. 
find all strings matching pattern UNK_START ^${key}${delimiter} UNK_END in $file file and print rest of string after $delimiter 
find all subdirectories of the current directory except hidden ones 
find all symbolic links containg UNK_START vim UNK_END in their names under UNK_START /usr/bin UNK_END directory tree 
find all symbolic links containing UNK_START javaplugin UNK_END in their names under UNK_START /usr UNK_END directory tree 
find all symbolic links containing UNK_START vim UNK_END in their names uder UNK_START /usr/bin UNK_END directory tree 
find all symbolic links in the current directory tree 
find all symbolic links starting from the current directory and list them 
find all symbolic links under UNK_START /proc/$pid/fd UNK_END directory tree with name pattern UNK_START $save_path/sess_\* UNK_END and update their timestamps 
find all symbolic links under UNK_START /some/directory UNK_END driectory tree 
find all symbolic links under UNK_START /some/directory UNK_END tree 
find all symbolic links under current directory that are not hard links 
find all symbolic links under the current folder and below 
find all symlinks in the /myfiles directory tree 
find all symlinks under /myfiles directory 
find all symlinks under current directory 
find all symlinks under current directory 
find all syslog directories under /var/log directory 
find all target files outside the current working directory with symbolic links in the current working directory 
find all test.txt files/directories under current directory 
find all test1.h files under current directory 
find all test2.h files under current directory 
find all text files in the home directory 
find all the *.c files at any level of directory programming under any UNK_START src UNK_END directory 
find all the *.pl files (perl files) beneath the current directory. 
find all the *.txt files in the current directory older than 48 hours 
find all the .c files in the current directory tree that contain the string ‘stdlib.h’ 
find all the .c files in the current directory tree that contain the string ‘stdlib.h’ 
find all the .mp3 files in the music folder and pass to the ls command, -print0 is required if any filenames contain whitespace 
find all the .mp3 files in the music folder recursively and pass them to the ls command 
find all the sgid bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning 
find all the sgid bit files whose permissions set to 644 
find all the sgid bit files whose permissions set to 644 in the file system 
find all the sgid files in the current directory tree 
find all the suid files in the current directory tree 
find all the sticky bit files whose permission are 551 
find all the sticky bit set files in entire file system whose permission are 551 
find all the sticky bit set files whose permission are 551 
find all the sticky bit set files whose permission are 551 in the file system 
find all the files called findcommandexamples.txt of owner root 
find all the files in entire file system which are accessed 50 days back 
find all the files in entire file system which are modified 50 days back. 
find all the files in entire file system which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning 
find all the files in entire file system which are greater than 50mb and less than 100mb. 
find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5mb in size 
find all the files in file system which are accessed 50 days back 
find all the files in file system which are accessed in last 1 hour 
find all the files in file system which are changed in last 1 hour 
find all the files in file system which are greater than 50mb and less than 100mb 
find all the files in file system which are modified 50 days back 
find all the files in file system which are modified in last 1 hour 
find all the files in file system which are modified more than 50 days back and less than 100 days 
find all the files in the current directory 
find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them 
find all the files in the current directory recursively whose permissions are 777 
find all the files in the current directory recursively whose permissions are not 777 
find all the files in the current directory with “linkin park” in their names 
find all the files named UNK_START vimrc UNK_END anywhere on the system 
find all the files on the system that have been accessed within the last hour 
find all the files on the system that have been changed within the last hour 
find all the files on the system that have been modified within the last hour 
find all the files recursively in directories or files taken from the glob pattern /tmp/test/* that have been modified today 
find all the files that are not named UNK_START mycprogram.c UNK_END in the current directory only and without regards to case. 
find all the files that end with the extension “.java” in the current directoy tree 
find all the files that were modified exactly one day ago 
find all the files that were modified more than one day ago 
find all the files that were modified within the last day 
find all the files under /etc directory which are larger than 100k 
find all the files under /home directory with name tecmint.txt 
find all the files under /tmp directory and show a few lines of output from the beginning 
find all the files which are accessed 50 days back 
find all the files which are accessed in last 1 hour 
find all the files which are accessed in last 1 hour in entire file system 
find all the files which are changed in last 1 hour 
find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning 
find all the files which are greater than 50mb and less than 100mb 
find all the files which are greater than 50mb but less than 100mb in size 
find all the files which are modified 50 days back 
find all the files which are modified in last 1 hour 
find all the files which are modified in last 1 hour in entire file system 
find all the files which are modified more than 50 days back and less than 100 days 
find all the files which were accessed 50 days ago 
find all the files which were modified 50 days ago 
find all the files which were modified more than 50 days but less than 100 days ago 
find all the files whose name is findcommandexamples.txt and contains both capital and small letters in / directory 
find all the files whose name is findcommandexamples.txt in the current working directory 
find all the files whose name is tecmint.txt 
find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory 
find all the files whose name is tecmint.txt in the current directory 
find all the files whose permissions are 777 
find all the files whose permissions are 777 in the current directory 
find all the files whose permissions are 777 under current directory 
find all the files without permission 777 
find all the files without permission 777 in the file system 
find all the files without permission 777 under current directory and show a few lines of output from the beginning 
find all the files/directories in UNK_START /path/to/files UNK_END directory tree which have not been modified in the last 2 hours 
find all the files/directories in the current directory tree which have been modified between 2014-08-25 and 2014-08-26 
find all the files/directories in the entire filesystem that do not belong to user UNK_START wnj UNK_END and are not newer than the file/directory UNK_START ttt UNK_END by modification time 
find all the files/directories under UNK_START /usr/local UNK_END directory tree which have been modified within the last day 
find all the files/directories under UNK_START /var/adm UNK_END directory tree that have not been modified in the last 3 days 
find all the files/directories under user's home directory that do not belong to the user $user 
find all the files/directories with UNK_START .conf UNK_END extension under UNK_START /etc UNK_END directory non-recursively and display the last ten files 
find all the regular files in $dir directory tree which have not been modified in the last 15 days and delete them 
find all the regular files in $dir directory tree which have not been modified in the last 450 days and delete them 
find all the regular files under $dir directory tree which have been modified before the file $a excluding the file $a and delete them 
find all the regular files under $dir directory tree which have been modified before the file $a excluding the file $a and delete them 
find all the regular files under UNK_START /your/dir UNK_END directory tree which are bigger than 5 mb and display them in decreasing order of their sizes 
find all the regular files under current directory tree that have not been modified in the last 31 days and delete them 
find all the regular files under directory UNK_START dir1 UNK_END that are at least n levels deep 
find all the regular files with UNK_START .tgz UNK_END and UNK_START .gz UNK_END extensions and delete the oldest file under UNK_START /home/backups UNK_END directory tree 
find all thumb.png files in the temps/ directory tree 
find all top-level files in the current folder but ones with name like UNK_START *music* UNK_END to the UNK_START dest/ UNK_END folder. 
find all xml files under current directory 
find all xml files under current directory and archive them to .bz2 archives 
find all xx* files/directories excluding UNK_START xxx UNK_END files/directories under your home directory 
find all your text files 
find an inode and remove 
find and compress all .pl files in the current directory tree 
find and copy all log files in the current directory tree to /tmp/log-files 
find and delete all .zip files in the current directory tree 
find and delete all core files in the user's home directory and below. 
find and delete all hard links in the /home directory to file1 
find and delete all hard links in the /home directory to file1 
find and delete all hard links in the /home directory tree to file1 
find and delete the file with inode number 1316256 
find and list all files on your current directory and show a few lines of output from the beginning 
find and list all regular files 
find and print all pdf files in the current directory and its sub-directories except for any found in the ./pdfs directory. 
find and print detailed information about all regular files in your home directory and below that have only the group permission set 
find and print the full pathname of all pdf files in the current directory and its sub-directories. 
find and print the names of all files found in the current directory and all of its sub-directories 
find and print the names of all files found in the current directory and all of its sub-directories. 
find and print the names of all files found in the current directory and all of its sub-directories. 
find and remove all .core files 
find and remove all .core files 
find and remove all .mp3 regular files under the current directory and below 
find and remove all .txt regular files under the current directory and below 
find and remove multiple *.mp3 files 
find and remove multiple *.txt files 
find and remove multiple files such as *.mp3 or *.txt 
find and remove multiple files such as *.mp3 or *.txt under current directory 
find and remove multiple files such as *.mp3 or *.txt under current directory 
find and remove the .rhosts file in the /home directory tree 
find and remove the file with inode number 782263 in the current directory tree 
find and remove zero bytes files from user's directories . 
find and show all files in the current directory tree that are exactly 2000 kb 
find and show all files in the current directory tree that are smaller than 500 kb 
find and show all files on the system that are larger than 900 mb 
find and the 5 largest regular files in the downloads folder of tecmint's home directory and output the file sizes in bytes. 
find and uncompress all files in the current directory tree ending in UNK_START .csv.gz UNK_END 
find and uncompress all files in the current directory tree ending in UNK_START .csv.gz UNK_END 
find any file that has UNK_START disc UNK_END somewhere in its name in the current directory and all of its sub-directories. 
find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size. 
find any files in the current directory and its sub-directories that were last accessed more than 7 days or are larger than 20480 blocks in size. 
find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified. 
find apparent size of a target directory 
find blabla* files under current directory 
find broken links 
find broken links using the file command on each symlinks in the system and searching for the keword UNK_START broken UNK_END with grep 
find broken symlinks 
find broken symlinks in current directory 
find broken symlinks in current directory 
find command will display top 10 big files from current directory . 
find command will display top 5 small files from curent directory . most probably you will get zero bytes files . 
find command will list of all files & directories from current directory , before listing echo command will display UNK_START list of files & directory UNK_END 
find deb packages in the current directory recursively 
find directories and regular files containing `blah' in their names modified less than 2 days ago, case insensitive 
find directories in the current directory (no sub-directories) and print them appended with a string literal UNK_START directory: UNK_END 
find directories in the current directory recursively that are not UNK_START executable UNK_END by all 
find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir 
find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir 
find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir 
find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir 
find directories in the current directory tree whose names are 33 characters in length 
find directories modified in last 7 days 
find directories modified within the last 7 days 
find directories named UNK_START work UNK_END under UNK_START /usr/ports/ UNK_END directory tree and remove them 
find directories named `build' 
find directories named `doc' in /usr and below 
find directories named `doc' in /usr and below 
find directories owned by user news with permissions 775 
find directories starting from /tbd that were modified more than 1 day ago 
find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified less than 30 days ago 
find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified more than 30 days ago 
find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days 
find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days 
find directories that have UNK_START 755 UNK_END permissions and modify them to have UNK_START 700 UNK_END permissions 
find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username 
find directories with permissions 777 and change them to 755 recursively 
find directory UNK_START /some/dir UNK_END if it is empty 
find directory UNK_START your/dir UNK_END if it is empty 
find directory UNK_START your/dir UNK_END if it is empty 
find disk usage of all files inside the directory 
find disk used space of only the target directory 
find empty files and directories 
find empty files in the test directory 
find empty files under test directory 
find empty files/directories under test directory 
find empty regular files in /dir and its subdirectories 
find every javascript file in the wordpress directory 
find every javascript file in the wordpress directory tree 
find every file under the directory /home owned by the user joe. 
find every file under the directory /usr ending in ".stat". 
find every file under the directory /var/spool that was modified more than 60 days ago. 
find every file/directory under /var/spool that was modified more than 60 days ago. 
find every file/directory under the directory /home owned by the user joe 
find every vim undo file in the current directory tree 
find every vim undo file under current directory 
find executable files 
find file `chapter1' on the system 
find file `foo.bar' and delete it 
find file `hosts' 
find file names *blast* in specfied directory 
find file names *blast* in specfied directory, case insensitive 
find file size in bytes 
find file1 in the level 1 directories and above 
find files accessed at 23:59 
find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores 
find files and directories modified in last 24 hours 
find files and directories modified in last 7 days 
find files and directories modified within the last 7 days 
find files and directories newer than comparefile under current directory 
find files and directories owned by xuser1 and change their ownership to user2 
find files and directories that are at least seven levels of nesting in the directory /usr/src 
find files and directories that are at least seven levels of nesting in the directory /usr/src excluding cvs directory 
find files and directories whose owner is daniel 
find files and directories with group id 1003 
find files and directories with the name raid but don't traverse a particular directory 
find files associated with an inode 
find files associated with an inode 
find files belonging to the given owner 
find files bigger than 20 megabytes in the home directory tree 
find files by type 
find files changed in the last 1 day 
find files containing `blah' in their names modified less than 2 days ago, case insensitive 
find files containing string UNK_START #!/bin/ksh UNK_END and append their names and matching strings to /tmp/allfiles 
find files containing string UNK_START #!/bin/ksh UNK_END and append their names and matching strings to /tmp/allfiles 
find files created in the last minute; works on mac os x 
find files ending in UNK_START *macs UNK_END 
find files ending in UNK_START config UNK_END 
find files ending in UNK_START f UNK_END 
find files in $dir_to_clean that are older than $days_to_save days and print them with null character appended to their paths 
find files in /var/tmp/stuff and below that have not been modified in over 90 days 
find files in and below the current directory whose names begin with UNK_START not UNK_END and remove one of them 
find files in entire file system that are writable by group or other 
find files in entire file system that are writable by group or other 
find files in entire file system with at least 644 permissions 
find files in the UNK_START dir UNK_END directory tree whose names are 33 characters in length 
find files in the /home/user directory tree changed exactly 10 minutes ago 
find files in the /travelphotos that are greater than 200k in size but do not have UNK_START 2015 UNK_END anywhere in the file name 
find files in the /var/log folder which were modified an hour or more ago 
find files in the /var/log folder which were modified between 60 minutes and 10 minutes ago 
find files in the /var/log folder which were modified modified 2 weeks ago 
find files in the current directory and below that are 2000 kb in size 
find files in the current directory and below that are less than 500 kb in size 
find files in the current directory and below that are newer than /bin/sh 
find files in the current directory and its sub-directories that begin with 'f'. 
find files in the current directory excluding cvs, svn, git repository files and all binary files. 
find files in the current directory recursively that are not readable by all 
find files in the current directory tree of size between 700k and 1000k 
find files in the current directory tree that are named UNK_START some_pattern UNK_END and move them to directory UNK_START target_location UNK_END 
find files in the current directory tree that have one link 
find files in the current directory tree that match pattern UNK_START *sub* UNK_END 
find files in the current directory tree that were accessed within the last 60 minutes 
find files in the current directory tree which are larger than 5 mb in size 
find files in the current directory tree which have permissions rwx for user and rw for group and others 
find files in the current directory tree whose content was changed within the last 60 minutes 
find files in the current directory tree whose names are of the form UNK_START cxx_data.txt UNK_END where xx is a number from 30 to 70 
find files in the current directory tree whose names are of the form UNK_START cxx_data.txt UNK_END where xx is a number from 40 to 70 
find files in the current directory tree whose names begin with UNK_START file UNK_END and whose size is 0, and remove them 
find files in the current directory tree whose names begin with UNK_START file UNK_END and whose size is 0, and remove them 
find files in the current directory tree whose names match regular expression UNK_START ^.*~$\|^.*#$ UNK_END 
find files in the current directory tree whose pathnames contain UNK_START sub UNK_END 
find files in the current directory tree whose permissions are 775 
find files in the current directory tree whose size is 24000 bytes 
find files in the current directory tree whose size is greater than 24000 bytes 
find files in the current directory tree whose size is less than 24000 bytes 
find files in the current directory tree whose status was changed within the last 60 minutes 
find files in the current directory whose names begin with UNK_START file UNK_END and remove them 
find files in two different directories (esofthub and esoft) having the UNK_START test UNK_END string and list them 
find files larger than 100mb in /var/www and exclude files with /download/ in their path from the output 
find files larger than 50k 
find files matching `.ssh*' and append their anmes to file `ssh-stuff' 
find files matching an exact set of permissions 
find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the bash script 
find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the bash script 
find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the bash script 
find files matching regular expression regexp 
find files matching the pattern UNK_START ./sr*sc UNK_END in their paths under current directory 
find files modified at least 5 days in the future 
find files modified between 6 and 9 minutes ago 
find files modified in last 7 days 
find files modified in the last 5 minutes starting from the current directory 
find files modified more recently than file poop 
find files modified within the past 24 hours 
find files named UNK_START blabla UNK_END in the current directory tree and print the number of lines in each of them 
find files named UNK_START needle UNK_END ignoring the case 
find files named UNK_START ppp.conf UNK_END in the /etc directory tree 
find files named UNK_START core UNK_END in or below the directory /tmp and delete them 
find files named UNK_START core UNK_END in or below the directory /tmp and delete them 
find files named UNK_START filename.txt UNK_END under UNK_START /path/to/folder UNK_END directory tree ignoring UNK_START ignored_directory UNK_END 
find files named core in or below the directory /tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or newlines are correctly handled. 
find files named core in or below the directory /tmp and delete them. note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces. 
find files named tecmint.txt of owner root in the entire file system 
find files newer than `tmpfile' starting from the current directory 
find files newer than main.css in ~/src 
find files newer than start.txt but not newer than end.txt 
find files not matching the patterns UNK_START image*-70x70* UNK_END and UNK_START image*-100x100* UNK_END in their names under folder1 and copy them to folder2 
find files not matching the posix extended regex UNK_START .+\-[0-9]{2,4}x[0-9]{2,4}\.jpg UNK_END in their paths under folder1 and copy them to folder2 
find files on the system accessed during the last 24 hours but not within the last hour 
find files on the system bigger than 50mb but smaller than 100mb 
find files on the system created during the last 50 days 
find files on the system modified more than 90 minutes ago 
find files on the system whose names begin with either x or x 
find files owned by no group 
find files owned by no user 
find files owned by nonexistent groups 
find files owned by nonexistent users 
find files owned by the UNK_START shadow UNK_END group 
find files patching UNK_START pattern UNK_END 
find files readable only by the group 
find files recursively with extension UNK_START ext UNK_END 
find files smaller than 40 blocks skipping directories on other file systems 
find files starting with the word UNK_START file UNK_END in the current directory tree 
find files starting with the word UNK_START file UNK_END in the current directory tree, ignoring the case 
find files that are 0 bytes in size in the current directory and remove them 
find files that are 0 bytes in size in the current directory tree and remove them 
find files that are 100k 
find files that are empty 
find files that are orphaned 
find files that do not have a listing in the /etc/passwd or /etc/group in the file system 
find files that don’t have 644 permissions 
find files that have a modification time of a day ago 
find files that have been modified within the last month and copy them somewhere 
find files that match the executable bit for owner or group 
find files that were accessed in less than a day ago 
find files that were modified 7 days ago and archive them 
find files that were modified in less than 1 minute ago 
find files that were modified less than 7 days ago and archive them 
find files that were modified more than 7 days ago and archive them 
find files that were modified more than 7 days ago but less than 14 days ago and archive them 
find files that were modified second last week and archive them 
find files under UNK_START /travelphotos UNK_END directory tree which are bigger than 200kb and do not have 2015 in their names 
find files under /etc/apache-perl that are modified more recently than /etc/apache-perl/httpd.conf 
find files under /some/path that are not executable 
find files under /some/path that are not executable by the owner 
find files under /tmp that are larger than 10kb and smaller than 20kb 
find files under /usr that are newer than the first file `firstfile' 
find files under /usr that are the same age or older than file `firstfile' 
find files under [directory] that match UNK_START pattern_to_include UNK_END in their names without descending into directories that match UNK_START pattern_to_exclude UNK_END and 'another_pattern_to_exclude', then search for UNK_START pattern UNK_END in those files 
find files under current directory that are newer than $date_time in regards of modification time 
find files under current directory that are not newer than $date_time in regards of modification time 
find files under current directory that contains the string UNK_START /bin/ksh UNK_END 
find files under current directory that contains the string UNK_START /bin/ksh UNK_END 
find files under current directory without descending into other file systems and append a null character at the end of each paths 
find files using file-name 
find files which are more than 2 days old under ${userdir}/${i}/incoming directory 
find files which are more than 2 days old under ${userdir}/${i}/incoming directory and remove them 
find files which were changed in the past 1 hour 
find files whose content was modified at least 1 minute ago 
find files whose data was modified within the given days of the month 
find files whose name starts with "myfile", ignoring the case 
find files whose pathnames end in UNK_START config UNK_END 
find files whose pathnames end in UNK_START f UNK_END 
find files with 002 permission in entire file system 
find files with 002 permission in entire file system and print them with the string UNK_START has world write permissions UNK_END appended after every path 
find files with 002 permission in entire file system and print them with the string UNK_START has world write permissions UNK_END printed at last 
find files with 002 permission in entire file system with the null character as the delimiter 
find files with 777 permissions and change them to 755 
find files with sgid (2000) and suid(4000) permssions set in the file system 
find files with a question mark in their names 
find files with extension .conf in the /etc directory tree 
find files with group write permission and remove the permission 
find files with group write permission and remove the permission 
find files with inode number 199053 
find files with name `aaa.txt' under the current directory 
find files with size more than 200557600b and which are more than 2 days old under ${userdir}/${i}/incoming directory 
find files with size more than 200557600b and which are more than 2 days old under ${userdir}/${i}/incoming directory and remove them 
find files with the extension .conf in the /etc directory 
find files/directories containing UNK_START test UNK_END in their names and display the directory contents before the directories themselves 
find files/directories greater than 10mb in your home directory 
find files/directories in entire file system newer than myfile 
find files/directories in entire file system that had their meta information changed more than 3 days ago 
find files/directories in entire file system that have been modified in the last minute 
find files/directories in entire file system that were accessed in less than a day ago 
find files/directories in entire file system that were modified a day ago 
find files/directories in entire file system with at least 644 permission 
find files/directories modified within the last day under /etc 
find files/directories modified within the last hour under current directory 
find files/directories named UNK_START test_3 UNK_END under current directory tree 
find files/directories named UNK_START aaa.txt UNK_END under current directory tree 
find files/directories named UNK_START articles.jpg UNK_END under current directory tree and change their permission to 644 
find files/directories named UNK_START document UNK_END in UNK_START ext2 UNK_END partitions in entire filesystem 
find files/directories named UNK_START document UNK_END in the entire filesystem and in the directory tree UNK_START /usr UNK_END even if it's in a different partition without traversing to other devices/partitions 
find files/directories named UNK_START file.txt UNK_END in the path UNK_START /usr/lib/important/ UNK_END 
find files/directories named UNK_START file.txt UNK_END that belong to user UNK_START tutonics UNK_END in the entire filesystem 
find files/directories named UNK_START filename UNK_END in the entire filesystem 
find files/directories named UNK_START foo UNK_END in the current partition of the root filesystem 
find files/directories named UNK_START foo UNK_END under current directory tree without descending into directories named UNK_START foo UNK_END 
find files/directories named UNK_START foo.bar UNK_END in the root filesystem partition 
find files/directories named UNK_START foo.bar UNK_END under UNK_START ./dir1 UNK_END and UNK_START ./dir2 UNK_END directory tree 
find files/directories named UNK_START photo.jpg UNK_END in the entire filesystem 
find files/directories named UNK_START sar UNK_END under '/usr', '/bin', UNK_START /sbin UNK_END and UNK_START /opt UNK_END directory tree 
find files/directories named UNK_START sar UNK_END under directory trees whose path starts with UNK_START /u UNK_END or UNK_START /b UNK_END or UNK_START /s UNK_END or UNK_START /o UNK_END 
find files/directories named UNK_START somename.txt UNK_END under current directory tree 
find files/directories named blah (case insensitive) under current directory 
find files/directories named blah under current directory 
find files/directories named<filetype> under current directory which were accessed less than 5 days ago 
find files/directories not changed in two weeks under /dev/shm 
find files/directories that are bigger than 10000 kb in size uder UNK_START /usr/local UNK_END directory tree 
find files/directories that are newer than UNK_START foo.txt UNK_END under current directory tree 
find files/directories that are owned by the user UNK_START syslog UNK_END in entire filesystem 
find files/directories that belong to user UNK_START ian UNK_END under UNK_START /tmp UNK_END directory tree 
find files/directories that does not have write permssion for group 
find files/directories that does not have write permssion for group 
find files/directories that does not have write permssion for group and others 
find files/directories that does not have write permssion for group or others 
find files/directories that have no owner or group under /path 
find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern UNK_START /tmp/test/* UNK_END 
find files/directories that is under group UNK_START root UNK_END or have no group and set their group to UNK_START apache UNK_END 
find files/directories that isn't owned by the user UNK_START apache UNK_END under /var/www 
find files/directories under UNK_START /dir UNK_END directory tree that are newer than UNK_START yesterday.ref UNK_END file and older than UNK_START today.ref UNK_END file by modification time 
find files/directories under UNK_START /usr UNK_END directory tree that are newer than /tmp/stamp$$ by modification time 
find files/directories under /tmp smaller than 100 bytes 
find files/directories under /users/tom that matches both the pattern UNK_START *.pl UNK_END and UNK_START *.pm UNK_END 
find files/directories under current directory and force xargs to print them one by one 
find files/directories under current directory and print them 
find files/directories under current directory and print them as null terminated strings. 
find files/directories under current directory excluding the path ./src/emacs 
find files/directories under current directory matching the posix-egrep type regex UNK_START .+\.(c|cpp|h)$ UNK_END in their names 
find files/directories under current directory that are modified exactly one hour ago 
find files/directories under current directory that matches UNK_START ./projects/insanewebproject UNK_END in their paths 
find files/directories under current directory that matches UNK_START ./projects/insanewebproject UNK_END in their paths and show the first one 
find files/directories under current directory that matches UNK_START projects/insanewebproject UNK_END in their paths 
find files/directories under current directory that matches the regex /path/to/something[^/]*$ in their paths 
find files/directories under current directory without descending into it 
find files/directories under current directory without descending into it 
find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path 
find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path 
find files/directories with inode number UNK_START 212042 UNK_END under UNK_START /var UNK_END directory tree without traversing other devices/partitions 
find files/directories writable by group and others under the /path directory 
find files/directories writable by group and others under the /path directory 
find files/directories writable by group and others under the /path directory 
find files/directories writable by group or others under the /path directory 
find find symlinks pointing to /mnt/oldname* in the entire file system 
find grub.conf files in entire file system 
find hard links to the same file lpi104-6/file1 in the directory tree lpi104-6 
find how many directories are in a path (counts current directory) 
find how many files are in a path 
find image files and move them to the pictures directory 
find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory . 
find largest file in linux with find command 
find links to any file that happens to be named `foo.txt' 
find links to any file that happens to be named `foo.txt' 
find links to file path/to/foo.txt 
find movies over a gigabyte in size 
find mysong.ogg anywhere under the home directory 
find not-executable files under /home/www 
find one file or directory in the current directory whose name matches the pattern given as a variable $a 
find only directories 
find only files under /etc with the size of 100k-150k 
find out all *.sh owned by user vivek 
find out all files owned by user vivek 
find out all hard links in the /home directory to file1 
find out if there are any files on the system owned by user `account' 
find recursively all emacs backup files in the current directory and remove them 
find recursively all python files in the current directory and search them for the word ‘import’ 
find recursively all python files in the current directory tree and count the number of lines in them 
find recursively all empty directories in the current directory 
find recursively all empty directories in the current directory 
find recursively all files changed within the last 5 minutes starting from directory b 
find recursively all files in /path that end in UNK_START txt UNK_END and copy them to /tmp/ 
find recursively all files in the UNK_START . UNK_END directory tree whose names end with UNK_START .class UNK_END and delete them 
find recursively all files matching pattern UNK_START file?? UNK_END in the xargstest/ directory and print a sorted list of them 
find recursively all files under current directory tree that contain a colon in the filename 
find recursively all files whose names begin with UNK_START foo UNK_END 
find recursively all files whose names ends with UNK_START foo UNK_END 
find recursively all regular .txt files in the current directory tree except readme.txt 
find recursively all regular files changed within the last 5 minutes starting from directory b 
find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c 
find recursively all regular files in the current directory skipping hidden files and directories matching pattern UNK_START .?* UNK_END 
find recursively all regular files in the current directory tree ending in .dll or .exe 
find recursively all regular files in the current directory tree not ending in .dll or .exe 
find recursively all regular files in the current directory whose names contain UNK_START . UNK_END 
find recursively regular files in the current directory tree 
find recursively regular files in the current directory tree 
find recursively regular files in the directory given as the script's command line argument #1, skipping hidden files and directories 
find recursively the files named UNK_START file UNK_END in the current directory ignoring all .git directories 
find recursively the files named UNK_START file UNK_END in the current directory ignoring the .git subdirectory 
find recursively the latest modified .zip file in the current directory 
find recursively the latest modified file in the current directory 
find recursively the latest modified file in the current directory 
find recursively the latest modified file in the current directory 
find recursively the latest modified file in the current directory 
find recursively the latest modified file in the current directory 
find regular files in the current directory that are writable by at least somebody 
find regular files in the current directory that are writable by their owner 
find regular files in the current directory tree that are called findcommandexamples.txt and remove them 
find regular files in the current directory tree that have all executable bits set 
find regular files in the current directory tree that have any executable bits set 
find regular files in the current directory tree that have executable bits set for the user and group but not for the other 
find regular files in the current directory tree that have the user executable bit set 
find regular files larger than 500mb in the current directory tree 
find regular files matching pattern UNK_START *oraenv* UNK_END and excecute the UNK_START file UNK_END utility for each of them 
find regular files modified within the last 7 days 
find regular files modified within the last ten minutes under /etc 
find regular files named UNK_START expression -and expression UNK_END under and below /dir/to/search/ 
find regular files named UNK_START expression -or expression UNK_END under and below /dir/to/search/ 
find regular files named UNK_START regex UNK_END under and below /dir/to/search/ 
find regular files named UNK_START findme.txt UNK_END under UNK_START /usr UNK_END and UNK_START /home UNK_END directory tree 
find regular files named core under /tmp and delete them 
find regular files readable by the world 
find regular files that are bigger than 500 mb in size under current directoryt tree 
find regular files that are larger than 2gb 
find regular files that have suid or sgid set 
find regular files under UNK_START /somefolder UNK_END directory tree satisfying the options/conditions/operations provided in ${args[@]} array with find command 
find regular files under / that contain UNK_START stringtofind UNK_END 
find regular files under and below /path that match pattern UNK_START ???-???_[a-za-z]*_[0-9]*_*.??? UNK_END 
find regular files which have 644 permission 
find regular files whose names end in .jpg 
find regular files with permissions less than 111 
find regular non-hidden files containing UNK_START some text UNK_END in their names 
find regular non-hidden files containing `some text' in their names with hidden directories optimization 
find root's ruby files accessed in the last two minutes 
find root's files in the current directory tree 
find smallest file in the current directory with find commad 
find string UNK_START string UNK_END in files residing in the current directory tree, case insensitive 
find strings with UNK_START features UNK_END in /var/run/dmesg.boot' file 
find suspicious php files 
find symbolic links in /usr/lib and /usr/lib64 to files whose pathnames contain UNK_START libstdc++ UNK_END 
find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in UNK_START */systemctl UNK_END 
find symbolic links in directory /etc and below 
find symbolic links in lpi104-6 and research/lpi104-6 to files whose pathnames end in UNK_START file1 UNK_END 
find symbolic links under /etc/ 
find symlinks in the current directory tree 
find symlinks under and below the UNK_START test UNK_END directory and replace them with the content of the linked files 
find text files modified less than 5 days ago 
find text in whole directory tree 
find the UNK_START *.foo UNK_END files in the current directory tree that are not under UNK_START .snapshot UNK_END directories 
find the UNK_START param1 UNK_END string in regular files under and below /var 
find the UNK_START param1 UNK_END string in regular files under and below /var 
find the .groovy files outside the UNK_START ./target UNK_END directory path 
find the 5 largest regular files in the downloads folder of tecmint's home directory. 
find the 5 largest regular files in the current directory and below. 
find the core files and remove them 
find the current directory and all its subdirectories. 
find the directories whose names contain UNK_START new parts UNK_END at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/views 
find the directories whose pathnames contain UNK_START new parts UNK_END at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/views 
find the directory with least modification time under current directory 
find the empty directories and files under current directory 
find the file in the current directory tree with inode number $inum and delete it 
find the file whose inode number is 1316256 
find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir 
find the files in the current directory that match pattern UNK_START *.isolate.*.txt UNK_END and move them to folder ./isolate 
find the files in the current directory that match pattern UNK_START *.isolate.quantifier.txt UNK_END and move them to folder isolate/ 
find the files in the current directory that match pattern UNK_START *.jukebox.*.txt UNK_END and move them to folder ./jukebox 
find the files that have UNK_START 644 UNK_END permissions and modify them to have UNK_START 664 UNK_END permissions 
find the first file/directory in ... directory and quit 
find the first file/directory named UNK_START something UNK_END under current directory and quit 
find the first file/directory under $dir which matches the $tmp_dir in its path 
find the first file/directory under current directory and quit 
find the largest 10 directories under current directory 
find the largest 10 files (regular files) under current directory 
find the largest files in a particular location 
find the largest files in a particular location 
find the most recently changed files in a subtree 
find the passwd file in the current directory and one level down 
find the passwd file under root and one level down. 
find the passwd file under root and two levels down 
find the passwd file under the root directory and two levels down 
find the password file between sub-directory level 2 and 4 
find the password file between sub-directory level 2 and 4. 
find the process id of mysql 
find the string UNK_START joomla UNK_END case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers 
find the top 25 files according to their size in the current directory and its subdirectories 
find the top 5 big files 
find the top 5 biggest files 
find the top 5 small files 
find the total size of *.jpg files within the current directory tree 
find the total size of *.jpg files within the directory tree ./photos/john_doe 
find things changed today 
find user daniel's files of type jpeg 
find user daniel's files of type jpeg without `autumn' in the name 
find users whose names begin with UNK_START ab UNK_END and ends with UNK_START 1 UNK_END 
find users whose names begin with UNK_START ab UNK_END or whose terminal from which they are logged in ends with UNK_START 1 UNK_END 
find which ruby files under current directory contain the string UNK_START jump UNK_END 
find with combine multiple search criterias , in this command serach files that begin with abc in there name and dont have .py extension . 
find writable files in the current directory tree 
find writable regular files in the current directory 
find writable regular files in the current directory 
find writable regular files omitting those that contain sites/default/files in their names 
find x* files/directories under /tmp directory whose status was changed less than 1 day ago 
find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play 
find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play 
find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play 
finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output. 
finds pids of all running processes, gets executable binary of each process, and prints containing folder of each binary. 
finds all files having text UNK_START texthere UNK_END recursively in a current folder, and precedes found string with string number in file and file name. 
finds all files in $location, prints file names, overwrite files with random content $times times, and finally remove them. 
finds all files in a UNK_START /path UNK_END folder and prints long listing for them. 
finds all files like UNK_START mylog*.log UNK_END newer than $2 and archives them with bzip2. 
finds all folders that contain UNK_START ssh UNK_END file and have UNK_START bin UNK_END in path. 
finds all folders that contain UNK_START ssh UNK_END file and have UNK_START bin UNK_END in path. 
finds all php processes running in system. 
finds all strings with parent folder of path UNK_START $path UNK_END in 'file', and saves result in UNK_START x UNK_END variable. 
finds all the log* files in /mydir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them. 
finds all the log* files recursively in /mydir that are more than 7 days older and compresses them. 
finds all users logged in via ssh. 
finds every folder with file UNK_START header.php UNK_END within, and copies file UNK_START topscripts.php UNK_END to every one of them. 
finds file UNK_START subscription.java UNK_END and changes to containing folder. 
finds file UNK_START subscription.java UNK_END and changes to containing folder. 
finds files in UNK_START directory UNK_END folder with the same name and location but different content than files in UNK_START directory.original UNK_END folder and prints location of such files. 
finds files in UNK_START directory UNK_END folder with the same name and location but different content than files in UNK_START directory.original UNK_END folder and saves location of such files to UNK_START directories UNK_END variable. 
finds if environment variable like UNK_START dualcase UNK_END exists in environment. 
finds matched text in defined path recursively, but not follows symlinks. 
finds more than 5 days old files in two directories and compresses them. 
finds name of a current month and saves it in a UNK_START month UNK_END variable. 
finds only parts of echoed string that match with regex 'run-parts (-{1,2}\s+ )*\s+', and saves them in $match variable, each matched part on a separate line. 
finds out what groups a current user has. 
finds out what groups a given user has. 
finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings. 
finds recursion-related options of a UNK_START grep UNK_END utility. 
finds recursively all files having extension .c, .h in UNK_START /path/ UNK_END that contain 'pattern', and prints matched strings with string number and file name. 
finds recursively all files in UNK_START /path/ UNK_END excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name. 
finds recursively all files in UNK_START /path/ UNK_END that contain 'pattern', and prints matched strings with string number and file name. 
finds recursively all files not having extension .o in UNK_START /path/ UNK_END that contain 'pattern', and prints matched strings with string number and file name. 
finds recursively all folders in current folder which path not contains UNK_START nametoexclude UNK_END string and removes only ones without files and another folders within. 
finds recursively all folders named UNK_START a UNK_END within current folder and removes only ones without files and another folders within. 
finds recursively all folders named UNK_START a UNK_END within current folder and removes only ones without files and another folders within. 
finds recursively and following symlinks from root folder all files that contain UNK_START text-to-find-here UNK_END and prints files names. 
finds shell options like UNK_START checkjobs UNK_END with their state. 
finds shell options with UNK_START login UNK_END in name. 
finds string with text UNK_START string to be searched UNK_END in any cased files like UNK_START *.cs UNK_END recursively in a current folder. 
finds strings having text UNK_START searched-string UNK_END in all files recursively in a current folder. 
finds strings like UNK_START texthere UNK_END recursively in all files of a current folder regarding all symlinks. 
finds strings with UNK_START text UNK_END from *.log files and prints all but first field from any space-delimited string. 
finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot. 
finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot. 
finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot. 
finds strings with text UNK_START searched-string UNK_END recursively in all files of current folder and prints names of files with matched strings. 
finds strings with text UNK_START searched-string UNK_END recursively in all files of current folder. 
finds strings with text UNK_START text UNK_END in all files named UNK_START string to be searched UNK_END recursively in a current folder. 
finds the folder where temporary files would be written to, and save path to it in a UNK_START tmpdir UNK_END variable. 
finds the folder where temporary files would be written to. 
findx all files having text UNK_START texthere UNK_END recursively in a current folder, and prints only file names with matching strings. 
fix files to default permissions 644 
fix files to default permissions 755 
fix permissions for a group of files with given extension 
follow symbolic links for the full path of UNK_START lshw UNK_END 
follows symbolic link $bash_source, and prints path to its target. 
for each item in array "alpha", display the basename, that is the part following the last slash, or the whole item if no slash is present. 
for each line in file2 whose first field appears as a first field in file1, print an output line constructed following the specified -o format. 
for each line of colon-separated information in files UNK_START empsal UNK_END and UNK_START empname UNK_END whose first field matches in both files, output: first field of empname, second field of empname, fourth field of empname, and third field of empsal. 
for each line of the sorted output of both file1 and file2, print lines whose first field of file2 does not appear as first field of file1. 
for each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv 
for each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv - both files must be sorted first. 
for each line which has a common first field in test.1 and test.2, output the first 2 fields of test.2 and the field 2 and 3 of test.1 
for each line whose first field is the same in file1 and file2, output the common first field followed by all other fields in file1 and file2. 
force create a hard link in UNK_START /usr/local/bin UNK_END to UNK_START findpdftext UNK_END 
force create a hard link named UNK_START non_secret_file.txt UNK_END to UNK_START secret_file.txt UNK_END 
force create a hard link named '/home/user/musik/youtube converted/aesthesys~ i am free, that is why i'"'"'m lost..mp3' with target '/home/user/musik/mix-2012-13/aesthesys~ i am free, that is why i'"'"'m lost..mp3' 
force create a symbolc link named UNK_START /usr/local/bin/fpdf UNK_END to UNK_START /usr/local/bin/findpdftext UNK_END 
force create a symbolc link named UNK_START /usr/local/bin/fpt UNK_END to UNK_START /usr/local/bin/findpdftext UNK_END 
force create a symbolc link named UNK_START new_dir UNK_END to UNK_START /other/dir UNK_END without dereferencing UNK_START new_dir UNK_END 
force create a symbolc link named UNK_START softlink_name UNK_END to UNK_START source_file_or_directory_name UNK_END without dereferencing UNK_START softlink_name UNK_END 
force create a symbolic link as a file named UNK_START /usr/lib/jvm/default-java UNK_END to UNK_START $default_java_dir UNK_END with verbose output 
force create a symbolic link in UNK_START /usr/bin/ UNK_END for each file matching UNK_START $javausrlib/jdk1*/bin/* UNK_END 
force create a symbolic link named UNK_START $* UNK_END to the canonical absolute path of UNK_START $1 UNK_END 
force create a symbolic link named UNK_START $lines UNK_END to UNK_START $c UNK_END without dereferencing UNK_START $lines UNK_END 
force create a symbolic link named UNK_START $pdir UNK_END to UNK_START $pluginpath UNK_END with verbose output 
force create a symbolic link named UNK_START currentdir UNK_END to UNK_START newdir UNK_END without dereferencing UNK_START currentdir UNK_END 
force create a symbolic link named UNK_START id_rsa UNK_END to UNK_START $keyname UNK_END 
force create a symbolic link named UNK_START mylink UNK_END with target UNK_START /apps/myapps/new/link/target UNK_END 
force create a symbolic link to UNK_START $f UNK_END in UNK_START ~/my-existing-links/ UNK_END with name the basename of UNK_START $f UNK_END 
force create a symbolic link without dereferencing named UNK_START $symlink_path UNK_END to UNK_START $lastmodified UNK_END 
force create a symbolic link without dereferencing named UNK_START alpha UNK_END to UNK_START alpha_2 UNK_END 
force create a symbolic link without dereferencing named UNK_START mylink UNK_END to UNK_START dir2 UNK_END 
force decompress all files into UNK_START /etc UNK_END 
force delete all files in the current folder 
force delete all files in the temp folder which have not been accesses in the last 240 hours 
force delete all jpg files in current directory which are less than 50kb and do not search in the sub directories 
force delete all jpg files in current directory which are less than 50kb and do not search in the sub directories 
force delete all the regular/normal files in the current folder and do not search in the sub folders 
force delete all the regular/normal files in the current folder and do not search in the sub folders (print0 is used to handle files which have newlines in their names or files with the name only as spaces ) 
force pseudo tty allocation on connection to UNK_START somehost UNK_END and execute UNK_START ~/bashplay/f UNK_END 
force remove all files and folders in the physical current working directory 
force the group stickiness for directories under /var/www 
forcefully delete all files in the current directory 
forcefully delete all files in the current directory that begin with spam- 
forcefully remove files *~important-file 
forcibly create symbolic links in target directory UNK_START ~/staging UNK_END for all files located in directory UNK_START ~/mirror UNK_END 
forcibly create symlink named as UNK_START /cygdrive/c/users/mic/mypics UNK_END to the directory UNK_START /cygdrive/c/users/mic/desktop/pending - pics/ UNK_END 
forcibly removes ${temp} file. 
forcibly removes all files like UNK_START *.bak UNK_END and UNK_START *~ UNK_END 
forcibly removes files '/tmp/stored_exception', '/tmp/stored_exception_line', UNK_START /tmp/stored_exception_source UNK_END 
format UNK_START $line UNK_END as a table 
format UNK_START file.txt UNK_END as space separated columns 28 characters in width 
format and print the time string @133986838 according to the default time format 
format bash array UNK_START ${arr} UNK_END in columns 
format file UNK_START list-of-entries.txt UNK_END as new-line separated columns 
format file UNK_START list-of-entries.txt UNK_END with no column delimiter 
format output of UNK_START mount UNK_END as a table 
format output of UNK_START file UNK_END content to columns with wide not less than 80 pixels 
format space separated fields in UNK_START filename UNK_END as a table 
format tab delimited file UNK_START list-of-entries.txt UNK_END as a table 
format tab separated fields in UNK_START file UNK_END as a table 
format the contents of UNK_START [file] UNK_END in a neat table 
format the contents of UNK_START [file] UNK_END in a neat table 
format the date represented by time string @1267619929 according to default format and print it 
format the time string $timestamp according to the format string UNK_START %y-%m-%d %h:%m:%s UNK_END and save the output to variable UNK_START cdate UNK_END 
format the time string @133986838 according to the default time format and save it to variable UNK_START variablename UNK_END 
format time string @$timestamp according to default time format 
format time string @1267619929 according to default time format 
forward all connections to client localhost 3307 via the ssh tunnel to gateway and then connect to host 1.2.3.4 to port 3306 
forward all connections to client localhost 3309 via the ssh tunnel to UNK_START mysql_access_server UNK_END and then connect to host UNK_START sqlmaster.example.com UNK_END on port 3306 
forward port 12345 bound on UNK_START localhost UNK_END to port 12345 on UNK_START otherhost UNK_END as user UNK_START otheruser UNK_END 
forward port 16186 on hello.com to 8888 on localhost using private key UNK_START privatekeystuffdis88s8dsf8h8hsd8fh8d UNK_END for login 
forward port 3307 on localhost to port 3306 on 1.2.3.4 via UNK_START user@gateway UNK_END on port 24222 
forward port 8000 bound on localhost to port 22 in UNK_START clusternode UNK_END via UNK_START user@bridge UNK_END 
from a script, output the name of the script itself, without containing directories - from a shell, output the name of the shell. 
from a script, output the name of the script itself, without containing directories. 
from the list of words (one per line) in list1.txt, display the number of occurrences of this word in list2.txt and sort the results from highest to lowest count. 
generate a random 32 ascii character password from /dev/urandom and save it to variable UNK_START pass UNK_END 
generate the spanish alphabet and number each character 
generate the obsolete 29 character spanish alphabet and number each character 
generates a randomly sorted list of numbers from 1 to 10. 
generates default-formatted file name of temporary file in a /dev/mapper folder, and saves path to it in a variable 'mapper'. 
generates name for temporary file with 6-letter suffix, and saves path to that new file in UNK_START fn UNK_END variable. 
generates temporary file in a UNK_START /dev/shm UNK_END folder and saves path to it in a UNK_START tfile UNK_END variable. 
generates temporary file name with full path by template UNK_START fifo.xxxxxx UNK_END and saves it to variable UNK_START fifo_name UNK_END 
get a record for domain $domain 
get a record for domain $domain 
get a detailed list of all files on the system larger than 10mb 
get a detailed listing of all symbolic links in /usr/bin starting with UNK_START z UNK_END 
get a list of all files in the /home directory tree and their coressponding inode numbers 
get a list of all hidden files from the current directory tree 
get a list of directories owned by group id 100 
get a list of files and directories in the current directory tree 
get a recursive file list of directory $dir 
get a recursive file list of directory $dir 
get a two column list of all regular .rb files residing in the current directory tree 
get current directory name without full path, ie. the part after the last / 
get directory listing of url $1 and save them to variable UNK_START header UNK_END by deleting UNK_START \r UNK_END characters 
get domain UNK_START $domain UNK_END ip address 
get domain name from dig reverse lookup. 
get domain name of $ip and save it to the variable UNK_START reverse UNK_END 
get domain name with UNK_START google UNK_END from address $1 
get domain name with UNK_START google UNK_END from address $ip 
get domain names from file UNK_START 1.txt UNK_END and request txt dns record for each one 
get files that last had their meta information changed more than 3 days ago 
get from file UNK_START file1.txt UNK_END strings starting with 'q', extract only part of them following after UNK_START = UNK_END sign, and print which ones are not found in UNK_START file2.txt UNK_END 
get only the latest version of the file UNK_START filename UNK_END under current directory 
get second line from text contained in variable $data. 
get the actual find exectuable path 
get the base filename from variable 'path', similar to using the basename command. 
get the directory with least access time under current directory 
get the disk space used by all *.txt (case insensitive) files/directories under current directory 
get the disk space used by all *.txt (case insensitive) files/directories under folder 1 and folder2 
get the grandparent directory of each found UNK_START pattern UNK_END file in $search_path 
get the list of regular files in the current directory 
get the number of UNK_START use UNK_END statements in all php files, ordered 
get the number of regular files in the directory given as the bash script argument $1 
get the path of running apache 
get the sizes (and total size) of all files under dir1 directory 
get the sizes (and total size) of all files under dir2 directory 
get the total size of all files under dir1 directory 
gets ip address of ${net_if} network interface. 
gets ip address of UNK_START eth0 UNK_END network interface. 
gets ip address of UNK_START eth0 UNK_END network interface. 
gets ip address of first listed network interface in system. 
gets ip addresses of all active network interfaces and saves to UNK_START ip UNK_END variable. 
gets ip addresses of all active network interfaces. 
gets ip addresses of all active network interfaces. 
gets mac address of UNK_START eth0 UNK_END network interface. 
gets mac address of UNK_START eth0 UNK_END network interface. 
gets mac address of UNK_START eth0 UNK_END network interface. 
gets mac address of en0 network interface. 
gets mac address of en0 network interface. 
gets mac address of eth0 network interface. 
gets mac address of eth0 network interface. 
gets mac address of eth0 network interface. 
gets mac address of p2p0 network interface. 
gets a current job back to the foreground. 
gets a job with defined number back to the foreground. 
gets all ip addresses from host network configuration and prints first one. 
gets back to the foreground a job with number 2. 
gets domain name from dig reverse lookup. 
gets domain name from dig reverse lookup. 
gets list of ip addresses of all network interfaces. 
gets state of shell option UNK_START dotglob UNK_END and saves it in UNK_START rest_cmd UNK_END variable. 
gets string with ip4 address of en0 network interface. 
gets string with mac addess of network interface eth0. 
gets string with mac address of eth0 network interface. 
gets the groups these users belong to. 
getting a detailed list of files/dirs 
give a long listing of all the *.pl files (perl files) beneath the current directory. 
give all directories in the /path/to/base/dir tree read and execute privileges 
give all directories in the /path/to/base/dir tree read and execute privileges 
give all files in the /path/to/base/dir tree read privileges 
give all files in the /path/to/base/dir tree read privileges 
give rwx permissions to the user and group of the directory named UNK_START files UNK_END leaving others without any privileges 
give the location of every hard link to file1 in the /home directory tree 
gives the primary group of $username. 
go back to last directory. 
go into the first directory whose name contains 1670 
go into the first directory whose name contains 1670 
go into the first directory whose name contains 1670 
go to /the/project/root//data, which in most filesystems/operating systems will be the same as cd /the/project/root/data 
go to /tmp directory. 
go to directory /cygdrive/c/program files (x86) using backslashes to escape special characters 
go to directory /cygdrive/c/program files (x86) using quotes to escape special characters 
go to directory /cygdrive/c/program files (x86)/$dollarsign using single quotes to escape special characters, including dollar signs 
go to directory /some/where/long 
go to directory named UNK_START ~ UNK_END (not home directory) 
go to directory named UNK_START ~ UNK_END (not home directory) 
go to directory pointed by last element of array UNK_START dirs UNK_END in bash version 4.2 
go to first directory specified in path which contains the command UNK_START oracle UNK_END 
go to first directory specified in path which contains the command UNK_START oracle UNK_END 
go to last directory with name starting with a number, useful for timestamped directory names. 
go to previous working directory. 
grab the output of UNK_START basename UNK_END (in this case "stuff") and echo it to stdout, which basename would do by default anyway. 
grab the output of UNK_START basename UNK_END (the last slash-separated section of variable "filename") and echo it to stdout, which basename would do by default anyway. 
gunzip all files matching UNK_START file*.gz UNK_END and answer UNK_START n UNK_END to any prompts 
handles shell option UNK_START nullglob UNK_END according with flags stored in $ngv variable. 
hash hostnames in user's known hosts file. 
hunting down files with at least one banana 
identify cms version/releases accross all your drupal websites 
identify cms version/releases accross all your drupal websites 
identify cms version/releases accross all your phpbb installations 
identify cms version/releases accross all your phpbb installations 
identify cms version/releases accross all your wordpress websites 
identify cms version/releases accross all your wordpress websites 
identify files that do not have a listing in the /etc/passwd or /etc/group file 
if variable UNK_START c UNK_END is a syntactically correct cron job, erase user's cron jobs and add UNK_START c UNK_END as the only cron job for user. 
infinitely ping every host listed in UNK_START file-of-ips UNK_END with at most 50 processes at once 
infinitely print UNK_START no UNK_END to the screen 
infinitely write UNK_START 1 UNK_END with line numbers to the console and UNK_START /tmp/to UNK_END 
instantly kill all processes whose command is 'myprocess'. 
interactively create a symbolic link in the current directory for UNK_START $script_dir/$file UNK_END 
interpret backslash sequences and delete whitespace characters in variable $foo and save the result to variable UNK_START foo_no_whitespace UNK_END 
invoke a trusted x11 forwarding ssh connection with server UNK_START 192.168.0.14 UNK_END on port 222 as user UNK_START phil UNK_END 
invoke a trusted x11 forwarding ssh connection with the server $ssh_server as user $ssh_user 
isolate first comma-delimited field of each line in "file", discard consecutive duplicates, and search UNK_START file UNK_END for first matching occurrence of that field. 
join colon-separated information in 3 files ln.txt ph.txt and ad.txt in a cascade fashion: join ln.txt and ph.txt, then join the result with ad.txt 
join columns in UNK_START file1 UNK_END and UNK_START file2 UNK_END if their first field matches and format the output as a table 
join comma-separated data in file1 and file2, including extra non-matching information in both files. 
join comma-separated information in 4 files 
join comma-separated information in 4 files - files must be sorted. 
join data in UNK_START file1 UNK_END sorted by the second word of each line with data in UNK_START file2 UNK_END sorted by the first word of each line, keeping the same order as it is found in UNK_START file1 UNK_END 
join data in file1 containing one number per line with data in file2 containing a number and other information per line, keeping the same order as it is found in file1. 
join lines in file UNK_START a UNK_END with lines in file UNK_START b UNK_END if the lines share a common first word 
join lines in file UNK_START aa UNK_END with lines in file UNK_START bb UNK_END if the lines share a common first word 
join lines in file UNK_START aa UNK_END with lines in file UNK_START bb UNK_END if the lines share a common first word and sort the result numerically 
join lines of 'file': fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields, with fields 3 to end of line discarding adjascent lines ignoring 3 last fields. 
join strings from UNK_START file1 UNK_END and 'file2', discarding excessive strings from largest file, and printing first, second and third space-separated field from first file, and third and fourth field from second file as a join result 
just find directories and skip file names 
keep only the last two hyphen-separated sections of UNK_START abc-def-ghi-jkl UNK_END 
keep the last 3 components (directories) of $path 
keep the last 4 ascii characters (bytes) of a string. 
kill all processes which were executed in background by the current shell. 
kill the processes of user `myuser' that have been working more than 7 days 
limits the number of results from grep to 2 lines 
list UNK_START .java UNK_END files that have the same contents 
list UNK_START .java UNK_END files that have the same filename and contents 
list (in long list format with inode number) the file under the current directory that has the oldest modification time 
list *.pl directories in the current directory tree 
list *.txt files residing in the current directory tree 
list *.txt files under current directory that have UNK_START mystring UNK_END in their name 
list .c files in the current directory 
list .conf files residing in the /etc/nginx/ directory tree 
list .html files in the current directory tree that contain string UNK_START base\-maps UNK_END but do not contain string UNK_START base\-maps\-bot UNK_END 
list .log files from the current directory tree 
list absolute path of files in the current directory 
list all *.bak files in the current directory tree 
list all *.c files in entire file system 
list all *.c, *.h and *.cpp files under current directory 
list all *.gif files found in the current directory tree 
list all *.jar files/directories under /usr, /home and /tmp directory 
list all *.java files/directories under /home/bluher with their full paths 
list all *.jpg files/directories in entire file system 
list all *.ogg files under your home directory along with their size 
list all *.png files/directories under /home/kibab directory 
list all *.txt files under current directory that contains the regex UNK_START pattern UNK_END 
list all *.txt files under current directory that match UNK_START foo= UNK_END in their file information 
list all *.txt files/directories under /etc 
list all *.txt files/directories under /etc 
list all *.txt files/directories under /etc 
list all *.txt files/directories under /etc 
list all *.txt files/directories under /etc 
list all *.txt files/directories under current directory 
list all *.txt files/directories under current directory 
list all *.txt files/directories under current directory 
list all *.txt files/directories under current directory 
list all *.txt files/directories under current directory ensuring white space safety 
list all *fink* files/directories in entire file system 
list all *fink* files/directories under current directory 
list all *jsp and *java regular files found in the current directory tree 
list all .c and .h files in the current directory tree that contain UNK_START thing UNK_END 
list all .c and .h files in the current directory tree that contain UNK_START thing UNK_END 
list all .gif files in the current directory tree 
list all .jpg files in the home directory tree 
list all .jpg files in the home directory tree 
list all .jpg files in the home directory tree in a fast way 
list all .svn files/directories under current directory 
list all .svn files/directories under current directory 
list all ipv4 addresses found in all files under /etc directory 
list all sgid and suid files in entire file system 
list all available commands in mac os 
list all broken symlinks excluding cyclic links under current directory 
list all cron jobs for current user. 
list all cron jobs which contain "word". 
list all cron jobs which contain "word". 
list all directories and subdirectories 
list all directories found in the current directory and below. 
list all directories in maximum 1 level down the current directory 
list all directories in maximum 1 level down the current directory 
list all directories of the $topdir directory tree that contain a makefile and at least one .py file 
list all directories under current directory 
list all empty files in the current directory tree 
list all empty files in the current directory tree 
list all empty files under the current directory 
list all environment variables (name and value) whose name either equals home or path, or starts with go 
list all environment variables (name and value) whose name either equals path or starts with gobin 
list all environment variables (name and value) whose name starts with goroot 
list all environment variables containing UNK_START user UNK_END in their name or value that would result in running a command with 'sudo env'. 
list all environment variables whose name starts with path, showing the name and value of each one. 
list all file paths under the current directory with case insensitive name UNK_START .note UNK_END in reverse alphabetic order 
list all files 2 levels deep in the current directory tree 
list all files and directories (including hidden) in the current working directory in a long list format sorted by the oldest modification time 
list all files and directories from the current directory tree 
list all files and directories in long list format with a time style of UNK_START long-iso UNK_END and sort from oldest modifed to newest modified 
list all files and directories in the /home directory tree whose names are UNK_START trash UNK_END 
list all files and directories residing in the current directory and below 
list all files and directories residing in the current directory and below 
list all files and folders in the current working directory 
list all files and sub directories including hidden files in the current directory tree 
list all files bigger than 10000 blocks 
list all files except for those in directory sccs 
list all files from the current directory tree that were modified less than 60 minutes ago 
list all files from the current directory tree that were modified less than 60 minutes ago 
list all files from the current directory tree that were modified less than 60 minutes ago 
list all files from the current directory tree that were modified less than 60 minutes ago, omitting UNK_START . UNK_END 
list all files in /home/bozo/projects directory tree that were modified exactly one day ago 
list all files in /home/bozo/projects directory tree that were modified exactly one day ago. 
list all files in /home/bozo/projects directory tree that were modified within the last day 
list all files in /home/bozo/projects directory tree that were modified within the last day. 
list all files in /var/www and below that have changed in the last 10 minutes 
list all files in a current folder, separating names with comma 
list all files in a current folder, separating names with semicolon 
list all files in a current folder, separating names with semicolon 
list all files in current directory whose name or file type description contains the word "ascii". 
list all files in entire file system owned by the user wnj and are newer than the file ttt 
list all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time 
list all files in entire file system that are not newer than the ttt file and do not belong to the user wnj 
list all files in entire file system that belong to the user wnj or modified later than the ttt file 
list all files in maximum 2 levels down the current directory 
list all files in maximum 2 levels down the current directory 
list all files in the UNK_START test UNK_END directory tree except those with UNK_START /invalid_dir/ UNK_END in the pathnames 
list all files in the /hometest directory tree whose names are "trash", and their sizes 
list all files in the /myfiles directory tree 
list all files in the /var directory tree whose size is greater than 10 megabytes 
list all files in the /var directory tree whose size is greater than 10 megabytes 
list all files in the current directory tree except for those in the ./src/emacs directory 
list all files in the current directory tree including those that may contain spaces in their names 
list all files in the current directory tree invoking xargs only once 
list all files in the current directory tree larger than 1000 kb 
list all files in the current directory tree that were last modified between UNK_START mar 03, 2010 09:00 UNK_END and UNK_START mar 11, 2010 UNK_END 
list all files in the current directory tree that were last modified in march 2007 
list all files in the current directory tree that were last modified more than 60 minutes ago 
list all files in the current directory tree that were last modified on the 3rd of march, 2010 or later 
list all files in the current directory tree that were last modified yesterday or later 
list all files in the current directory tree that were modified 60 minutes ago 
list all files in the current directory tree that were modified 60 minutes ago 
list all files in the current directory tree that were modified 60 minutes ago 
list all files in the current directory tree that were modified less than 60 minutes ago 
list all files matching regular expression UNK_START *foo* UNK_END in a human-readable form 
list all files named UNK_START filename UNK_END from the current directory tree, ignoring directory UNK_START folder1 UNK_END 
list all files that are between 10000 and 32000 bytes in size 
list all files that have not been read in thirty days or more 
list all files that matches both the case insensitive patterns *$1* and *$2* under /home/musicuser/music/ directory 
list all files under and below the directory given as variable $arch1 
list all files under and below the directory given as variable $fulfillment 
list all files under current directory 
list all files under current directory matching the regex UNK_START .*(c|h|cpp)$ UNK_END 
list all files under current directory matching the regex UNK_START .*\(c\|h\|cpp\) UNK_END 
list all files under current directory matching the regex UNK_START .*\.\(c\|h\|cpp\) UNK_END 
list all files under current directory that are greater than 10mb in size 
list all files under current directory with their sizes and paths 
list all files under current directory with white space safety in their paths 
list all files under the current working directory last modified less than a day ago 
list all files under the current working directory tree 
list all files under the current working directory with name UNK_START .htaccess UNK_END 
list all files with name UNK_START somefile UNK_END and their modification time under the current directory sorted by oldest modified to newest modified 
list all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time 
list all files with their paths that have identical content. 
list all files without descending into subdirectories 
list all files/directories in entire file system 
list all files/directories under $dir_name with size $sizefile and print them according to the format string UNK_START %m %n %u %g %s %tb %td %tk:%tm %p\n UNK_END 
list all files/directories under /data1/marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago 
list all files/directories under /data1/marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago 
list all files/directories under /myfiles directory 
list all files/directories under current directory 
list all files/directories under current directory 
list all files/directories under current directory 
list all files/directories under current directory 
list all files/directories under current directory by replacing all spaces with commas (,) 
list all files/directories under current directory ensuring white space safety 
list all files/directories under current directory matching the posix-egrep type regex UNK_START .+\.(c|cpp|h)$ UNK_END in their names 
list all files/directories under current directory matching the posix-egrep type regex UNK_START .+\.(c|cpp|h)$ UNK_END in their names 
list all files/directories under current directory matching the posix-egrep type regex UNK_START .+\.(c|cpp|h)$ UNK_END in their names excluding the files that contain UNK_START generated UNK_END or UNK_START deploy UNK_END in their paths 
list all files/directories under current directory matching the posix-egrep type regex UNK_START .+\.(c|cpp|h)$ UNK_END in their names excluding the paths */generated/* and */deploy/* 
list all files/directories under current directory with UNK_START foobar UNK_END in their names ensuring white space safety 
list all files/directories under current directory with UNK_START foobar UNK_END in their paths ensuring white space safety 
list all files/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in y-m-d format and name filed, then write the outptut to /tmp/files.txt 
list all files/directories with spaces in their names under ~/library directory 
list all files/folders in current directory by separating them with spaces 
list all hidden regular files from the current directory separating them with zeroes 
list all leaf directories (directories which don't contain any sub-directory) under current directory 
list all leaf directories of the current directory tree 
list all mounted filesystems 
list all nfs mounts 
list all non-empty files under under current directory 
list all non-hidden files in ~/junk 
list all of the subdirectories in the current directory with no trailing slash. 
list all paths to files or directories under UNK_START /data/ UNK_END that start with UNK_START command- UNK_END and end with "-setup", sort the result by the version number specified between UNK_START command- UNK_END and UNK_START -setup UNK_END (least to greatest) 
list all processes with detailed information 
list all regular file owned by root with permissions 4000 
list all regular files from the current directory tree that were modified less than 60 days ago 
list all regular files from the current directory tree that were modified less than 60 minutes ago 
list all regular files from the current directory tree that were modified less than 60 minutes ago 
list all regular files from the current directory tree that were modified less than 60 minutes ago 
list all regular files from the current directory tree that were modified less than 60 minutes ago 
list all regular files from the current directory tree that were modified less than 60 minutes ago 
list all regular files in /var/www and below that have changed in the last 10 minutes 
list all regular files in and below the home directory that have been modified in the last 90 minutes 
list all regular files in and below the home directory that were modified more than 5 years ago 
list all regular files in and below the home directory that were modified more than 5 years ago 
list all regular files in entire file system 
list all regular files in the current directory tree 
list all regular files in the current directory tree 
list all regular files in the current directory tree 
list all regular files in the current directory tree modified within the last 24 hours 
list all regular files in the current directory tree that were modified less than 60 minutes ago 
list all regular files matching the name pattern UNK_START $1* UNK_END (where $1 is a positional parameter) under '/usr', '/bin', UNK_START /sbin UNK_END and UNK_START /opt UNK_END directory tree 
list all regular files modified more than 61 days 
list all regular files residing in the current directory tree and containing string UNK_START /bin/ksh UNK_END 
list all regular files residing in the current directory tree and containing string UNK_START /bin/ksh UNK_END 
list all regular files under current directory (not white space sage) 
list all regular files under current directory ensuring white space safety 
list all regular files under the current directory and below it 
list all regular files under the current directory and below it 
list all symlinks under current directory and search for targetfile.txt in this list 
list all the .c files under the current directory and below in a 3 column format 
list all the .c files under the current directory and below in a 3 column format 
list all the emptry files in thecurrent directory only. 
list all the file links 
list all unique parent directories of .class files found under the current directory 
list all variables (names and values) whose name or value contains x. 
list all your files including everything in sub-directories 
list all zero-length files 
list all ~/bin/filesdvorak/.* (non-recursive) and ~/.past_rc_files/.* (recursive) files/directories and take common entries between these two lists 
list an empty environment (prints nothing) 
list and remove all regular files named UNK_START core UNK_END that are larger than 500kb 
list and remove all regular files named UNK_START core UNK_END under /prog that are larger than 500k 
list any line in UNK_START f1 UNK_END or UNK_START f2 UNK_END which does not appear in the other and delete all tab characters in the output 
list characters from standard input showing backslash escapes for non-displayables 
list common files in directories UNK_START 1 UNK_END and UNK_START 2 UNK_END 
list content of UNK_START myfile UNK_END in a subshell and returns output to parent shell 
list current user's crontab. 
list directories under current directory 
list each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest 
list each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest 
list each file or directory in the current directory prefixed by its human readable filesize and sorted from largest to smallest 
list each file or directory in the current directory prefixed with its filesize in mb and sorted from smallest to largest 
list each file or directory in the current directory prefixed with its filesize in bytes and sorted from smallest to largest 
list each subdirectory name composing the current working directory 
list each subdirectory name composing the current working directory 
list each unique case insensitive character in UNK_START file UNK_END prefixed by number of occurrences 
list each unique case insensitive character in UNK_START file UNK_END prefixed by number of occurrences and sorted from most frequent to least frequent 
list each unique character in UNK_START file UNK_END prefixed by number of occurrences 
list each unique character in UNK_START file UNK_END prefixed by number of occurrences and sorted from most frequent to least frequent 
list empty directories in the current directory tree 
list every symbolic link in every home directory's subdirectory owned by group `staff' 
list file contents of compressed file $i 
list file contents of compressed file UNK_START compressed.tar.gz UNK_END 
list file information of the full path of command UNK_START c++ UNK_END 
list files and directories one level deep in the current directory tree 
list files and directories recursively 
list files ending in .html and residing in the current directory tree 
list files in UNK_START dir1 UNK_END that are not in UNK_START dir2 UNK_END 
list files in directory UNK_START one UNK_END and UNK_START two UNK_END that do not exist in the other 
list files in directory UNK_START one UNK_END that exist in directory UNK_START two UNK_END 
list files in the current directory 
list files in the current directory 
list files in the current directory and below 
list files in the current directory and below except for git files 
list files in the current directory and below that are exactly 1234 bytes in size 
list files in the current directory tree using echo 
list files in the current directory tree which have permissions rwx for user and rw for group and others 
list files larger than 10mb in the /var directory recursively 
list files larger than 10mb in the /var directory recursively 
list files larger than 10mb under /var/log 
list files larger than 10mb under /var/log /tmp that haven't changed in a month 
list files larger than 10mb under /var/log /tmp that haven't changed in a month 
list files larger than 9mb residing in the current directory and below 
list files named UNK_START accepted_hits.bam UNK_END in the current directory tree prefixing their names with UNK_START somecommand UNK_END 
list files smaller than 9kb residing in the current directory and below 
list files under $curr_dir which were modified, accessed or whose status were changed $ftime ago replacing the $curr_dir path string to UNK_START ./ UNK_END 
list files under current directory according to their size in descending order 
list files with c-style escape sequences for non-alphanumeric characters 
list files/directories at least three levels down the directory tree 
list first 20 files under current directory 
list first 5 files named UNK_START something UNK_END that are found under current directory 
list in detail all *.txt files in the current directory tree, omitting paths ./movies/*, ./downloads/*, and ./music/* 
list in detail the regular files from the /somelocation/log_output directory tree that were last changed more than 40 days ago 
list jobs and their process ids and print them by replacing newline with UNK_START ^ UNK_END 
list level 2 subdirectories of the current directory 
list level 2 subdirectories of the current directory 
list non-hidden regular files in the current directory tree that were last modified more than 500 days ago 
list only the non-hidden empty files only in the current directory. 
list path/filename of all php files under current directory whose file type description or path/name contains UNK_START crlf UNK_END 
list recursively all files and directories in /var/www 
list regular files in current directory with read, write and execute permission for all users and also show the permissions 
list regular files in current directory with read, write and execute permission for all users and also show the permissions 
list root's regular files with permissions 4000 
list subdirectories in the current directory 
list subdirectories in the current directory 
list the 10 largest files or directories and their sizes under (and including) UNK_START /var UNK_END 
list the md5 digest of all files under UNK_START teste1 UNK_END and UNK_START teste2 UNK_END sorted alphabetically 
list the combined path of the current working directory and UNK_START file.txt UNK_END 
list the current directory recursively ignoring ./src/emacs/ and all its contents 
list the current directory recursively ignoring the UNK_START dir1 UNK_END subdirectory 
list the current directory recursively ignoring the UNK_START dir1 UNK_END subdirectory 
list the current directory recursively ignoring the UNK_START dir1 UNK_END subdirectory 
list the current directory recursively ignoring the UNK_START dir1 UNK_END subdirectory's content 
list the directory contents of the current working directory 
list the directory paths of all *.ext (case insensitive) files under /path directory 
list the directory paths of all file.ext files under present working directory 
list the directory paths of all file.ext files under present working directory 
list the directory paths of all file.ext files under present working directory 
list the entire cron job list of user "apache". 
list the files from the current directory tree that contain lines matching regular expression UNK_START ^subject:.*unique subject UNK_END 
list the files from the current directory tree that contain lines matching regular expression UNK_START ^subject:.*unique subject UNK_END 
list the files from the current directory tree that contain lines matching regular expression '^from:.*unique sender', ignoring ~/src and ~/bin 
list the files in UNK_START archive.tar.gz UNK_END 
list the files in the /etc directory tree containing text UNK_START old1.old2.co.com UNK_END 
list the files in the /etc directory tree containing text UNK_START 128.200.34. UNK_END 
list the full path of each directory in the current working directory 
list the full path of each directory under the current working directory 
list the largest file in long list format of all the files under the current directory 
list the largest file prefixed by its size in bytes of all files under the current directory 
list the last entry of the numerically sorted list of all files and folders under UNK_START /foldername UNK_END 
list the last modified file under UNK_START $dir UNK_END 
list the names of all file.ext files/directories under present working directory 
list the names of all files under current directory 
list the names of the directories in current directory without going into sub-directories 
list the names of the directories in current directory without going into sub-directories 
list the number of occurrences of each unique character in UNK_START the quick brown fox jumps over the lazy dog UNK_END sorted from most frequent to least frequent 
list the regular files of the current directory tree that contain string UNK_START texthere UNK_END 
list the unique file extensions of all files under the current directory 
list the unique parent directories of all .class files found in the entire filesystem 
list the unique parent directories of all .class files found under UNK_START /root_path UNK_END 
list the unique second UNK_START / UNK_END delimited field of every line from standard input prefixed by the number of occurrences 
list the unique tab delimited field number UNK_START $field UNK_END in all files, prefix with the number of occurrences, sort from most frequent to least frequent 
list the z* links in the /usr/bin directory and the file to which it points to 
list the z* links in the /usr/bin directory with inode information and the file to which it points to 
list unique md5 digests of all files in the current directory ending in .txt 
list unique series of 3 characters in file UNK_START $1 UNK_END prefixed by the number of occurrences and sorted from most frequent to least frequent 
lists UNK_START /tmp/hashmap.$1 UNK_END file or folder UNK_START /tmp/hashmap.$1 UNK_END content one file per line. 
lists all directories in '/home/alice/documents/'. 
lists all directories in a current folder. 
lists all directories in the current folder. 
lists all files in a UNK_START /home/dreftymac/ UNK_END folder and subfolders without recursion. 
lists all files in a current folder, separating names with comma. 
lists all files in a current folder, separating names with comma. 
lists all files in a current folder, separating names with comma. 
lists all files that matches path pattern with wildcards. 
lists all manual pages. 
lists all subdirectories in a current folder, removing trailing slash. 
lists all subdirectories in current directory with a trailing slash 
lists all subdirectories in the current directory 
lists all subdirectories in the current directory with the trailing slash removed 
lists all top-level files in a UNK_START /home/dreftymac/ UNK_END folder. 
lists content of all subfolder (without recursion) in a current folder. 
lists content of compressed text file. 
lists content of the current folder. 
lists file descriptors of a current process. 
lists long format information about file '/bin/echo'. 
load keybindings from a file ~/.inputrc 
locate ogg files under the home directory larger than 100 megabytes 
locate ogg files under the home directory smaller than 100 megabytes 
locate all UNK_START copyright UNK_END files under and below /usr/share/doc 
locate all *.csv files under the current directory tree 
locate all *.csv files under the current directory tree 
locate all *.csv files under the current directory tree separating the file names with zeroes 
locate all *.csv regular files under the current directory tree 
locate all *.mov files in the current directory tree 
locate all *.txt files in the current directory tree 
locate all .txt files in and below the current directory 
locate all ogg files that reside in the home directory and have not been accessed in the past 30 days 
locate all `readme.txt' files under the home directory 
locate all files UNK_START needle.txt UNK_END 
locate all files in the current directory and below that do not have UNK_START testfileasdf UNK_END in their names 
locate all files in the current directory and below that have UNK_START testfile UNK_END in their names 
locate all files in the current directory and below that have UNK_START testfile UNK_END in their names regardless of the case 
locate all files named UNK_START restore.php UNK_END in the current directory and 3 levels below 
locate all passwd files on the system 
locate all the hard links of file `passwd' 
locate and rename unprintable directories using inode numbers 
locate file UNK_START file1 UNK_END 
locate files not owned by any user or group 
locate files that reside in the /u/bill directory tree and were last accessed between 2 and 6 minutes ago 
locate files that reside in the home directory and have not been accessed in the past 30 days 
locate files whose status was changed less than 1 day ago 
locate files with user permissions rwx owned by my_user 
locate logo.gif in the /var/www directory tree 
locate symbolic links in /usr and below 
locate symlinks in directory trees lpi104-6 and research/lpi104-6 
locate the httpd.conf file on the system 
locate world-writable files and directories on the system 
locates UNK_START gcc UNK_END executable file, strips last two parts of the full path, adds UNK_START /lib UNK_END to the end and saves result in UNK_START libdir UNK_END variable. 
locates bzip2 command in a system. 
locating large files (> 100 mb) in /home/ for UNK_START cleaning UNK_END 
log in as UNK_START middleuser UNK_END with key UNK_START ./middle_id.pem UNK_END and forward port 22 on host UNK_START middle.example.org UNK_END to port 2222 on localhost 
log in using key file UNK_START ./device_id.pem UNK_END as user UNK_START deviceuser UNK_END on host UNK_START middle.example.org UNK_END and port 2222 
log into UNK_START ubuntu@ec2-xx-xxx-xxx-xxx.us-west-2.compute.amazonaws.com UNK_END using identity file UNK_START ~/path/mykeypair.pem UNK_END 
login in UNK_START whatever.com UNK_END as user UNK_START whoever UNK_END with x11 forwarding to enable gui programs on remote to be run 
login to UNK_START $host UNK_END and create file UNK_START $file_path UNK_END if it does not exist 
login to UNK_START host UNK_END using identity file UNK_START id_rsa UNK_END 
look for UNK_START filename UNK_END in the current directory and below 
look for UNK_START testfile.txt UNK_END in the UNK_START / UNK_END directory and 1 level below 
look for *.jpg files 
look for *.jpg files on the system 
look for *log files in directories at least three levels down the directory tree 
look for *log files in directories at most three levels down the directory tree 
look for sgid files and directories 
look for suid files and directories 
look for `regexp' in binary files 
look for all files whose names match pattern UNK_START my* UNK_END 
look for any files that have not been modified in the last two days 
look for any files that were modified 2-5 days ago 
look for directory `cookbook' 
look for file `chapter1' under /usr and /home 
look for files in the current directory tree to which the group users have full access 
look for files that have suid or sgid set 
look for files whose names begin with letters a-j 
look for files with the name UNK_START search UNK_END under current directory 
look for files with wide open permissions 
look for files with wide open permissions 
look for regular files in the directory trees 'deferred', 'active', 'maildrop', UNK_START incoming UNK_END under /var/spool/postfix/ 
look in /home/dm and below for files with UNK_START uniform UNK_END in their names 
look in the current directory and below for all files whose names begin with either UNK_START my UNK_END or UNK_START qu UNK_END 
look up for UNK_START myip.opendns.com UNK_END in server UNK_START resolver1.opendns.com UNK_END and save the terse output in UNK_START ip UNK_END variable 
lookup information for user UNK_START vivek UNK_END 
lookup information of the current user 
make UNK_START bar UNK_END executable 
make UNK_START file.sh UNK_END executable 
make $weeks_to_save+1 directories named UNK_START weekly.n UNK_END where n ranges from 0 to UNK_START $weeks_to_save UNK_END 
make 3 directories named UNK_START $home/labs/lab4a/folder UNK_END followed by a 3 width zero padded number from 1 to 3 
make 3 directories named UNK_START ~/labs/lab4a/folder UNK_END followed by the number 1, 2, or 3 
make 3 directories named UNK_START ~/labs/lab4a/folder UNK_END followed by the number 1, 2, or 3 
make 999 folders one inside another where first 998 of them is named as UNK_START folderx UNK_END where x goes from 1 to 998 and the last folder named as UNK_START folder9991000 UNK_END 
make dns lookup for hostname stackoverflow.com 
make dns lookup requests for domain list in file UNK_START /path/to/host-list.txt UNK_END 
make a post request to UNK_START http://dweet.io/dweet/for/cycy42 UNK_END with data UNK_START piip UNK_END set to the ip address of the system 
make a copy of file.txt in all directories in current directory - names may not contain spaces. 
make a copy of file1 in dir1, dir2, and dir3. 
make a copy of the entire contents of srcfolder called "destfolder", if destfolder exists, the copy will be placed within it. 
make a copy of the entire contents of dir1 in the pictures directory located in the user's home directory. 
make a directory in the current working directory with a random 32 alphanumeric character name 
make a directory in the current working directory with a random 32 alphanumeric character name 
make a new directory UNK_START new-dir UNK_END in every directory in the current directory tree 
make a new directory UNK_START new-dir UNK_END in every directory in the current working directory non-recursively 
make all directories in the current directory tree accessible to anybody 
make all regular files in the current directory tree world-readable 
make all the bugzilla subdirectories permission 775 
make directorie(s) UNK_START es/lc_messages UNK_END as needed in the current directory 
make directorie(s) UNK_START es_mx.utf8/lc_messages UNK_END as needed in the current directory 
make directories UNK_START ./es/es_mx.utf8/lc_messages UNK_END as needed and do not error if it exists 
make directories "/tmp/a", "/tmp/b", "/tmp/c", and UNK_START /tmp/ dir with spaces UNK_END 
make directories "3/foo", "3/bar", and UNK_START 3/baz UNK_END 
make directories "labs/lab4a/folder1", "labs/lab4a/myfolder", and UNK_START labs/lab4a/foofolder UNK_END 
make directories "a", "b", "c", "d", and UNK_START e UNK_END 
make directories UNK_START a/b/c UNK_END as needed without causing an error if it exists 
make directories UNK_START bravo_dir UNK_END and UNK_START alpha_dir UNK_END 
make directories UNK_START es/lc_messages UNK_END as needed and do not error if it exists 
make directories UNK_START foo UNK_END and UNK_START bar UNK_END 
make directories UNK_START foo/bar/baz UNK_END as needed and do not cause an error if it exists 
make directories UNK_START mnt UNK_END and UNK_START point UNK_END 
make directories UNK_START project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a} UNK_END as needed and do not cause an error if it exists 
make directories UNK_START tmp/real_dir1 UNK_END and UNK_START tmp/real_dir2 UNK_END as needed 
make directories "~/foo/bar/baz", "~/foo/bar/bif", and UNK_START ~/foo/boo/bang UNK_END as needed 
make directories a, b, c, ..., z under path2 as needed. 
make directories and parents as needed to UNK_START ${raw_folder} UNK_END and UNK_START ${split_folder} UNK_END 
make directories as needed in UNK_START dest UNK_END for every directory found under UNK_START src/ UNK_END 
make directories for each line in UNK_START folder_list.txt UNK_END 
make directories for each unique file path in UNK_START file1 UNK_END 
make directories in UNK_START /target_folder_root/ UNK_END for each UNK_START .mov UNK_END file in the current directory tree 
make directories to UNK_START $2 UNK_END as needed 
make directories to UNK_START $target_path UNK_END as needed without causing an error if it exists 
make directories to UNK_START /my/other/path/here UNK_END as needed 
make directories to UNK_START /my/other/path/here/ UNK_END as needed 
make directories to UNK_START /some/path UNK_END as needed 
make directories to UNK_START /tmp/boostinst UNK_END as needed and print a message for each created directory 
make directories to UNK_START /tmp/test/blah/oops/something UNK_END as needed 
make directories to UNK_START directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2} UNK_END as needed 
make directories to UNK_START x/p/q UNK_END as needed 
make directories to file UNK_START /full/path/to/file.txt UNK_END as needed 
make directory UNK_START /cpuset UNK_END 
make directory UNK_START /data/db UNK_END 
make directory UNK_START /etc/cron.15sec UNK_END 
make directory UNK_START /etc/cron.5minute UNK_END 
make directory UNK_START /etc/cron.minute UNK_END 
make directory UNK_START /path/to/destination UNK_END 
make directory UNK_START /tmp/foo UNK_END 
make directory UNK_START /tmp/googletestmock UNK_END 
make directory UNK_START /tmp/imaginary/ UNK_END on remote host before archiving UNK_START file UNK_END to UNK_START user@remote:/tmp/imaginary/ UNK_END 
make directory UNK_START /tmp/new UNK_END 
make directory UNK_START /var/svn UNK_END 
make directory UNK_START testproject UNK_END 
make directory UNK_START aaa UNK_END 
make directory UNK_START aaa/bbb UNK_END 
make directory UNK_START alpha_real UNK_END 
make directory UNK_START backup UNK_END 
make directory UNK_START certs UNK_END 
make directory UNK_START destdir UNK_END 
make directory UNK_START dir UNK_END and do not cause an error if it exists 
make directory UNK_START dir1 UNK_END 
make directory UNK_START dirname UNK_END with permissions set to 777 
make directory UNK_START foo UNK_END 
make directory UNK_START foo UNK_END and do not cause an error if it exists 
make directory UNK_START mybuild UNK_END 
make directory UNK_START new_dir UNK_END 
make directory UNK_START saxon_docs UNK_END 
make directory UNK_START subdirectory UNK_END 
make directory UNK_START tata UNK_END 
make directory UNK_START temp UNK_END 
make directory UNK_START testexpress UNK_END 
make directory UNK_START ~/log UNK_END 
make directory UNK_START ~/practice UNK_END 
make directory UNK_START ~/public_html UNK_END 
make directory UNK_START ~/temp UNK_END 
make directory and parents as needed for each unique mime type in the current directory 
make directory and parents as needed for the directory name of file UNK_START $f UNK_END 
make directory and parents as needed to UNK_START $finalpath UNK_END 
make directory and parents as needed to UNK_START ~/temp/bluecove/target/ UNK_END 
make directory expanded by $dir variable 
make directory named in variable UNK_START archive UNK_END with UNK_START .tar* UNK_END stripped from the end 
make hidden directory UNK_START .hiddendir UNK_END 
make regular files from debian/fglrx-amdcccle/usr/lib/fglrx/bin/ executable for all 
make sure the file UNK_START .bash_profile UNK_END exists in current directory, update its timestamp to current date/time. 
md5sum the last 5 files in /directory1/directory2/ 
measure the disk space taken up by all *.txt files in directory trees folder1 and folder2 
measure the disk space taken up by all *.txt files in the current directory tree 
measure the disk space taken up by all *.txt files in the current directory tree 
merge already sorted files UNK_START *.txt UNK_END and split the result into files of at most 1000000 lines each with a numeric suffix and a prefix UNK_START output UNK_END 
merge already sorted files UNK_START file*.txt UNK_END and split the result into files of at most 100000 lines each with a prefix UNK_START sorted_file UNK_END 
merge already sorted files in the current directory ending in UNK_START .$suffix UNK_END 
merge already sorted files in the current directory starting with UNK_START _tmp UNK_END and write the output to UNK_START data.tsv.sorted UNK_END 
merge colon-separated information from file1 and file2 where first field of both files matches 
merge colon-separated information from file1 and file2 where second field of both files matches, sorting the result based on this field - for each line, output: first 3 fields of first file, followed by first 3 fields of second file. 
merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt 
merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from standard input, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt 
merge content of decompressed files "$part0", "$part1", and so on 
merge data in file1 and file2 where second field is common in both files 
merge each line in UNK_START file UNK_END into a single comma separated line 
merge each line of standard input into a single comma separated line 
merge each non-blank line of standard input into a single comma separated line 
merge file1 and file2 by outputting all lines where the first comma-separated field of both files matches, followed by extra fields in file1 and those in file2 
merge files UNK_START text.txt UNK_END and UNK_START codes.txt UNK_END by outputting any lines whose second field in the first matches the first field in the second. 
merge lines from UNK_START file_1 UNK_END and UNK_START file_2 UNK_END and format the output as a table with tab separators 
merge lines whose first comma-separated field in file UNK_START in1 UNK_END also appears as a first comma-separated in file UNK_START in2 UNK_END - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2. 
merge lines whose first comma-separated field in file UNK_START in1 UNK_END also appears as a first comma-separated in file UNK_START in2 UNK_END - both files must be sorted. 
merge the first UNK_START $lc UNK_END lines of UNK_START current.txt UNK_END and the last UNK_START $lc UNK_END lines of UNK_START current.txt UNK_END and display the result as a comma separated table 
modify interval to 0.1 seconds for the watch command 
monitor 3 specific process ids: 18884, 18892, and 18919 (gnu specific) 
mount UNK_START /dev/shm UNK_END using /etc/fstab entry 
mount UNK_START /path/to/device UNK_END on UNK_START /path/to/mount/location UNK_END as a loop back device 
mount UNK_START /path/to/device UNK_END on UNK_START /path/to/mount/location UNK_END as a vfat filesystem and a loop back device 
mount UNK_START /tmp/loop.img UNK_END on UNK_START /mnt/image UNK_END as a loop back device 
mount UNK_START /windows UNK_END using /etc/fstab entry 
mount UNK_START cpuset UNK_END filesystem on UNK_START /cpuset/ UNK_END 
mount UNK_START device_name UNK_END on UNK_START mount_point UNK_END 
mount UNK_START ext4 UNK_END filesystem UNK_START /dev/xvdf UNK_END on UNK_START /vol UNK_END 
mount UNK_START ext4 UNK_END filesystem UNK_START /dev/xvdf1 UNK_END on UNK_START /vol UNK_END 
mount UNK_START nifs UNK_END filesystem UNK_START /dev/mapper/myldm UNK_END on UNK_START /mnt UNK_END as read only 
mount UNK_START ntfs-3g UNK_END filesystem UNK_START /dev/mapper/myvolume UNK_END on UNK_START /media/volume UNK_END 
mount UNK_START proc UNK_END file system on UNK_START /var/snmp3/proc UNK_END 
mount UNK_START tmpfs UNK_END filesystem to UNK_START /path/to/dir UNK_END 
mount UNK_START vfat UNK_END filesystem UNK_START /dev/sda7 UNK_END to UNK_START /mnt/my_partition UNK_END with read and write permission, umask of files and directories set to "0000", and save in fstab and allow ordinary users to mount 
mount a partition in UNK_START $image UNK_END with offset UNK_START $offset UNK_END to UNK_START media/$dest UNK_END as read only using a loop device 
mount a read only ntfs filesystem 
mount all filesystems in /etc/fstab 
mount image UNK_START test UNK_END to loop device UNK_START /dev/loop0 UNK_END 
mount partition with label UNK_START white UNK_END on UNK_START /mnt/white UNK_END 
mount partition with label UNK_START white UNK_END on UNK_START /mnt/white UNK_END with read and write permission 
mount partition with label UNK_START white UNK_END on UNK_START /mnt/white UNK_END with read and write permission and have it accessible by user and group UNK_START test UNK_END 
mount remote UNK_START cifs UNK_END filesystem UNK_START //192.168.0.111/serv_share UNK_END on UNK_START /mnt/my_share UNK_END with username UNK_START me UNK_END and password UNK_START mine UNK_END 
mount remote UNK_START cifs UNK_END filesystem UNK_START //server/source/ UNK_END on UNK_START /mnt/source-tmp UNK_END with username UNK_START username UNK_END and password UNK_START password UNK_END 
mount remote UNK_START smbfs UNK_END filesystem UNK_START //username@server/share UNK_END on UNK_START /users/username/smb/share UNK_END as soft 
mount the UNK_START linprocfs UNK_END filesystem on UNK_START /proc UNK_END 
mount the UNK_START vboxsf UNK_END filesystem UNK_START d:\share_folder_vm UNK_END on UNK_START \share_folder UNK_END 
mount the UNK_START vboxsf UNK_END filesystem UNK_START myfilename UNK_END on UNK_START ~/destination UNK_END 
mount the directory UNK_START /etc UNK_END on UNK_START /tmp/sarnold/mount_point/ UNK_END 
move UNK_START $phantom_js UNK_END to UNK_START /usr/local/share UNK_END directory 
move UNK_START /usr/bin/openssl UNK_END to directory UNK_START /root/ UNK_END 
move UNK_START caniwrite UNK_END without clobbering into UNK_START /usr/local/bin UNK_END 
move UNK_START file.txt UNK_END to docker container UNK_START $container_id UNK_END in path UNK_START /var/lib/docker/devicemapper/mnt/$container_id/rootfs/root/file.txt UNK_END 
move UNK_START file.txt UNK_END to docker container UNK_START $countainer_id UNK_END in path UNK_START /var/lib/docker/aufs/mnt/$container_id/rootfs/root/file.txt UNK_END 
move "file1", "file2", UNK_START ... UNK_END to UNK_START target UNK_END directory 
move UNK_START phantomjs-1.8.1-linux-x86_64.tar.bz2 UNK_END to UNK_START /usr/local/share/ UNK_END directory 
move UNK_START tobecopied/tobeexclude UNK_END to UNK_START tobeexclude UNK_END 
move UNK_START tobecopied/tobeexcluded UNK_END to the current directory 
move *wp-admin/index.php files under /var/www/ to ./index_disabled 
move all *.data files/directories in $s directory to $s/data/ directory 
move all *.emlx files/directories under /path/to/folders/ to ./messages/ directory 
move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path 
move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path 
move all *.pdf.marker files and their corresponding *.pdf files under ${input} to ${output} 
move all *.php~ (case insensitive) files under current directory to /mydir 
move all *.php~ (case insensitive) files under current directory to /mydir 
move all emacs backup files from the current directory tree to ~/backups/ 
move all directories from the `sourcedir' directory tree to the `destdir' directory 
move all directories from the `sourcedir' directory tree to the `destdir' directory 
move all directories in the current directory that match UNK_START some-dir UNK_END to UNK_START x/ UNK_END 
move all directories in the current directory tree that have been modified in the last day to UNK_START /path/to/target-dir UNK_END 
move all directories in the current directory tree that have been modified in the last day to UNK_START /path/to/target-dir UNK_END 
move all directories in the current directory tree that have been modified in the last day to UNK_START /path/to/target-dir UNK_END 
move all files and directories in the current directory to UNK_START $target UNK_END excluding files matching UNK_START $exclude UNK_END 
move all files and directories in the current directory to UNK_START /foo UNK_END 
move all files and directories in the current directory to UNK_START /foo UNK_END 
move all files and directories in the current directory to UNK_START /tmp/blah/ UNK_END 
move all files and directories in the current directory to UNK_START somewhere/ UNK_END 
move all files and directories matching UNK_START *.boo UNK_END in the current directory to UNK_START subdir UNK_END 
move all files and directories not starting with UNK_START l UNK_END in UNK_START /mnt/usbdisk UNK_END to UNK_START /home/user/stuff/. UNK_END 
move all files excluding hidden files in UNK_START /path/subfolder/ UNK_END to UNK_START /path/ UNK_END 
move all files from UNK_START src/test/ UNK_END to UNK_START dest UNK_END displaying progress 
move all files from the `sourcedir' directory to the `destdir' directory 
move all files from the `sourcedir' directory to the `destdir' directory 
move all files from the `sourcedir' directory tree to the `destdir' directory 
move all files from the `sourcedir' directory tree to the `destdir' directory 
move all files in UNK_START /path/subfolder UNK_END to UNK_START /path UNK_END without clobbering any destination files 
move all files in the current directory tree that match UNK_START some_pattern UNK_END to UNK_START target_location UNK_END 
move all files including hidden files and excluding UNK_START .. UNK_END in UNK_START /path/subfolder/ UNK_END to UNK_START /path/ UNK_END 
move all files including hidden files in UNK_START /path/subfolder/ UNK_END to UNK_START /path/ UNK_END 
move all files listed in $i file to dir.$count directory 
move all files matching case insensitive UNK_START .cpp UNK_END in the current directory tree to UNK_START ./test/ UNK_END 
move all files matching patterns "*.old", ".old", UNK_START .*.old UNK_END from the current directory to directory UNK_START ../old/ UNK_END 
move all files not matching UNK_START tux.png UNK_END in UNK_START ~/linux/old UNK_END to UNK_START ~/linux/new/ UNK_END using zsh with UNK_START extended_glob UNK_END 
move all files that contain UNK_START subject: \[spam\] UNK_END to UNK_START dir UNK_END 
move all files that contain UNK_START subject: \[spam\] UNK_END to UNK_START dir UNK_END 
move all files/directories under current directory to destdir 
move all files/directories under current directory to ~/play 
move all files/directories under current directory to ~/play 
move all hidden files in UNK_START /path/subfolder/ UNK_END to UNK_START /path/ UNK_END 
move all hidden files in UNK_START wordpress UNK_END to the current directory 
move all regular files under current directory to ./newdir 
move all regular files under current directory to ./newdir 
move all the .c files from the current directory tree to temp/ 
move each of the UNK_START m? UNK_END directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named messages in this directory then move all *.emlx files into this directory 
move each of the UNK_START m? UNK_END directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named messages in this directory then move all *.emlx files into this directory 
move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named messages in this directory 
move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named messages in this directory then move all *.emlx files into this directory 
move files from $sourcepath to $destpath that have not been modified in the last 10 days 
move files older than 1 day to directory tmp 
move server.log to UNK_START logs UNK_END directory with new name as the current date formatted as UNK_START %y%m%d%h%m UNK_END and with UNK_START .log UNK_END extension 
move the directory named UNK_START some-dir UNK_END and residing under the current one to x/ 
moves file UNK_START $2 UNK_END to the folder where UNK_START $1 UNK_END file is located. 
moves the file that named like file $1 from UNK_START /tmp UNK_END folder to the folder where $2 file is located. 
non-recursively finds all UNK_START *.pdf UNK_END files in a current folder and removes them. 
non-recursively finds all UNK_START *.pdf UNK_END files in a current folder and removes them. 
number each line in UNK_START /etc/passwd UNK_END as right-justified zero padded to a width of 9 
number each line in UNK_START foobar UNK_END as right-justified zero padded to a width of 9 
number each non-blank line of standard input 
number every line of standard input as zero padded to 6 characters followed by UNK_START - UNK_END 
numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter. 
numerically sort ipv4 addresses specified on standard input with presedence to first, second, third, then fourth octet 
numerically sort each line in file UNK_START bb UNK_END and output the result to console from greatest value to least value 
numerically sort each line in file UNK_START out UNK_END and print the result to console 
numerically sort each line of standard input 
numerically sort file UNK_START file.dat UNK_END by the second word of each line and output from greatest value to least value 
numerically sort file UNK_START file.dat UNK_END by the second word of each line and output from greatest value to least value 
numerically sort file UNK_START files UNK_END by the second UNK_START - UNK_END separated value of each line ordered from least value to highest value 
numerically sort file UNK_START table UNK_END by the fourth character of the second field, ignoring leading spaces 
numerically sort file UNK_START temp.txt UNK_END by the second UNK_START - UNK_END separated value of each line ordered from highest value to least value 
numerically sort standard input by the second word of each line 
numerically sort standard input by the second word of each line and output from greatest value to least value 
on host "server_b", connect as ssh user UNK_START user UNK_END and copy UNK_START /my_folder/my_file.xml UNK_END to directory "/my_new_folder/", with all transfer data relayed through local host. 
on host "server_b", connect as ssh user UNK_START user UNK_END and copy UNK_START /my_folder/my_file.xml UNK_END to directory "/my_new_folder/". 
open a local ssh port on 1080 for application-level port forwarding 
open a session-less connection to UNK_START host UNK_END as user UNK_START user UNK_END in master mode with a socket UNK_START /tmp/%r@%h:%p UNK_END to enable connection sharing 
open a ssh connection to UNK_START user@host UNK_END with a control socket UNK_START /tmp/%r@%h:%p UNK_END 
open a ssh connection to user@host with x11 forwarding to run gui programs 
open gcc info manual and select UNK_START option index UNK_END menu entry. 
opens gawk info manual and goes to command-line options node. 
opens gcc info manual and goes to a node pointed by index entry "funroll-loops". 
opens gcc info manual and selects UNK_START option index UNK_END menu entry. 
opens menu item UNK_START basic shell features UNK_END -> UNK_START shell expansions UNK_END -> UNK_START filename expansion UNK_END -> UNK_START pattern matching UNK_END in the UNK_START bash UNK_END manual. 
output "file.txt", omitting all containing directories UNK_START some/unknown/amoutn/of/sub/folder/ UNK_END 
output "stuff", removing UNK_START /foo/bar/ UNK_END from the specified path. 
output UNK_START testfile.txt.1 UNK_END without the UNK_START .1 UNK_END suffix. 
output all lines in UNK_START file UNK_END comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates. 
output all lines in bigfile.csv whose secondn comma-separated second field matches first field of a line in littlefile.csv. 
output all lines that have a common first colon-separated field in files UNK_START selection2.txt UNK_END and UNK_START selection1.txt UNK_END by displaying the common (first) field of each line, followed by the extra fields in both lines. 
output only the filetype suffix of "foo.tar.gz", in this case UNK_START gz UNK_END 
output success.txt omitting lines whose first field appears in fail.txt - lines in fail.txt must appear in the same order as they do in success.txt. 
output the base name of first argument to script or function, that is the part following the last slash. 
output the file name "file.txt' from the path UNK_START some/unknown/amount/of/sub/folder/file.txt UNK_END 
output the last slash-separated component of specified path, in this case UNK_START data_report_pd_import_script_abf1_6 UNK_END 
output the specified path removing all containing directories and the .txt suffix, in this case "filename". 
output the string UNK_START yes UNK_END continously until killed 
output the system host name and date to the console 
output the variable UNK_START filename UNK_END without the last dot-separated section. 
output two lines of UNK_START -tcp UNK_END 
output two lines of UNK_START -tcp UNK_END 
overwirte file UNK_START /path/to/your/file UNK_END with random content, showing progress while execution. 
overwirte file UNK_START /path/to/your/file UNK_END with random content, then overwrite with zeroes, and remove, showing progress while execution. 
overwirte file UNK_START /path/to/your/file UNK_END with zeroes and remove, showing progress while execution. 
overwrite a file UNK_START my-existing-file UNK_END with random data to hide its content 
overwrites file $file with random content, then truncates and deletes it. 
overwrites file UNK_START filename UNK_END with random content 35 times, finally writes it with zeros, truncates and deletes. 
pair side-by-side content of the UNK_START file UNK_END and its side-mirrored content 
pass a wildcard to scp by escaping it: copy all files with names starting with UNK_START files UNK_END in directory UNK_START /location UNK_END on host UNK_START server UNK_END to current directory on local machine, displaying debug info and preserving timestamps and permissions on copied files. 
pass all the files from the current directory tree as arguments to a single UNK_START echo UNK_END command 
perform a case insensitive search for *.jpg files which are greater than 500kb in size under /ftp/dir/ directory 
perform a case insensitive search for *filename* files/directories under current directory tree 
perform a default plesk configuration 
perform a default cpanel configuration 
perform a dry run replacing UNK_START special UNK_END with UNK_START regular UNK_END in all file names in the current directory 
perform a dry run to recursively copy UNK_START test/a UNK_END to UNK_START test/dest UNK_END excluding UNK_START test/a/b/c/d UNK_END 
perform a white space safe search for all files/directories under current directory 
perform case insensitive search for *.gif files/directories under downloads directory 
perform case-insensitive search for file `test123.txt' on the system 
perform white space safe deletion of files named core under /tmp 
ping all hosts in file UNK_START ips UNK_END twice 
ping all hosts in file UNK_START ips UNK_END twice 
ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses 
ping the broadcast address UNK_START 10.10.0.255 UNK_END 
pipe 3 newlines to sshe-keygen, answering prompts automatically. 
pipe content of UNK_START somedata.txt UNK_END file to the input of command UNK_START $outfile UNK_END 
pipe the output of ls into UNK_START read var UNK_END in its separate process 
places current job to background. 
prefix all files and directories in the current directory with UNK_START unix_ UNK_END 
prefix all files and directories in the current directory with UNK_START unix_ UNK_END 
prefix all files and folders in the current directory with UNK_START pre_ UNK_END 
prefix all files and folders in the current directory with UNK_START pre_ UNK_END 
prefix each non-blank line in UNK_START filename UNK_END with a line number 
prepend date to ping output to google.com 
prepend the reverse history number to the output of the history command with arguments UNK_START $@ UNK_END 
prevent ssh from reading from standard input and execute UNK_START touch /home/user/file_name.txt UNK_END on UNK_START $r_host UNK_END as UNK_START $r_user UNK_END 
print UNK_START cannot acquire lock - already locked by UNK_END followed by content of $lockfile file 
print UNK_START #include UNK_END statements found in UNK_START file2 UNK_END that are not in UNK_START file1 UNK_END 
print UNK_START $1 UNK_END or default 10 random lines from standard input 
print UNK_START $line UNK_END in hexadecimal 2-byte units 
print UNK_START $somedir is empty UNK_END if $somedir is empty 
print UNK_START *checking partition permission* hostname=$(hostname) lastchecked= UNK_END followed by the current date 
print UNK_START /tmp/myfile UNK_END starting at line 11 
print UNK_START i am user and the program named ls is in ls_path UNK_END where UNK_START user UNK_END is the current user's user name and UNK_START ls_path UNK_END is the full path of the command UNK_START ls UNK_END 
print UNK_START rdbms exit code : $rc UNK_END to the console and append to UNK_START ${log_file} UNK_END 
print UNK_START this is a sentence. UNK_END by replacing all consecutive space characters with a single newline character 
print UNK_START total generated: UNK_END followed by the number of unique lines in UNK_START $generated_ports UNK_END 
print UNK_START a\nb\ncccccccccccc\nd UNK_END as two columns and neatly format into a table 
print UNK_START deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main UNK_END and append to file UNK_START /etc/apt/sources.list UNK_END 
print UNK_START deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main UNK_END and append to file UNK_START /etc/apt/sources.list UNK_END 
print UNK_START echo ping -c 2 UNK_END on each string in file UNK_START ips UNK_END 
print UNK_START echo ping -c 2 UNK_END on each string in file UNK_START ips UNK_END 
print UNK_START file1.txt UNK_END UNK_START file2.txt UNK_END and UNK_START file3.txt UNK_END with filename headers 
print UNK_START hello UNK_END followed by the current user name 
print UNK_START huge-file.log UNK_END starting at line 1000001 
print UNK_START huzzah UNK_END if directory UNK_START /some/dir UNK_END is empty 
print UNK_START new.txt UNK_END with line numbers prepended 
print UNK_START on UNK_END to standard output and to files matching UNK_START /sys/bus/usb/devices/usb*/power/level UNK_END 
print UNK_START test=hello world UNK_END 
print $d if $d is an empty directory 
print $d if $d is empty 
print '"http/1.1 200 ok', two new lines and the current date 
print UNK_START -exec is an action so an implicit -print is not applied UNK_END for every file/directory found by the name UNK_START file UNK_END under current directory tree 
print UNK_START -ok is an action so an implicit -print is not applied UNK_END with confirmation from the user for each file or directory found by the name UNK_START file UNK_END under current directory tree 
print UNK_START -okdir is an action so an implicit -print is not applied UNK_END for each file/directory found by the name UNK_START file UNK_END under current directory tree 
print UNK_START 111 22 3\n4 555 66\n UNK_END by replacing the spaces with tabs and UNK_START \n UNK_END with newlines 
print UNK_START since -printf is an action the implicit -print is not applied\n UNK_END for every file named UNK_START file UNK_END found under current directory tree 
print UNK_START this should print the filename twice if an implicit -print is applied: UNK_END appended with file paths for all files named UNK_START file UNK_END under current directory tree 
print UNK_START bla.txt UNK_END if at least one file with such name is present below the current directory. 
print UNK_START cp UNK_END commands that would copy a file xyz.c to all the files with UNK_START .c UNK_END extension present in the ./c directory and below 
print 'echo UNK_START hello, world UNK_END 
print UNK_START file UNK_END content, formatting output as 29-symbol wide column 
print UNK_START file UNK_END content, formatting output as 29-symbol wide column, regarding space symbol as a word separator 
print UNK_START file UNK_END file, splitting lines into pieces with no more that 3 words in each one. 
print UNK_START huzzah UNK_END if /some/dir/ is empty 
print UNK_START infile UNK_END content with line numbers 
print /some/dir/ if it's empty 
print 1 byte from UNK_START /dev/urandom UNK_END as a signed decimal value and no address radix 
print 1 to 10 by separating them with colon (':') 
print 10 UNK_START # UNK_END characters in a row 
print 10 lines of a single UNK_START x UNK_END 
print 1000 astarisk ('*') 
print 2 lines of UNK_START 123456789 UNK_END 
print 3 newline separated "y"s 
print 3 space separated UNK_START % UNK_END 
print 7 spaces in a row 
print a record for domain UNK_START domain. UNK_END from UNK_START ns1.newnameserver UNK_END nameserver 
print a record for domain UNK_START domain. UNK_END from UNK_START ns2.newnameserver UNK_END nameserver 
print a record for domain UNK_START domain. UNK_END from UNK_START some.other.ip.address UNK_END nameserver 
print a record for domain UNK_START domain. UNK_END from 8.8.8.8 nameserver 
print ip addresses of the current host 
print ip addresses of the host name 
print ip addresses of the host name 
print ip addresses of the host name 
print ip addresses of the host name 
print ns record for domain UNK_START domain. UNK_END from UNK_START some.other.ip.address UNK_END nameserver 
print ns record for domain UNK_START domain. UNK_END from 8.8.8.8 nameserver 
print txt record with server`s hostname from nameserver UNK_START server UNK_END 
print a 2 byte hexadecimal value, printable character, and octal value of UNK_START $1 UNK_END 
print a null-separated list of all directories of the current directory tree 
print a null-separated list of all hidden regular files from the home directory 
print a colon-separated list of all directories from the $root directory tree 
print a colon-separated list of all directories from the $root directory tree 
print a colon-separated list of all directories from the $root directory tree, except those matching pattern UNK_START .[a-z]* UNK_END 
print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them 
print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them 
print a count of all unique entries in UNK_START ips.txt UNK_END with the most frequent results at the top 
print a count of all unique lines in UNK_START ports.txt UNK_END sorted from most frequent to least frequent 
print a count of case insensitive duplicate filenames in the current directory 
print a count of duplicate lines in UNK_START filename UNK_END 
print a count of duplicate lines in UNK_START filename UNK_END sorted by most frequent 
print a count of each unique line from standard input 
print a count of each unique line from standard input sorted from least frequent to most frequent 
print a count of each unique line in UNK_START ip_addresses UNK_END 
print a count of each unique line in UNK_START ip_addresses.txt UNK_END sorted numerically 
print a count of files and directories in the current directory tree 
print a detailed list of all regular files from the current directory tree 
print a hex dump byte to byte of the output of UNK_START echo aa UNK_END 
print a hex dump of UNK_START $direc UNK_END as characters 
print a line of 10 UNK_START # UNK_END characters 
print a line of 100 random characters either UNK_START . UNK_END or UNK_START UNK_END 
print a line of 3 UNK_START % UNK_END characters 
print a line of 99 UNK_START = UNK_END characters 
print a list of jpg files residing in the current directory tree 
print a list of all *.code files from the current directory tree 
print a list of all duplicate case insensitive file paths in the current directory tree 
print a list of all files and directories in the /var/log directory tree 
print a list of all regular files residing in the current directory 
print a list of all the files in entire file system whose inode has been modified no later than one minute ago 
print a list of case insensitive duplicate filenames in the current directory 
print a list of differing files 
print a list of each file with the full path prefix in the current directory tree excluding symbolic links 
print a list of regular files from directory tree sort_test/ sorted with lc_collate=c 
print a list of regular files from directory tree sort_test/ sorted with lc_collate=en_us.utf-8 
print a list of regular files from directory tree sort_test/ sorted with lc_collate=en_us.utf8 
print a list of symbolic links reachable from the current directory that do not resolve to accessible files 
print a list of unique users who are logged in 
print a listing of the `other' directory 
print a listing of the `other' directory 
print a minimal set of differences between files in directories UNK_START a UNK_END and "b", ignore differences in whitespace, and print 0 lines of unified context 
print a minimal set of differences between files in directories UNK_START a UNK_END and "b", ignore the first 3 lines of output, and print any line starting with UNK_START - UNK_END with the first character removed 
print a minimal set of differences between files in directories UNK_START teste1 UNK_END and "teste2", treat absent files as empty, ignore differences in whitespace, treat all files as text, and print 3 lines of unified context 
print a random number from 2000 to 65000 
print a randomly sorted list of numbers from 1 to 10 to file UNK_START /tmp/lst UNK_END and outputs UNK_START ------- UNK_END followed by the reverse list to the screen 
print a randomly sorted list of numbers from 1 to 10 to file UNK_START /tmp/lst UNK_END and the screen followed by UNK_START ------- UNK_END 
print a sorted list of *.so files in the bla directory tree 
print a sorted list of all .jpg files in the current directory and below 
print a sorted list of directories from the ~/music tree containing files whose names begin with UNK_START cover. UNK_END 
print a sorted list of regular files from directory tree /folder/of/stuff 
print a sorted list of the extensions of the regular files from the current directory tree 
print a sorted list of the subdirectories of ~/music 
print a sorted list of unique directory paths in entire file system that match the pattern UNK_START <name_pattern> UNK_END in their names 
print a space separated list of numbers from 1 to 10 
print a space separated list of numbers from 1 to 10 with no trailing new line 
print a summary of the command-line usage of find 
print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables 
print a unique list of characters from standard input showing backslash escapes for non-displayables 
print a welcome message with the current user's user name 
print a welcome message with the current user's user name 
print a welcome message with the current user's user name 
print a welcome message with the current user's user name 
print absolute path of UNK_START path UNK_END 
print absolute path of UNK_START your_path UNK_END 
print absolute path of java executable 
print all UNK_START - UNK_END separated digits in file UNK_START infile UNK_END as dot ('.') separated digits 
print all business days in the current month without column titles 
print all directories under $root appending a : (colon) at the end of each path 
print all directories under $root appending a : (colon) at the end of each path without descending into directories matching the pattern .[a-z]* 
print all distinct characters in input UNK_START he likes cats, really? UNK_END 
print all file/directory names with white space safety under the /proc directory 
print all file/directory names without white space safety under the /proc directory 
print all filenames in /usr/src except for those that are of the form UNK_START *,v UNK_END or UNK_START .*,v UNK_END 
print all filenames under /proc and below 
print all filenames under /proc and below 
print all filenames under /proc and below 
print all files and directories in the `.' directory tree skipping sccs directories 
print all files and directories in the `.' directory tree skipping sccs directories but printing out the sccs directory name 
print all files containing UNK_START word1 UNK_END and UNK_START word2 UNK_END in the current directory tree 
print all files in the current directory as a comma separated list 
print all files in the current directory tree as a comma separated list 
print all files in the current directory tree as a comma separated list 
print all files on the system owned by group `name_of_group' 
print all files that exceed 1000 blocks and were modified at least a month ago 
print all files with a UNK_START - UNK_END after their name if they are regular files, and a UNK_START + UNK_END otherwise 
print all files/directories under ... directory by terminating their paths with a null character 
print all files/directories with their sizes under $whatever directory tree 
print all lines from file UNK_START report.txt UNK_END containing any-cased UNK_START error UNK_END pattern 
print all matching commands in $path for command UNK_START python UNK_END 
print all non-hidden files in the current directory and its subdirectories 
print all string from file UNK_START file2.txt UNK_END matching pattern in file UNK_START file1.txt UNK_END 
print all the file/directory paths under current directory 
print all unique strings in $1.tmp file. 
print all user names and terminals of users who are logged in 
print and delete all directories named UNK_START work UNK_END under UNK_START /usr/ports/ UNK_END directory tree 
print and recursively remove the alphabetically last directory in the current directory 
print and save the ping results of 25 requests to UNK_START google.com UNK_END in UNK_START /home/user/mylogfile.log UNK_END containing at most 100000 bytes 
print appended data in UNK_START /var/log/some.log UNK_END that match UNK_START foo UNK_END and UNK_START bar UNK_END 
print appended data in UNK_START /var/log/syslog UNK_END as the file grows 
print appended data in UNK_START file UNK_END that match UNK_START my_pattern UNK_END 
print argument UNK_START $1 UNK_END UNK_START $number UNK_END times 
print as many dots as there are files named UNK_START file.ext UNK_END in the /home/kibab directory tree 
print base name of the file name without all extensions. 
print calendar for february, march and april of year 2009 side-by-side 
print canonical filename of UNK_START /path/here/.. UNK_END 
print canonical filename of UNK_START /path/there/../../ UNK_END even if it does not exist 
print characters 2 through 4 of UNK_START abcdefg UNK_END 
print characters in variable UNK_START $a UNK_END that exist in variable UNK_START $b UNK_END 
print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o= 
print comma separated gaps in file UNK_START file UNK_END that contains new line separated ordered numbers 
print command history 
print command line of process with pid 17709 
print command with pid 11383 
print common files of directory UNK_START 1 UNK_END and UNK_START 2 UNK_END 
print common files of directory UNK_START one UNK_END and UNK_START two UNK_END 
print common lines in UNK_START file1 UNK_END and UNK_START file2 UNK_END 
print common lines in files UNK_START set1 UNK_END and UNK_START set2 UNK_END 
print common lines in sorted files UNK_START ignore.txt UNK_END and UNK_START input.txt UNK_END 
print common lines of files "file1", "file2", "file3", and UNK_START file4 UNK_END 
print concatenated content of all files ending with UNK_START .foo UNK_END under the current folder 
print content of UNK_START 1 UNK_END file 
print content of UNK_START a UNK_END file, showing all non-printing characters including tab characters, and displaying $ at the end of each line. 
print content of UNK_START domains.txt UNK_END with removed first one of dot-delimited fields 
print content of UNK_START file UNK_END file reverted characterwise 
print content of UNK_START filename UNK_END file, showing all non-printing characters and displaying $ at the end of each line. 
print content of UNK_START whatever UNK_END file 
print content of /etc/passwd and /etc/group files 
print content of all files ending with UNK_START *.foo UNK_END in current directory recursively 
print content of all files ending with UNK_START *.foo UNK_END under the current directory 
print content of all files found regarding seach options UNK_START [whatever] UNK_END 
print content of all files found regarding seach options UNK_START [whatever] UNK_END 
print content of all files found regarding seach options UNK_START [whatever] UNK_END 
print content of all files found regarding seach options UNK_START [whatever] UNK_END 
print content of each file under the current directory followed by that file name 
print contents of UNK_START file UNK_END as space separated hexadecimal bytes on a single line 
print continuous characters UNK_START / UNK_END and UNK_START \ UNK_END randomly from /dev/urandom 
print continuous lines of 100 random characters either UNK_START . UNK_END or UNK_START UNK_END 
print count of unique lines in all files like UNK_START list_part* UNK_END 
print current utc date in iso format with precision to seconds 
print current date as epoch seconds 
print current shell using process id 
print details for all files in the ./work directory tree with extension .sh that were modified less than 20 days ago 
print differences between files in directories folder1 and folder2 recursively, with unified context, ignoring changes in the amount of white space 
print differences between the sorted content of file $1 and file $2, executing UNK_START diff UNK_END with options from UNK_START ${@:3} UNK_END array slice 
print directories in the the current directory as a list with no report information 
print each character in UNK_START hello UNK_END as a hexadecimal value 
print each character in UNK_START orange UNK_END on a new line 
print each character of UNK_START abcdefg UNK_END on a line 
print each line in UNK_START f1 UNK_END and UNK_START f2 UNK_END separated by a space and UNK_START f3 UNK_END separated by a tab 
print each line in UNK_START file1 UNK_END whose first word does not exist as the first word of any line in UNK_START file2 UNK_END 
print each line in UNK_START file1.txt UNK_END that is not found in UNK_START file2.txt UNK_END 
print each line in UNK_START set1 UNK_END and UNK_START set2 UNK_END that does not exist in the other 
print each line in parallel in files UNK_START tmp/sample-xxx.tim UNK_END and UNK_START tmp/sample-xxx.log UNK_END 
print each line that is found only once in UNK_START file1 UNK_END and UNK_START file2 UNK_END combined 
print each logged in user's full name 
print each logged in user's username and full name 
print each unique line that is duplicated in files UNK_START file1 UNK_END and UNK_START file2 UNK_END combined 
print either UNK_START one UNK_END or UNK_START two UNK_END randomly three times 
print epoch seconds for given time string UNK_START oct 21 1973 UNK_END 
print equal lines in compressed files UNK_START number.txt UNK_END and UNK_START xxx.txt UNK_END 
print every 20 bytes of standard input as tab separated groups of bytes 1-3, 4-10, and 11-20 
print every 3 characters of standard input as a line 
print every file's type, name, and inode 
print every found file like UNK_START *.cfg UNK_END under UNK_START /path/to/files/ UNK_END directory followed by its content, and wait 2 seconds after each printed file 
print every three lines of UNK_START file UNK_END as a comma separated line 
print every two lines in UNK_START file UNK_END on a single line separated by a space 
print every two lines in UNK_START file UNK_END on a single line separated by a space 
print extended file information for regular files found under the home directory whose names start with my 
print file extension assuming there is only one dot in the file name. 
print file information of command UNK_START bash UNK_END 
print file information of command UNK_START passwd UNK_END 
print file information of command UNK_START studio UNK_END 
print file information of command UNK_START studio UNK_END 
print file information of the executable file of command UNK_START g++ UNK_END 
print file information of the executable file of command UNK_START gcc UNK_END 
print file name without extension assuming there is only one dot in the file name. 
print file name without the last two extensions assuming the file name doesn't contain any other dots. 
print file name without the last two extensions assuming the file name doesn't contain any other dots. 
print file names of all files ending with UNK_START *.csv UNK_END in UNK_START /home/abc/files/ UNK_END directory 
print file size and user name with color support for each file in the current directory tree 
print file size with the file name 
print file system disk space usage 
print file system disk space usage and grand total for the root file system with sizes in powers of 1000 
print file system disk space usage in 1 kib blocks of the current directory's file system 
print file system disk space usage in human readable format of the root filesystem 
print file system disk space usage in posix and human readable format, format as a table 
print file system disk space usage of the current directory's file system 
print file system disk space usage with a grand total 
print file system disk space usage with sizes in powers of 1000 
print file type information of the UNK_START java UNK_END executable 
print file type of command UNK_START gcc UNK_END 
print file type of the command UNK_START c++ UNK_END 
print file type of the executable file of command UNK_START file UNK_END 
print file type of the executable file of command UNK_START file UNK_END 
print file type of the executable file of command UNK_START foo UNK_END 
print file type of the executable file of command UNK_START python UNK_END 
print files created/modified in the last day 
print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line 
print first field from semicolon-seprated line $string. 
print first field from semicolon-seprated line <line>. 
print first word of lines unique for UNK_START file1 UNK_END file 
print flow of random data, showing all non-printing characters 
print fourth column of data from text file text.txt where columns separated by one or more whitespaces. 
print fourth column of space-separated data from text file text.txt. 
print full date of yesterday 
print full path of command UNK_START c++ UNK_END 
print full path of command UNK_START gradle UNK_END 
print full path of command UNK_START programname UNK_END 
print full path of command UNK_START python UNK_END 
print full path of command UNK_START python2.7 UNK_END 
print groups of all users logged in 
print help on UNK_START cat UNK_END command usage 
print host name followed by UNK_START : UNK_END and the contents of UNK_START /sys/block/sda/size UNK_END 
print host name without a newline 
print how many files are inside each directory under the current one 
print info about all mounted file systems 
print info about all mounted file systems, and grand total statistic about available and used space 
print info about thread number of process with pid 1 
print information about all users who are logged in 
print information of the process running the current script as the current user 
print information of the root mount point 
print input UNK_START your, text, here UNK_END formatted to fit 70 characters per line breaking at spaces 
print joined strings from 'file', using space symbol as separator. 
print last 10 commands in history 
print last 10 commands in history with the first 7 characters removed 
print last day of april, 2009 
print last four bytes of string UNK_START 0a.00.1 usb controller some text device 4dc9 UNK_END 
print line number of each line in /etc/passwd file, where current user name is found 
print line, word and byte count for each file recursively and also show the total counts 
print line, word and byte counts for each .php files in current directory tree and also show the total counts 
print lines 10000 to 10010 from input UNK_START seq 1 100000 UNK_END 
print lines 15967 to 16224 in file UNK_START dump.txt UNK_END 
print lines 16225 to 16482 in file UNK_START file UNK_END 
print lines 347340107 through 347340206 in UNK_START filename UNK_END 
print lines containing string text from all log files in the current directory. 
print lines in UNK_START file1 UNK_END that exist in UNK_START file2 UNK_END 
print lines in UNK_START file1.txt UNK_END that do not exist in UNK_START file2.txt UNK_END 
print lines in UNK_START foo.txt UNK_END that are found only once 
print lines in file UNK_START file UNK_END that do not match any word specified in file UNK_START blacklist UNK_END (one word per line) 
print lines in file UNK_START filename UNK_END that do not match the regex UNK_START pattern UNK_END 
print lines in the sorted contents of UNK_START a.txt UNK_END that are not in the sorted contents of UNK_START b.txt UNK_END 
print lines in the sorted contents of UNK_START file1 UNK_END that are not in the sorted contents of UNK_START file2 UNK_END 
print lines in the sorted contents of UNK_START file2 UNK_END that are not in the sorted contents of UNK_START file1 UNK_END 
print lines in the sorted contents of UNK_START second.txt UNK_END that are not in the sorted contents of UNK_START first.txt UNK_END 
print lines of UNK_START file UNK_END reverted order, and reverted characterwise 
print lines that only unique ones in UNK_START set1 UNK_END and UNK_START set2 UNK_END files 
print lines unique and common to sorted files UNK_START file1 UNK_END and UNK_START file2 UNK_END 
print linux group names on multiple lines instead of single line output 
print local srv record of domain UNK_START _etcd-client._tcp. UNK_END 
print local files without descending non-local directories 
print ls output for all non-empty files under under current directory 
print multiline text "onboot=\"yes\"\nipaddr=10.42.84.168\nprefix=24" to the terminal, replacing UNK_START \n UNK_END with newline symbol, and append that text to file /etc/sysconfig/network-scripts/ifcfg-eth4 as root user. 
print name of the file system containing $path. 
print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts 
print newline, word, and byte counts of each UNK_START *.java UNK_END file within current directory, and total newline, word, and byte counts 
print nothing because UNK_START myvar UNK_END string doesn`t match with UNK_START /[^/]+: UNK_END pattern 
print nothing because b.txt is compared with itself. 
print number of bytes in $file. 
print number of lines that equal in files UNK_START /home/xyz/a.csv1 UNK_END and UNK_START /home/abc/tempfile UNK_END 
print numbered list of all third-level files under the current directory 
print numbered list of all top-level files in the current directory, with name containing UNK_START android UNK_END 
print numbers 1 through 10 separated by UNK_START : UNK_END 
print numbers from 1 to 10 using up to 4 processes 
print numbers from 1 to 10 with 2 values per line 
print numbers from 1 to 10 with padded leading zeros 
print numbers from 1 to 100 
print numbers from 1 to 30 with 0 padding to a width of 2 
print numbers from 1 to 30 with a leading 0 
print numbers from 1 to 30 with equalized 0 padding 
print numbers from 1 to the number in variable UNK_START $1 UNK_END 
print numerically sorted list of unique strings from UNK_START ip_addresses UNK_END file, with number of occurrences of each string. 
print onlt last slash-separated field from $path value 
print only alphanumeric values from UNK_START /dev/urandom UNK_END 
print only common file names in sorted listings of directory UNK_START dir1 UNK_END and UNK_START dir2 UNK_END 
print only common strings in content of files UNK_START file1.sorted UNK_END and UNK_START file2.sorted UNK_END 
print only common strings in sorted content of files UNK_START file1 UNK_END and UNK_START file2 UNK_END 
print only digits in variable UNK_START $name UNK_END 
print only first line of UNK_START file UNK_END content, formatted as 29-symbol wide column 
print only first line of UNK_START file UNK_END content, formatted as 29-symbol wide column, regarding space symbol as a word separator 
print only group names from /etc/group. 
print only lines from UNK_START file1.txt UNK_END that not present in UNK_START file2.txt UNK_END and beginning with UNK_START q UNK_END 
print only printable characters from UNK_START /dev/urandom UNK_END 
print only second from the end field from slash-separated string in file UNK_START datafile UNK_END 
print only strings from file UNK_START file2 UNK_END that not found in UNK_START file1 UNK_END 
print only the line UNK_START foo/// UNK_END given two empty directories foo and bar 
print only the number of lines in file UNK_START $f UNK_END 
print only unique lines in files UNK_START set1 UNK_END and UNK_START set2 UNK_END 
print only unique lines of UNK_START file_name UNK_END file 
print out the contents of all *.txt files in the home directory 
print out the contents of all *.txt files in the home directory 
print out the full path name of UNK_START mypathname UNK_END with dots resolved 
print out the names and types of all files in the current directory tree 
print out the names of all directories in mydir recursively 
print output of script UNK_START trap.sh UNK_END 
print pathname of a file that is connected to the standard output of the command UNK_START yes UNK_END 
print pathnames of all files in the current directory and below skipping directories named sccs and files in them 
print pathnames of all files in the current directory and below skipping files under sccs directories 
print permissions of every directory in the current directory tree 
print process tree, adjusting output width with a screen size. 
print received input to the terminal 
print relative path of device of disk with uuid UNK_START b928a862-6b3c-45a8-82fe-8f1db2863be3 UNK_END 
print reverse lookup for ip address 72.51.34.34 
print reverse lookup for adress 127.0.0.1 
print revesed second from the end dot-bounded field in $i value 
print second field from semicolon-seprated line $string. 
print second field from semicolon-seprated line <line>. 
print second section of data coming from stdin where sections are separated by one or more whitespace. 
print second section of space-separated data coming from stdin. 
print second section of space-separated data coming from stdin. 
print second section of space-separated data from text file "a". 
print sed commands that would replace all occurrences of UNK_START previousword UNK_END with UNK_START newword UNK_END in all regular files with UNK_START .cpp UNK_END extension under UNK_START /myprojects UNK_END directory tree 
print short dns lookup for each domain name in a file UNK_START list UNK_END 
print short txt record of domain o-o.myaddr.l.google.com from nameserver 8.8.8.8 
print short txt record of domain o-o.myaddr.l.google.com from nameserver ns1.google.com 
print sorted list of strings from UNK_START ip_addresses UNK_END file, with number of occurrences of each string. 
print source directory of bash script 
print source of the file system containing $path. 
print space separated list of numbers from UNK_START $start UNK_END to UNK_START $end UNK_END 
print space separated list of numbers from UNK_START $start UNK_END to UNK_START $end UNK_END 
print space separated numbers from 1 to 10 
print standard input to standard output line by line, discarding any adjascent duplicate lines. 
print string UNK_START 123 UNK_END once with UNK_START 1 UNK_END replaced by UNK_START a UNK_END and second time replaced by UNK_START b UNK_END 
print summary of files present only in dir1. 
print summary of new/missing files, and which files differ between /path/to/folder1 and /path/to/folder2, sorted alphabetically. 
print summary of new/missing files, and which files differ between dir1 and dir2. 
print summary of new/missing files, and which files differ between dir1 and dir2. 
print summary of new/missing files, and which files differ between dir_one and dir_two, sorted alphabetically. 
print summary of new/missing files, and which files differ between folder1 and folder2, excluding those matching pattern "node_modules". 
print summary of new/missing files, and which files differ between folder1 and folder2. 
print symlink resolved script file name 
print the $n'th line from file by replacing commas (',') with newlines 
print the 5th space separated fields in UNK_START file UNK_END as a comma separated list 
print the ip addresses for the current host name 
print the ip addresses for the current host name 
print the ip addresses for the current host name 
print the ip addresses of the host name 
print the md5 message digest of UNK_START /path/to/destination/file UNK_END 
print the absolute path of UNK_START $path UNK_END 
print the absolute path of third-level files under the current directory tree and number the output 
print the average round trip time of 5 pings to UNK_START google.com UNK_END 
print the average round trip time of 5 pings to UNK_START google.com UNK_END from osx 
print the base name of the current working directory 
print the base name of the current working directory 
print the base name of the current working directory 
print the base name of the current working directory 
print the base name of the current working directory 
print the base name via grep of the current working directory 
print the basename from a colon separated path UNK_START a:b:c:d:e UNK_END 
print the byte count of all regular files found in the current directory tree 
print the calendar for february 1956 
print the characters in $b that match with any character in $a without printing any newline 
print the characters in $b that match with any character in $a without printing any whitespace in-between 
print the commands that would execute UNK_START myfile UNK_END on all .ogv files from the current directory tree 
print the compressed size, uncompressed size, compression ratio, and uncompressed filename of UNK_START file.zip UNK_END 
print the contents of UNK_START $file UNK_END starting from line 2 
print the contents of UNK_START ${spool_file} UNK_END file to the console and append to UNK_START ${log_file} UNK_END file 
print the contents of UNK_START little_commas.txt UNK_END 
print the contents of UNK_START file UNK_END in reverse order 
print the contents of UNK_START filename UNK_END 
print the contents of UNK_START foo.txt UNK_END starting with line 2 
print the contents of UNK_START my_script.py UNK_END 
print the contents of UNK_START n UNK_END 
print the contents of UNK_START numbers.txt UNK_END 
print the contents of UNK_START order.txt UNK_END 
print the contents of UNK_START xx.sh UNK_END 
print the contents of UNK_START ~/.ssh/config UNK_END 
print the current date followed by UNK_START : $line UNK_END 
print the current date followed by UNK_START doing stuff UNK_END 
print the current date in UNK_START %h:%m:%s UNK_END format followed by the string UNK_START : done waiting. both jobs terminated on their own or via timeout; resuming script UNK_END 
print the current default full path of the UNK_START java UNK_END executable 
print the current directory 
print the current directory 
print the current directory 
print the current directory tree 
print the current directory tree with file permissions 
print the current directory tree with file sizes 
print the current directory tree with the date of last modification for each file or directory 
print the current user's mail file in UNK_START /var/spool/mail UNK_END 
print the current working directory and the base name of UNK_START $1 UNK_END 
print the current working directory prepended by UNK_START pwd: UNK_END 
print the current working directory with resolved symbolic links 
print the current working directory without a trailing newline 
print the date followed by the host name 
print the date formatted with UNK_START %a %x %x UNK_END followed by the host name 
print the day 1 day ago 
print the day at 1 day ago in 2 months from now 
print the directories that are taken by the glob pattern $srvdir* 
print the directory name of the full real path to the current script 
print the directory name of the physical current working directory 
print the directory name of the real full path of UNK_START relative/path/to/file UNK_END where each symbolic link component must exist 
print the directory of the full path to the current script 
print the empty directories and files under current directory 
print the empty files/directories among empty1, empty2 and not_empty 
print the entire saved command history 
print the file content of command UNK_START [whatever] UNK_END 
print the file content of command UNK_START f UNK_END 
print the file content of command UNK_START f UNK_END 
print the file names along with their sizes under current directory tree 
print the file paths and their sizes for all files under full_path_to_your_directory 
print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree 
print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree 
print the file system UNK_START file/goes/here UNK_END is on 
print the file system disk space usage for UNK_START /dev/disk0s2 UNK_END if exists 
print the filenames taken by the glob pattern * with null character as the delimiter 
print the files in the current directory as a list of comma separated values 
print the files in the current directory as a list of semicolon separated values 
print the files in the current directory as a list of semicolon separated values 
print the files under current directory twice per line 
print the first 10 files or directories found in the /tmp directory tree by `find' 
print the first 10 files or directories found in the current directory tree by `find' 
print the first 2 lines of tree's help message by redirecting it from standard error to standard output 
print the first 24 alphanumeric characters from "/dev/urandom", determining c locale for all categories 
print the first 32 hexadecimal characters from UNK_START /dev/urandom UNK_END 
print the first 32 hexadecimal characters from "/dev/urandom", determining c locale for character handling functions 
print the first 5 decompressed lines of compressed file UNK_START $line UNK_END 
print the first line of UNK_START filename UNK_END as a hex dump of characters 
print the first line of UNK_START seq 1 10000 UNK_END 
print the first line of each file under the home directory 
print the first line of every file matching pattern UNK_START file?b UNK_END in the xargstest/ directory tree 
print the first line of output after alphabetically sorting the file UNK_START set UNK_END 
print the first two bytes of UNK_START my_driver UNK_END in octal 
print the full name of UNK_START $user UNK_END 
print the full path directory name of each UNK_START file.ext UNK_END found under the current directory 
print the full path of a UNK_START file.txt UNK_END file in the current folder. 
print the full path of a file under the current working directory with inode number specified on standard input 
print the full path of command UNK_START cc UNK_END 
print the full path of command UNK_START gcc UNK_END 
print the full path of command UNK_START rails UNK_END 
print the full path of executable UNK_START lshw UNK_END 
print the full path prefix for all files in the current directory tree as a list 
print the full real path of UNK_START /dev/disk/by-uuid/$1 UNK_END followed by UNK_START is mounted UNK_END 
print the full real path of UNK_START /dev/disk/by-uuid/$1 UNK_END followed by UNK_START is not mounted UNK_END 
print the given file name's extensions. 
print the grand total disk usage of all files listed in UNK_START files.txt UNK_END 
print the grand total file system disk space usage with block sizes in units of tib 
print the help message for tree 
print the help message of command UNK_START split UNK_END 
print the hexadecimal bytes and printable characters of UNK_START hello world UNK_END 
print the host name 
print the kernel configuration options found in UNK_START /proc/config.gz UNK_END 
print the largest 20 files under current directory 
print the largest 20 files under current directory 
print the last 10 commands in history 
print the last 10 commands in history 
print the last 10 commands in history 
print the last 10 lines of UNK_START great-big-file.log UNK_END 
print the last 10 lines of '/var/log/syslog', printing out any additional data appended to the file 
print the last 10 lines of the file UNK_START /var/log/syslog UNK_END 
print the last 1000 lines of all files matching UNK_START /var/spool/cron/* UNK_END 
print the last line of UNK_START $file1 UNK_END to the console and append to UNK_START $file2 UNK_END 
print the last line of the alphabetically sorted lines in file UNK_START set UNK_END 
print the last space separated word from UNK_START your string here UNK_END 
print the last space separated word from UNK_START a b c d e UNK_END 
print the line with most consecutive repeats prefixed with its count from standard input 
print the lines of file UNK_START strings UNK_END not specified in file UNK_START index UNK_END 
print the lines of file UNK_START strings UNK_END specified in file UNK_START index UNK_END 
print the list of .txt files under and below the current directory 
print the list of 1st level subdirectories in /fss/fin 
print the list of all directories in the /myfiles directory tree 
print the list of all directories under the current directory and below 
print the list of all files except files named bbb 
print the list of all files in the current directory except for svn, cvs, git, and binary files 
print the list of all files under the current directory and below 
print the list of all regular files from the current directory tree that contain "confirm", case insensitive 
print the list of all regular files in the current directory and below 
print the list of all regular files on the system using UNK_START echo UNK_END 
print the list of all regular files residing in the current directory and below 
print the list of all subdirectories of the current directory 
print the list of directories residing in the current directory tree 
print the list of directories that are present in the /mnt/raid directory tree 
print the list of files and directories of the /etc directory 
print the list of files and directories of the /etc directory 
print the list of files and directories of the /etc directory 
print the list of files and directories of the current directory 
print the list of files and directories of the current directory including UNK_START . UNK_END 
print the list of files changed within the last minute 
print the list of files from the UNK_START /zu/durchsuchender/ordner UNK_END directory tree whose names begin with UNK_START beispieldatei UNK_END and which contain string UNK_START beispielinhalt UNK_END 
print the list of files in directory /tmp/a1 recursively 
print the list of files in the current directory tree excluding those whose paths contain UNK_START exclude3 UNK_END or UNK_START exclude4 UNK_END 
print the list of files in the current directory tree ignoring .svn, .git, and other hidden directories 
print the list of files in the current directory tree skipping git files 
print the list of files in the current directory tree skipping svn files 
print the list of files in the current directory tree skipping svn files 
print the list of files in the current directory tree skipping svn files 
print the list of files in the current directory tree with UNK_START xx UNK_END preceding and following each filename 
print the list of files in the home directory tree whose names begin with UNK_START foto UNK_END 
print the list of non-hidden directories in the current directory 
print the list of regular files from the current directory that were last modified on november, 22 
print the list of regular files from the current directory tree that were modified less than 2 days ago 
print the list of regular files in the current directory and all subdirectories 
print the list of the current directory's subdirectories 
print the list of the current directory's subdirectories 
print the list of the current directory's subdirectories 
print the list of the subdirectories of /path/to/dir 
print the list of the subdirectories of the current directory 
print the most recently modified file 
print the most repeated line in UNK_START list2.txt UNK_END that exists in UNK_START list1.txt UNK_END prefixed by the number of occurrences 
print the name of UNK_START file1 UNK_END if this file is newer than UNK_START file2 UNK_END 
print the names and sizes of all regular files from the current directory tree 
print the names and sizes of regular files residing in the UNK_START dir UNK_END directory tree 
print the names of all files and directories in the current directory tree 
print the names of all files and directories in the current directory tree 
print the names of all files from the /tmp/dir1 directory tree 
print the names of all files in or below the current directory, with all of the file permission bits s_isuid, s_isgid, and s_iwoth set 
print the names of all files in the home directory and its subdirectories recursively whose mime type is video 
print the names of all hidden regular files from the current directory 
print the names of all regular files in the current directory tree 
print the names of all the files from directory tree ~/some/directory whose names end in UNK_START rb UNK_END 
print the names of any differing files in directories UNK_START dir1/ UNK_END and UNK_START dir2/ UNK_END 
print the names of the directories from the paths expanded by the glob pattern /path/to/directory/* 
print the names of the directories from the paths expanded by the glob pattern /path/to/directory/* 
print the names of the directories from the paths expanded by the glob pattern /path/to/directory/* 
print the names of the subdirectories of /usr/local/svn/repos/ prepending UNK_START /usr/local/backup UNK_END to them 
print the newest *.txt file under current directory with timestamp and path 
print the number of entries (files, directories, symlinks, etc.) in the subdirectories of the current directory, stopping search at any device mount points. 
print the number of lines for each *.txt file from the $dir directory tree 
print the number of lines in file.txt. 
print the number of regular files found in the current directory tree 
print the path composed of the current working directory and the directory containing UNK_START $0 UNK_END 
print the path names of all .png files in the /home/kibab directory tree 
print the path names of all files and directories in the current directory tree 
print the path names of all regular .rb files prefixing them with string UNK_START hello, UNK_END 
print the pathnames of all files from the /tmp/dir1 directory tree 
print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/* 
print the percentage of packets lost of the 5 packets sent to UNK_START $host UNK_END 
print the physical current working directory 
print the real path of UNK_START $f UNK_END where each symbolic link component must exist 
print the second line of output of UNK_START ls -l UNK_END 
print the second line of output of UNK_START ls -l UNK_END 
print the second space separated fields from standard input 
print the size for every *.ogg file found under the home directory 
print the sizes and names of all txt files from the current directory tree 
print the sizes of all files from the current directory tree 
print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories 
print the sorted uniqe list of folders in compressed archive nginx-1.0.0.tar.gz 
print the sorted unique column of usernames of users who are currently logged in 
print the sorted unique column of usernames of users who are currently logged in without the header 
print the terminal file of the users who are logged in with UNK_START admin UNK_END in their name 
print the text file paths that match UNK_START needle text UNK_END in their contents under UNK_START my_folder UNK_END recursively 
print the time of last boot 
print the type of the current shell 
print the unique lines from standard input preserving the order they appear 
print the user name of the current user 
print the user name of the current user 
print three lines of UNK_START some line UNK_END followed by a random number 
print timestamp as hh:mm:ss 
print true directory name of the current directory 
print unique lines in UNK_START file1 UNK_END compared to UNK_START file2 UNK_END in the order they appear 
print unique lines in UNK_START file_a UNK_END and UNK_START file_b UNK_END 
print unique lines in sorted UNK_START file1 UNK_END compared to sorted file UNK_START file2 UNK_END 
print unique lines in sorted file UNK_START a UNK_END when compared to sorted files "b", "c", and UNK_START d UNK_END 
print unique lines in sorted file UNK_START a.txt UNK_END compared to sorted file UNK_START b.txt UNK_END 
print unique lines of UNK_START a UNK_END and UNK_START b UNK_END 
print unique lines of UNK_START second-file-sorted.txt UNK_END compared to UNK_START first-file-sorted.txt UNK_END 
print unique lines of sorted UNK_START file 1 UNK_END compared with sorted UNK_START file 2 UNK_END 
print unique lines of sorted file UNK_START a.txt UNK_END compared to sorted file UNK_START b.txt UNK_END 
print unique lines of sorted file UNK_START a.txt UNK_END compared to sorted file UNK_START b.txt UNK_END 
print unique lines of sorted file UNK_START a UNK_END compared with sorted file UNK_START b UNK_END 
print unique lines of sorted file UNK_START b UNK_END compared with sorted file UNK_START a UNK_END 
print unique lines of sorted file UNK_START f1 UNK_END compared to sorted file UNK_START f2 UNK_END 
print unique lines of sorted file UNK_START file1 UNK_END when compared with the list of first space separated fields of all sorted strings of file UNK_START file2 UNK_END 
print unique lines of sorted file UNK_START second.txt UNK_END compared to sorted file UNK_START first.txt UNK_END 
print unique list of who is logged in and the time of login formatted in columns 
print variable UNK_START $optarg UNK_END UNK_START $opt UNK_END times 
print variable UNK_START $module UNK_END in formatted columns with at most 80 characters per line 
print variable UNK_START $opt UNK_END with double quotes deleted 
print what year it was 222 days ago 
print whether UNK_START $file UNK_END and UNK_START ${file/${dir1}/${dir2}} UNK_END differ 
print whether the sorted contents of UNK_START set1 UNK_END and UNK_START set2 UNK_END differ 
print whether the unique contents of UNK_START set1 UNK_END and UNK_START set2 UNK_END differ 
print which files differ between UNK_START dir1/ UNK_END and UNK_START dir2/ UNK_END 
print which files differ between UNK_START folder1 UNK_END and UNK_START folder2 UNK_END treating all files as text 
print which files differ between dir1 and dir2, treating absent files as empty 
print which files differ in UNK_START /tmp/dir1 UNK_END and UNK_START /tmp/dir2 UNK_END recursively 
print which files differ in UNK_START path1/ UNK_END and UNK_START path2/ UNK_END recursively excluding any files that match any pattern in UNK_START file1 UNK_END 
print which files differ in UNK_START dir1 UNK_END and UNK_START dir2 UNK_END recursively 
print which files differ in UNK_START dir1 UNK_END and UNK_START dir2 UNK_END recursively 
print which files differ in UNK_START dir1 UNK_END and UNK_START dir2 UNK_END recursively 
print which files differ in UNK_START dir_one UNK_END and UNK_START dir_two UNK_END recursively and sort the output 
print which files differ in UNK_START folder1 UNK_END and UNK_START folder2 UNK_END excluding UNK_START node_modules UNK_END recursively, output in two columns, and paginate the output 
print working directory separated by newlines instead of forward slashes 
print yesterday's date 
print yesterday's date as yyy:mm:dd 
print yesterday's date as yyy:mm:dd 
print yesterday's date information in UNK_START %a %d/%m/%y UNK_END format 
print your/dir if it's an empty directory 
print your/dir if it's empty 
print your/dir if it's empty 
prints UNK_START $newfile UNK_END to the terminal and file UNK_START /etc/timezone UNK_END as a root user. 
prints $m latest modified files within the $d folder, using $f format for printing timestamp. 
prints kb size of all top-level files and folders in a current folder in descending order in human readable format. 
prints kb size of all top-level files and folders in a current folder in descending order. 
prints a random line from $file 
prints a random number between 2000 and 65000 
prints all saturday days of a current month. 
prints all business days in a current month. 
prints calendar for a current month. 
prints calendar of february, 1900. 
prints calendars of july, 2009 and july, 2010 side-by-side. 
prints current directory name 
prints current month calendar, without highlighting of a current date. 
prints directory where the executing script ($0) is located. 
prints directory where the executing script ($0) is located. 
prints file.txt without the last n bytes 
prints first found folder that contains UNK_START ssh UNK_END file and has UNK_START bin UNK_END in path. 
prints folder path where $mystring file is located. 
prints folder where current script is located 
prints folder where current script is located 
prints full path of a UNK_START cat.wav UNK_END file in a current folder. 
prints full path to files in a current folder. 
prints full path to files in a current folder. 
prints full path to files with dot in name in a current folder. 
prints full process tree with id number of each process. 
prints groups list that current user belongs to. 
prints groups list that user UNK_START el UNK_END belongs to. 
prints help on UNK_START cp UNK_END utility. 
prints hierarchical process tree. 
prints information about active network interfaces in system. 
prints information about user $euids currently on machine and its processes, without printing header. 
prints last modified file in a current folder with modification time. 
prints last modified file in a current folder. 
prints latest modified file in a directory 
prints line count of each file within current directory. 
prints line count of each file within current directory. 
prints lines count in each *.c file of a current folder and total count. 
prints lines count of each *.php file in a current folder and subfolders, and prints total count. 
prints list of folders containing '.git', searching recursively from a current folder. 
prints listing of a root folder including hidden files, and saves output to 'output.file'. 
prints logged in users in sorted order. 
prints long listing of UNK_START $dir/$file UNK_END file. 
prints long listing of ${0} file. 
prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to UNK_START /root/test.out UNK_END file. 
prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to UNK_START /root/test.out UNK_END file. 
prints long listing of content in the current folder with c-style escapes for nongraphic characters 
prints long listing of directories UNK_START ./my dir UNK_END and UNK_START ./anotherdir UNK_END sorted from oldest to newest, with appended indicators. 
prints long listing of directories '/tmp', UNK_START /tnt UNK_END themselves. 
prints long listing of directory $var sorted from oldest to newest, with appended indicators. 
prints long listing of file 'file.ext'. 
prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators. 
prints long listing of the current directory, sorted from oldest to newest, with appended indicators. 
prints long listing of top ten most memory using processes in a system. 
prints long recursive listing of all content of a current folder, saving output to 'output.file'. 
prints long recursive listing of all content of a root folder, appending output to 'output.file'. 
prints long recursive listing of all content of a root folder, saving output to 'output.file'. 
prints message info about filename and location of the current script 
prints name of temporary file but doesn`t create nothing. 
prints newline, word, and byte count for each *.py in a current folder. 
prints number of files with extension UNK_START ${extension} UNK_END in the UNK_START ${searchpath} UNK_END directory. 
prints only first ten characters of each string of file $file. 
prints only unique strings of those stored in variables $commands and $aliases. 
prints out all the logged-in users along with their group information. 
prints path location of $bash_source file. 
prints path to folder that contains file "/path/to/vm.vmwarevm/vm.vmx". 
prints path to folder that contains file "/path/to/vm.vmwarevm/vm.vmx". 
prints path to folder that contains target of the symbolic link ../../../../etc/passwd. 
prints path to the folder that contains target of symbolic link ../../../../etc/passwd. 
prints path to the target of symbolic link UNK_START relative/path/to/file UNK_END 
prints process tree for the current process with ascii line drawing characters. 
prints process tree of a current process with id numbers and parent processes. 
prints process tree of a process having id $id with parent processes. 
prints process tree of the current command process. 
prints process tree of the current process with parent processes. 
prints process tree of user UNK_START user UNK_END processes. 
prints process tree with command line arguments and process id numbers. 
prints process tree with command line arguments of a process having id $pid. 
prints process tree, showing only strings with 'mdsimporte', and chopping output after ${width} characters. 
prints random line from file $file. 
prints real path of the folder containing $0 file. 
prints running process that has id UNK_START pid UNK_END with command line arguments. 
prints sequentially listing of a current folder and calendar of a current month. 
prints shell option UNK_START globstar UNK_END with indication of its status. 
prints sizes of all top-level folders in a current folder with human-readable format and descending order. 
prints sorted list of logged in users. 
prints string UNK_START 0 1 * * * /root/test.sh UNK_END to the terminal, and append it to file UNK_START /var/spool/cron/root UNK_END 
prints strings with mac address configuration of each network interface in system. 
prints strings with text UNK_START texthere UNK_END in all files recursively in a current folder. 
prints the nth line of output from UNK_START ls -1 UNK_END 
prints the absolute directory path of the current script preceded by the string UNK_START dirname/readlink: UNK_END 
prints the file path composed from the path where symlink target file is located, and name of the symbolic link itself. 
prints the first n bytes of file.txt 
prints top-ten biggest top-level folders within a UNK_START var UNK_END folder. 
prints total count of lines of all *.php files in a current folder and subfolders. 
prints total number of lines of all *.php files in a current folder and subfolders. 
prints what day it was 222 days ago 
prints what year it was 222 days ago 
prints year-month-date format for given time 
prints yesterday's date information 
process each file beginning with UNK_START file UNK_END in the current directory as an argument to UNK_START bash script.sh UNK_END 
processes all files recursively in /var/spool/cron/tabs folder and filters out all strings with '#'. 
prompt the user with a question UNK_START this is the question i want to ask? UNK_END and save UNK_START y UNK_END or UNK_START n UNK_END in variable UNK_START reply UNK_END in zsh 
prompt user to type a list of cron jobs directly at the terminal, then use these replacing previously existing cron jobs. 
put the absolute directory path to the current script to my_dir variable 
puts the job 1 in the background. 
query srv records for domain UNK_START _kerberos._udp.foo.com UNK_END 
query about which keys invoke the named function 
read 10 bytes from $0 and print them by replacing the set UNK_START \000-\377 UNK_END with UNK_START # UNK_END 
read a line from an interactive shell's standard input into variable UNK_START message UNK_END without backslash escapes and prompt $'please enter a message:\n' 
read a line from standard input 
read a line from standard input and save each word in the bash array variable UNK_START arr UNK_END 
read a line from standard input and save each word in the bash array variable UNK_START first UNK_END 
read a line from standard input and save received words sequentially in variables xpid xuserid xpriority xvirtual xresident xshared xstate xcpu xmem xtime xcommand 
read a line from standard input and save response in variable UNK_START varname UNK_END 
read a line from standard input in an interactive shell into variable UNK_START input UNK_END with prompt UNK_START do that? [y,n] UNK_END and suggestion UNK_START y UNK_END 
read a line from standard input in an interactive shell with prompt in variable UNK_START myprompt UNK_END interpreted as ps1 is interpreted 
read a line from standard input into the first argument ("$1") using an interactive shell with prompt UNK_START > UNK_END 
read a line from standard input into the variable UNK_START yn UNK_END using the first argument as the prompt ("$1 ") 
read a line from standard input into the variable UNK_START yn UNK_END with the prompt UNK_START do you wish to install this program? UNK_END 
read a line from standard input into variable UNK_START entered_password UNK_END without echoing the input 
read a line from standard input into variable UNK_START password UNK_END 
read a line from standard input into variable UNK_START reply UNK_END with prompt UNK_START $* UNK_END 
read a line from standard input into variable UNK_START reply UNK_END with prompt UNK_START $1 ([y]es or [n]o): UNK_END 
read a line from standard input into variable UNK_START reply UNK_END with prompt UNK_START > $line (press enter to continue) UNK_END 
read a line from standard input into variable UNK_START reply UNK_END with prompt UNK_START press [enter] key to release lock... UNK_END 
read a line from standard input into variable UNK_START sshpass UNK_END with prompt UNK_START password: UNK_END and without echoing the input 
read a line from standard input into variable UNK_START yesno UNK_END ignoring backslash escapes and using the prompt UNK_START $(echo $@) ? [y/n] UNK_END 
read a line from standard input into variable UNK_START a UNK_END without backslash escapes 
read a line from standard input into variable UNK_START ans UNK_END without backslash escapes 
read a line from standard input into variable UNK_START date UNK_END with prompt "bgc enter something", and storing typed backslash as backslash symbol 
read a line from standard input into variable UNK_START dir UNK_END 
read a line from standard input into variable UNK_START foobar UNK_END and suppress showing user input 
read a line from standard input into variable UNK_START i UNK_END with the prompt UNK_START again? y/n UNK_END 
read a line from standard input into variable UNK_START message UNK_END with escaped prompt UNK_START please enter a message: \n\b UNK_END 
read a line from standard input into variable UNK_START message UNK_END with escaped prompt UNK_START \nplease enter\na message: ' UNK_END 
read a line from standard input into variable UNK_START message UNK_END with prompt UNK_START please enter a message: UNK_END followed by a newline 
read a line from standard input into variable UNK_START message UNK_END with prompt UNK_START please enter a message: UNK_END followed by a newline 
read a line from standard input into variable UNK_START message UNK_END with the prompt UNK_START please enter a message: $cr UNK_END 
read a line from standard input into variable UNK_START password UNK_END without echoing the input 
read a line from standard input into variable UNK_START password UNK_END without echoing the input and using the prompt UNK_START password: UNK_END 
read a line from standard input into variable UNK_START prompt UNK_END with the prompt UNK_START are you sure you want to continue? <y/n> UNK_END 
read a line from standard input into variable UNK_START response UNK_END ignoring backslash escapes and using the prompt UNK_START ${1:-are you sure? [y/n]} UNK_END 
read a line from standard input into variable UNK_START response UNK_END ignoring backslash escapes and using the prompt UNK_START are you sure? [y/n] UNK_END 
read a line from standard input into variable UNK_START response UNK_END without backslash escapes using the prompt "about to delete all items from history that match \"$param\". are you sure? [y/n] " 
read a line from standard input into variable UNK_START text UNK_END with the prompt UNK_START enter here: UNK_END 
read a line from standard input with a timeout of 0.1 seconds and prompt UNK_START this will be sent to stderr UNK_END 
read a line from standard input with a timeout of 10 seconds 
read a line from standard input with prompt UNK_START <your friendly message here> : y/n/cancel UNK_END and save the response to variable UNK_START condition UNK_END 
read a line from standard input with prompt UNK_START are you alright? (y/n) UNK_END and save the response to variable UNK_START resp UNK_END 
read a line from standard input with prompt UNK_START are you sure you wish to continue? UNK_END 
read a line from standard input with prompt UNK_START are you sure? [y/n] UNK_END and save response in variable UNK_START response UNK_END 
read a line from standard input with prompt UNK_START continue (y/n)? UNK_END and save response in variable UNK_START cont UNK_END 
read a line from standard input with prompt UNK_START continue (y/n)? UNK_END and save response in variable UNK_START choice UNK_END 
read a line from standard input with prompt UNK_START enter your age:\n UNK_END 
read a line from standard input with prompt UNK_START enter your choice: UNK_END and save response to variable UNK_START choice UNK_END 
read a line from standard input with prompt "enter your choice: ", arrow keys enabled, and UNK_START yes UNK_END as the default input, and save the response to variable UNK_START choice UNK_END 
read a line from standard input with prompt UNK_START is this a good question (y/n)? UNK_END and save the response to variable UNK_START answer UNK_END 
read a line of standard input in an interactive shell 
read a line of standard input into variable UNK_START _command UNK_END with the prompt as the current working directory followed by UNK_START $ UNK_END 
read a line of standard input into variable UNK_START input_cmd UNK_END with prompt UNK_START command : UNK_END 
read a line of standard input with prompt UNK_START enter the path to the file: UNK_END and suggestion UNK_START /usr/local/etc/ UNK_END and save the response to variable UNK_START filepath UNK_END 
read a line of standard input with prompt UNK_START enter your choice: UNK_END in an interactive shell and save the response to variable UNK_START choice UNK_END 
read a line of standard input with prompt UNK_START my prompt: UNK_END and save it to variable UNK_START varname UNK_END 
read a single character from standard input and do not allow backslash to escape characters 
read a single character from standard input into variable UNK_START reply UNK_END ignoring backslash escapes and using the prompt UNK_START ${1:-continue?} [y/n]: UNK_END 
read a single character from standard input into variable UNK_START ans UNK_END 
read a single character from standard input into variable UNK_START doit UNK_END with prompt UNK_START do that? [y,n] UNK_END 
read a single character from standard input into variable UNK_START key UNK_END without backslash escapes and using an interactive shell with the prompt $'are you sure (y/n) : ' and default value $'y' 
read a single character from standard input into variable UNK_START key UNK_END without backslash escapes and using the prompt UNK_START press any key to continue... UNK_END 
read a single character from standard input into variable UNK_START key UNK_END without backslash escapes, with a timeout of 5 seconds, and with the prompt UNK_START press any key in the next five seconds... UNK_END 
read a single character from standard input into variable UNK_START runcommand UNK_END with the prompt UNK_START pick a letter to run a command [a, b, or c for more info] UNK_END 
read a single character from standard input with delimeter UNK_START UNK_END and no echo 
read a single character from standard input with prompt UNK_START are you sure? UNK_END 
read a single character from standard input with prompt UNK_START are you sure? (y/n) UNK_END 
read a single character from standard input with prompt UNK_START is this a good question (y/n)? UNK_END and timeout of 3 seconds and save the response to variable UNK_START answer UNK_END 
read a single character from standard input with prompt UNK_START is this a good question (y/n)? UNK_END and save the response to variable UNK_START answer UNK_END 
read a single line from standard input and save to variable UNK_START line UNK_END 
read hexadecimal bytes from device UNK_START /dev/midi1 UNK_END 
read line from file descriptor 4 and store received input in UNK_START line UNK_END variable 
read lookup requests from text file UNK_START 1.txt UNK_END and uses them to fetch txt records. 
read one character from standard input into variable UNK_START reply UNK_END 
read one character from standard input into variable UNK_START reply UNK_END 
read one character from standard input into variable UNK_START c UNK_END 
read standard input and replace any repeated characters except spaces with a single instance 
read standard input until a null character is found and save the result in variable UNK_START f2 UNK_END 
read standard input until a null character is found and save the result in variable UNK_START line UNK_END 
read standard input until a null character is found and save the result in variable UNK_START line UNK_END 
read the first 10 characters from standard input in an interactive shell into variable UNK_START var UNK_END 
read the first line of output from UNK_START du -s $i UNK_END into variable UNK_START k UNK_END in ksh 
read the history file $histfile and append the contents to the history list 
read the history file and append the contents to the history list 
read the raw input of UNK_START /dev/input/mice UNK_END as hexadecimal bytes with 3 bytes per line 
read two bytes from UNK_START /dev/urandom UNK_END and print them as an unsigned integer 
read yesterday's date with format UNK_START %a %d/%m/%y UNK_END into variable UNK_START dt UNK_END in a subshell 
receive input and print it to terminal 
receive input and print it to terminal preceeding with line number 
receive pattern to search for on the standard input and print only matching part of lines from file UNK_START f.html UNK_END 
records the number of occurences of UNK_START needle UNK_END in the array UNK_START haystack UNK_END into the variable UNK_START inarray UNK_END 
recursively add UNK_START .jpg UNK_END to all files in the current directory tree 
recursively add UNK_START .jpg UNK_END to all files without an extension in the directory tree UNK_START /path UNK_END 
recursively add read and directory access to all permissions of all files and directories 
recursively add read and execute permissions to all files and folders in UNK_START directory UNK_END 
recursively add user write permission to all files under UNK_START /path/to/git/repo/objects UNK_END 
recursively and forcibly removes $tmp folder with all content. 
recursively archive UNK_START test/a/ UNK_END to UNK_START test/dest UNK_END excluding UNK_START test/a/b/c/d UNK_END 
recursively change UNK_START /usr/local UNK_END owner to the current user and group to admin 
recursively change all permissions under UNK_START thedirectory/ UNK_END to 777(read,write,execute for all users) 
recursively change owner and group of UNK_START /usr/local/rvm/gems/ruby-2.0.0-p481/ UNK_END to the current user 
recursively change owner and group to UNK_START $jboss_as_user UNK_END of UNK_START $jboss_as_dir UNK_END 
recursively change owner and group to UNK_START $jboss_as_user UNK_END of UNK_START $jboss_as_dir/ UNK_END 
recursively change owner and group to UNK_START tomcat7 UNK_END of "webapps", "temp", "logs", "work", and UNK_START conf UNK_END 
recursively change owner of all files in UNK_START folder UNK_END to UNK_START user_name UNK_END 
recursively change owner to UNK_START $1 UNK_END and group to UNK_START httpd UNK_END of all files in the current directory 
recursively change owner to UNK_START amzadm UNK_END and group to UNK_START root UNK_END of all files in UNK_START /usr/lib/python2.6/site-packages/ UNK_END 
recursively change owner to UNK_START amzadm UNK_END and group to UNK_START root UNK_END of all files in UNK_START /usr/lib/python2.6/site-packages/awscli/ UNK_END 
recursively change owner to UNK_START tomcat6 UNK_END of "webapps", "temp", "logs", "work", and UNK_START conf UNK_END 
recursively change owner to UNK_START www-data UNK_END of "/var/www/.gnome2", "/var/www/.config", and UNK_START /var/www/.config/inkscape UNK_END 
recursively change ownership of UNK_START /usr/lib/node_modules/ UNK_END to the current user 
recursively change ownership of UNK_START /usr/local UNK_END to the current user 
recursively change ownership of UNK_START /usr/local/lib UNK_END to the current user 
recursively change ownership of UNK_START /usr/local/lib/node_modules UNK_END to the current user 
recursively change ownership of UNK_START ~/.npm UNK_END to the current user 
recursively change ownership of UNK_START ~/.npm UNK_END to the current user 
recursively change the group of all files in UNK_START /tmp/php_session UNK_END to UNK_START daemon UNK_END 
recursively change the group of all files in UNK_START /var/lib/php/session UNK_END to UNK_START lighttpd UNK_END 
recursively change the group ownership to UNK_START laravel UNK_END in UNK_START ./bootstrap/cache UNK_END 
recursively change the group ownership to UNK_START laravel UNK_END in UNK_START ./storage UNK_END 
recursively change the owner and group of UNK_START /home/el/svnworkspace UNK_END and UNK_START 775 UNK_END to UNK_START your_user_name UNK_END 
recursively change the owner and group of UNK_START /opt/antoniod/ UNK_END to UNK_START antoniod UNK_END 
recursively change the owner and group of UNK_START /var/antoniod-data/ UNK_END to UNK_START antoniod UNK_END 
recursively change the owner and group of UNK_START /workspace UNK_END and UNK_START 775 UNK_END to UNK_START your_user_name UNK_END 
recursively change the owner and group of UNK_START subdir1 UNK_END to UNK_START user1 UNK_END 
recursively change the owner and group of UNK_START subdir2 UNK_END to UNK_START user2 UNK_END 
recursively change the owner and group of UNK_START subdir3 UNK_END to UNK_START user3 UNK_END 
recursively change the owner and group of UNK_START ~/.ssh/ UNK_END to UNK_START dev_user UNK_END 
recursively change the owner and group of all files in UNK_START /your/directory/to/fuel/ UNK_END to UNK_START nginx UNK_END 
recursively change the owner and group of all files in UNK_START public_html UNK_END to UNK_START owner UNK_END 
recursively change the owner and group of all files in the current directory to UNK_START andrewr UNK_END 
recursively change the owner and group of all files in the current directory to UNK_START apache UNK_END 
recursively change the owner and group of all files in the current directory to UNK_START apache UNK_END 
recursively change the owner group of UNK_START /var/www UNK_END of to UNK_START www-data UNK_END 
recursively change the owner of all UNK_START *.txt UNK_END files under UNK_START /mydir UNK_END to UNK_START root UNK_END 
recursively change the owner of all files in UNK_START /home/test UNK_END to UNK_START test UNK_END 
recursively change the owner of all files in UNK_START /usr/local/lib/node_modules UNK_END to the current user 
recursively change the owner of all files in UNK_START testproject/ UNK_END to UNK_START ftpuser UNK_END 
recursively change the owner of all files in UNK_START upload_directory UNK_END to UNK_START nobody UNK_END 
recursively change the owner of all files in UNK_START ~/tmp UNK_END to UNK_START $user UNK_END 
recursively change the owner to UNK_START $user UNK_END and group to UNK_START $group UNK_END of UNK_START /var/lib/cassandra UNK_END 
recursively change the owner to UNK_START $user UNK_END and group to UNK_START $group UNK_END of UNK_START /var/log/cassandra UNK_END 
recursively change the owner to UNK_START ${jboss_user} UNK_END of UNK_START $jboss_log_dir UNK_END 
recursively change the owner to UNK_START ec2-user UNK_END and group to UNK_START apache UNK_END of all files in UNK_START /vol/html UNK_END 
recursively change the owner to UNK_START user UNK_END and group to UNK_START www-data UNK_END of UNK_START yourprojectfoldername UNK_END 
recursively change the ownership of all directories in the current directory excluding UNK_START foo UNK_END to UNK_START camsoft UNK_END 
recursively change the ownership of all files in UNK_START /users/xxx/library/developer/xcode/templates UNK_END to UNK_START xxx UNK_END 
recursively change the user and group of all files in UNK_START /var/cache/jenkins UNK_END to UNK_START root UNK_END 
recursively change the user and group of all files in UNK_START /var/lib/jenkins UNK_END to UNK_START root UNK_END 
recursively change the user and group of all files in UNK_START /var/log/jenkins UNK_END to UNK_START root UNK_END 
recursively changes group ownership of every file in UNK_START /var/tmp/jinfo UNK_END to 'www-data'. 
recursively changes group ownership of everything in UNK_START /home/secondacc/public_html/community/ UNK_END to 'fancyhomepage'. 
recursively changes group ownership of everything in UNK_START files UNK_END to 'apache_user'. 
recursively changes group ownership of everything in UNK_START files UNK_END to 'my_group'. 
recursively changes group ownership of everything in a UNK_START /home/user1/project/dev UNK_END folder to 'project_dev'. 
recursively changes group ownership of everything within UNK_START .git UNK_END to 'git'. 
recursively changes group ownership of everything within UNK_START /git/our_repos UNK_END to 'shared_group'. 
recursively changes group ownership of everything within a UNK_START /path/to/repo UNK_END to 'group'. 
recursively changes group ownership of everything within a current directory to 'repogroup'. 
recursively changes group ownership of everything within a current folder and having group UNK_START x_gname UNK_END to 'y_gname'. 
recursively changes group ownership of everything within a current folder to 'admin'. 
recursively changes group ownership of everything within current folder to 'git'. 
recursively changes group ownership of the $path_to_output_folder directory to $group group. 
recursively changes group ownership on every file in the ${wp_root}/wp-content directory to ${ws_group} group. 
recursively changes group ownership on everything in the UNK_START public_html UNK_END folder to UNK_START website UNK_END group. 
recursively compress every file in the current directory tree and keep the original file 
recursively compresses all files within $2 folder. 
recursively copies UNK_START $1 UNK_END to "$2". 
recursively copies "$appname.app", preserving symlinks as symlinks to the UNK_START payload UNK_END directory. 
recursively copies UNK_START $1 UNK_END directory to UNK_START $2 UNK_END directory. 
recursively copies UNK_START ../include/gtest UNK_END directory to '~/usr/gtest/include/'. 
recursively copies UNK_START srcfolder UNK_END to the UNK_START destfolder/ UNK_END 
recursively copies UNK_START include/gtest UNK_END to '/usr/include', preserving all attributes, and copying symlinks as symlinks, without following in source files. 
recursively copies UNK_START src UNK_END to UNK_START dest UNK_END preserving overwriting the existing files. 
recursively copies /mnt/usr/lib to the UNK_START /usr/ UNK_END directory, creating symbolic links on each file instead of real copying them. 
recursively copies all files in the current directory but ones that names match pattern UNK_START dirtoexclude|targetdir UNK_END to the UNK_START targetdir UNK_END directory, printing info message on each operation. 
recursively copies all files in the current directory but ones with UNK_START c UNK_END in name to the home directory. 
recursively copies everything from UNK_START /source/path/* UNK_END to the '/destination/path/', preserving from overwriting existing files, and printing info message on each operation. 
recursively copies everything from UNK_START /zzz/zzz/ UNK_END to the UNK_START /xxx/xxx UNK_END overwriting the existing files and answering UNK_START yes UNK_END on each request for overwriting. 
recursively copies everything under the UNK_START current UNK_END folder to the UNK_START .hiddendir UNK_END folder. 
recursively copy UNK_START /path/to/data/myappdata/*.txt UNK_END to UNK_START user@host:/remote/path/to/data/myappdata/ UNK_END 
recursively copy UNK_START dir_a UNK_END to UNK_START dir_b UNK_END and delete any new files in UNK_START dir_b UNK_END 
recursively copy UNK_START dir_b UNK_END to UNK_START dir_a UNK_END and delete any new files in UNK_START dir_a UNK_END 
recursively copy UNK_START emptydir UNK_END to UNK_START destination/newdir UNK_END 
recursively copy UNK_START old/ UNK_END to UNK_START new/ UNK_END as a dry run skipping files that have matching checksums and output the name only 
recursively copy UNK_START original_dir UNK_END to UNK_START copy_dir UNK_END preserving file/dir timestamps, displaying progress, and skipping files which match in size, keeps partially transferred files. 
recursively copy "source", "dir", and UNK_START target UNK_END to UNK_START dir UNK_END as a dry run 
recursively copy /path/foo on host UNK_START prod UNK_END to local directory "/home/user/desktop", connecting as ssh username corresponding to local username. 
recursively copy /path/to/foo on host UNK_START your.server.example.com UNK_END to local directory "/home/user/desktop", connecting as ssh username "user". 
recursively copy all UNK_START .txt UNK_END files to UNK_START user@remote.machine:/tmp/newdir/ UNK_END 
recursively copy all (non-hidden) files and directories in current dir except UNK_START foo UNK_END to location specified by variable UNK_START other UNK_END 
recursively copy all directories in UNK_START /path/to/source UNK_END to UNK_START /path/to/dest/ UNK_END preserving directory hierarchy 
recursively copy all files and directories in UNK_START demo UNK_END excluding UNK_START .git UNK_END to UNK_START demo_bkp UNK_END 
recursively copy all files and directories matching UNK_START *ela*l1*te* UNK_END in localhost's directory /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/ to /var/www/html/sbo/2010/teacher/ela/level1 on localhost connecting as ssh user "dalvarado", in batch mode (no prompt for passwords) preserving file permissions and timestamps, and without displaying progress information. 
recursively copy all files and folders in the current directory excluding UNK_START exclude_pattern UNK_END to UNK_START /to/where/ UNK_END 
recursively copy all files matching UNK_START *.sh UNK_END in UNK_START $from UNK_END to UNK_START root@$host:/home/tmp/ UNK_END compressing data during transmission 
recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1 
recursively copy all regular files below current directory to directory /tmp on hostname, connecting as ssh user matching current username on local host. 
recursively copy directories UNK_START a UNK_END and UNK_START d UNK_END to directory UNK_START /path/to/target/directory UNK_END on host "anotherhost", connecting as ssh user matching current user on local host, via default tcp port for ssh (22). 
recursively copy directory UNK_START /path/to/data/myappdata UNK_END to UNK_START user@host:/remote/path/to/data/myappdata UNK_END 
recursively copy directory UNK_START /path/to/data/myappdata UNK_END to UNK_START user@host:/remote/path/to/data/newdirname UNK_END 
recursively copy directory or file /something on host UNK_START myserver UNK_END to current directory on local host, connecting as ssh user matching username on local host. 
recursively copy everything in /source/path whose name doesn't begin with a period, to /destination/path, without overwriting existing files, and outputting a line for each file copied or skipped. 
recursively copy local file/directory UNK_START /copy/from/path UNK_END to remote location UNK_START /copy/to/path UNK_END on host "server", connecting as ssh user UNK_START user UNK_END and using identity key file UNK_START /path/to/your/.pemkey UNK_END instead of the default in ~/.ssh/ 
recursively delete all files/folders named UNK_START .svn UNK_END in a current folder. 
recursively find all files ending with UNK_START *.txt UNK_END and print they names and content 
recursively find all files in the directory UNK_START posns UNK_END and split each one into files of at most 10000 lines each 
recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to "compressedp.list", and compress no more than 10 at a time 
recursively find strings in all files under current directory, that matching with comma-separated patterns list in file UNK_START searches-txt UNK_END 
recursively find the latest modified UNK_START zip UNK_END file in the current directory 
recursively find the latest modified file in the current directory 
recursively find the latest modified file in the current directory 
recursively find the latest modified file in the current directory 
recursively find the latest modified file in the current directory and print the modification time and filename 
recursively finds UNK_START pattern UNK_END in files from current folder, and prints matched string with number only if matching whole word. 
recursively finds all UNK_START *.pas UNK_END and UNK_START *.dfm UNK_END files and prints strings with UNK_START searchtext UNK_END ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number. 
recursively finds all UNK_START file_pattern_name UNK_END files and folders and prints strings with "pattern", searching through found folders recursively. 
recursively finds all UNK_START *.pdf UNK_END files and folders in a current folder and removes them without prompting. 
recursively finds all UNK_START *.pdf UNK_END files in a current folder and removes them without prompting. 
recursively finds all UNK_START *.pdf UNK_END files in a current folder and removes them. 
recursively finds all UNK_START *.pdf UNK_END files in a current folder and removes them. 
recursively finds all UNK_START *.pdf UNK_END files in a current folder and removes them. 
recursively finds all UNK_START *.png UNK_END files older than 50 days in a current folder and removes them. 
recursively finds all UNK_START status.txt UNK_END files containing text UNK_START open UNK_END and prints containing folder of them. 
recursively finds all UNK_START status.txt UNK_END files containing text UNK_START open UNK_END and prints containing folder of them. 
recursively finds all *.dbf files from the root folder and prints list of folders with such files. 
recursively finds all *.txt files and prints strings with UNK_START text_pattern UNK_END ignoring text distincts. 
recursively finds all bzip2 compressed files in a current folder and decompresses them. 
recursively finds all files and prints all strings with UNK_START text-to-find-here UNK_END from that files, preceding matched string with filename. 
recursively finds all files and prints all strings with UNK_START text-to-find-here UNK_END from that files. 
recursively finds all files and prints only names of files that contain UNK_START word UNK_END and suppressing error messages . 
recursively finds all files in a current folder excluding already compressed files and compresses them with level 9. 
recursively finds all files in root folder and prints all strings with UNK_START text-to-find-here UNK_END from that files, ignoring binary files. 
recursively finds all files in root folder and prints all strings with UNK_START text-to-find-here UNK_END from that files, preceding matched string with filename. 
recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them. 
recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time. 
recursively finds all files with any cased text UNK_START text UNK_END in a current folder, and precedes found string with its number in file. 
recursively finds all files with whole word UNK_START pattern UNK_END in a current folder, and precedes found string with its number in file. 
recursively finds all folders in a current folder that contain files like '.git'. 
recursively finds and compresses all files in a current folder with 4 parallel processes. 
recursively finds and compresses all files in a current folder. 
recursively finds and compresses all files in the directory UNK_START /path/to/dir UNK_END 
recursively finds file some_file_name.xml file and prints strings with UNK_START put_your_string_here UNK_END preceding each found string with file name. 
recursively finds files like '*.js', and filters out files with UNK_START excludeddir UNK_END in path. 
recursively finds files like 'example.com', ignoring case differences, and filters out files with UNK_START beta UNK_END in path. 
recursively finds in all folders but UNK_START ./output/* UNK_END all files but *.o, *.swp and prints strings with UNK_START soc_attach UNK_END text pattern and number of matched string. 
recursively finds string UNK_START class foo UNK_END in all *.c files from current folder. 
recursively finds string with text UNK_START foo UNK_END in all files of a current folder. 
recursively finds strings like UNK_START texthere UNK_END in all UNK_START *.txt UNK_END files of a current folder. 
recursively findsfiles with text pattern in current folder, ingnoring case differences, prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files. 
recursively from current folder searches only files that names match UNK_START .*xxx UNK_END pattern, ignores binary files and prints file name before every string that contains "my text to grep". 
recursively list contents of the current directory in a tree-like format 
recursively lists all *.py and *.html files in a current folder. 
recursively lists all files in a current folder in long format, sorting by modification time. 
recursively lists all files in a current folder in long format. 
recursively move all files in UNK_START /path/to/srcdir UNK_END to UNK_START dest/ UNK_END 
recursively print all directories in the current directory tree 
recursively print all files and directories in the current directory tree 
recursively print all files and directories in the current directory tree including hidden files 
recursively print all files and directories in the directory tree UNK_START $absolute/path/of/your/dir UNK_END 
recursively prints .txt files in current directory 
recursively prints all files in a current folders, and searches UNK_START stringyouwannafind UNK_END in file content ignoring case differences, and preceding found string with its number in file. 
recursively prints all folders in a current folder that contain files like "*.class". 
recursively prints paths to all text file in folder (ignores binary files). 
recursively remove all UNK_START *.txt UNK_END files and answer UNK_START n UNK_END to any prompt 
recursively remove all UNK_START *.txt UNK_END files and answer UNK_START y UNK_END to any prompt 
recursively removes $tmpdir folder, prompting user on each deletion. 
recursively removes UNK_START classes UNK_END folder, prompting user on each deletion. 
recursively removes all empty folders from the x folder. 
recursively removes all empty folders under current folder. 
recursively removes all empty folders under current folder. 
recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty. 
recursively removes all files and folders like UNK_START file-to-find UNK_END from current folder. 
recursively removes all files and folders like UNK_START file-to-find UNK_END from current folder. 
recursively removes all files and folders named UNK_START .svn UNK_END in a current folder, handling content of removed folder before folder inself. 
recursively removes all files and folders named UNK_START .svn UNK_END in a current folder. 
recursively removes all files and folders named UNK_START .svn UNK_END in a current folder. 
recursively removes all files and folders named UNK_START .svn UNK_END in a current folder. 
recursively removes all files and folders named UNK_START .svn UNK_END in a current folder. 
recursively removes all files and folders that match pattern UNK_START /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm* UNK_END 
recursively removes all files in a UNK_START path UNK_END folder but UNK_START expr UNK_END files. 
recursively removes all files in a current folder but UNK_START *txt UNK_END files. 
recursively removes all files like UNK_START (__pycache__|\.pyc|\.pyo$) UNK_END in a current folder. 
recursively removes all files like UNK_START *.pyc UNK_END in a current folder, printing info message about each action. 
recursively removes all files like UNK_START *.pyc UNK_END in a current folder. 
recursively removes all files like UNK_START *.pyc UNK_END in a current folder. 
recursively removes all files like UNK_START *.pyc UNK_END in a current folder. 
recursively removes all files like UNK_START *.pyc UNK_END in a current folder. 
recursively removes all files like UNK_START *.pyc UNK_END in a current folder. 
recursively removes all files like UNK_START *.pyc UNK_END of UNK_START *.pyo UNK_END in a current folder without prompting. 
recursively removes all files like UNK_START *.r* UNK_END in current folder and removes folders with such files if they become empty. 
recursively removes all files like UNK_START *.xyz UNK_END in a current folder. 
recursively removes all files like UNK_START .ds_store UNK_END from current folder. 
recursively removes all files like UNK_START ._* UNK_END from current folder. 
recursively removes all files like UNK_START 4 UNK_END under folder UNK_START ./a UNK_END and removes folders with such files if they become empty. 
recursively removes all files like UNK_START _* UNK_END and UNK_START .ds_store UNK_END from /var/www/html/ folder. 
recursively removes all files like any-cased UNK_START *.pyc UNK_END in a current folder. 
recursively removes all files named UNK_START .svn UNK_END in a current folder, and prints messages on each action. 
recursively removes all files with name like UNK_START *.war UNK_END in /home/ubuntu/wars folder. 
recursively removes all folders named UNK_START .svn UNK_END in a current folder. 
recursively rename all files under /your/target/path replacing UNK_START special UNK_END with UNK_START regular UNK_END - all file/diretory names may not include spaces, and directory names containing such files may not contain the word UNK_START special UNK_END in their name. 
recursively search current directory for all files with name ending with ".t1", change this to .t2 
recursively search for UNK_START string here UNK_END and write the output to the console followed by the number of matched lines 
recursively search for all directories containing UNK_START foo UNK_END (case insensitive) under the current directory, renaming them to replace UNK_START foo UNK_END (case insensitive) with UNK_START bar UNK_END 
recursively search for all files not ending in UNK_START .xml UNK_END under the current directory, append UNK_START .xml UNK_END to the end of each file name 
recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 1000000 characters per command. 
recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 4 concurrent processes. 
recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb". 
recursively search for all regular files below directory UNK_START dir1 UNK_END in currentd directory, and output the name of each, without any containing directories. 
recursively search for everything under the current directory, displaying human-readable file type description for each entry. 
recursively search through directory UNK_START test UNK_END in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory. 
recursively set all permissions under UNK_START ../tools UNK_END to 777 
recursively set all permissions under UNK_START /directory UNK_END to 755 
recursively set all permissions under UNK_START /folder UNK_END to 755 
recursively set all permissions under UNK_START /opt/lampp/htdocs UNK_END to 755 
recursively set all permissions under UNK_START /whatever/your/directory/is UNK_END to 755 
recursively unzip files to stdout in UNK_START /some/dir/here UNK_END and search for UNK_START blah UNK_END 
reformat date UNK_START sat aug 09 13:37:14 2014 +1100 UNK_END according to format string UNK_START %a %b %d %h:%m:%s %y %z UNK_END 
remount UNK_START / UNK_END with read and write permission 
remount UNK_START / UNK_END without writing in UNK_START /etc/mtab UNK_END 
remount UNK_START /dev/block/mtdblock3 UNK_END on UNK_START /system UNK_END with read and write permission 
remount UNK_START /dev/block/mtdblock3 UNK_END on UNK_START /system UNK_END with read only permission 
remount UNK_START /dev/sda7 UNK_END partition as executable 
remount UNK_START /dev/shm UNK_END with a maximum size of UNK_START 40g UNK_END 
remount UNK_START /dev/stl12 UNK_END on UNK_START /system UNK_END as read and write 
remount UNK_START /dev/stl12 UNK_END on UNK_START /system UNK_END as read only 
remount UNK_START /home/evgeny UNK_END with the UNK_START suid UNK_END flag set 
remount UNK_START /media/working/ UNK_END with a umask of 000 
remount UNK_START /mnt/mountpoint UNK_END as read only 
remount UNK_START /mnt/mountpoint UNK_END with read and write permission 
remount UNK_START /path/to/chroot/jail/usr/bin UNK_END as read only 
remount UNK_START /system UNK_END as read only 
remount UNK_START /system UNK_END with read and write permission 
remount UNK_START /system UNK_END with read and write permission 
remount UNK_START /system UNK_END with read only permission 
remount UNK_START extx UNK_END filesystem UNK_START /dev/hdax UNK_END on UNK_START / UNK_END without writing in UNK_START /etc/mtab UNK_END 
remount UNK_START rfs UNK_END filesystem UNK_START /dev/stl12 UNK_END on UNK_START /system UNK_END with read and write permission 
remount UNK_START yaffs2 UNK_END filesystem UNK_START /dev/block/mtdblk4 UNK_END to UNK_START /system UNK_END as read and write only 
remount UNK_START yaffs2 UNK_END filesystem UNK_START /dev/block/mtdblk4 UNK_END to UNK_START /system UNK_END as read only 
remount root filesystem UNK_START / UNK_END 
remount subtree UNK_START /outside UNK_END to UNK_START /inside UNK_END as a bind 
remount the root file system with read and write permission 
remove UNK_START \n UNK_END from UNK_START test1\ntest2\ntest3 UNK_END and search for UNK_START test1.*test3 UNK_END 
remove UNK_START _dbg UNK_END from all file or directory names under the current directory 
remove esc key bind 
remove mac os x desktop services store files 
remove `core' files whose status was changed more than 4 days ago 
remove adjascent duplicate lines from file UNK_START input UNK_END comparing all but last space-separated fields 
remove all UNK_START cvs UNK_END directories from the current directory tree, ignoring the case 
remove all UNK_START core UNK_END files that were last changed more than 4 days ago from the current directory tree 
remove all UNK_START core UNK_END regular files in the /tmp/ directory tree 
remove all UNK_START work UNK_END directories residing in /usr/ports and below 
remove all 'a.out', '*.o', and UNK_START core UNK_END files in the current directory tree 
remove all *.bak and *.backup files that were accessed last time more than 30 days ago 
remove all *.bak files under current directory 
remove all *.doc files from the current directory tree 
remove all *.log files from the current directory tree 
remove all *.log files from the current directory tree 
remove all *.log files from the current directory tree 
remove all *.mp3 files in tmp directory but not in it's subdirectories 
remove all *.mp3 files in tmp directory but not in it's subdirectories 
remove all *.mp3 files in tmp directory but not in it's subdirectories 
remove all *.mp3 files in tmp directory but not in it's subdirectories 
remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago 
remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago 
remove all *.swp files under current directory 
remove all *.swp files under current directory ensuring white space safety 
remove all *.swp files/directories under current directory 
remove all *.tmp files from the /tmp directory tree 
remove all *.tmp files from the /tmp directory tree 
remove all *.txt files in the home directory tree with confirmation 
remove all *.txt files under the given directory modified more than 5 minutes ago 
remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago 
remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago 
remove all *bak files under current directory with confirmation prompt 
remove all *~ files under current directory with confirmation prompt 
remove all .gz files in the current directory tree 
remove all .mpg files in the /home/luser directory tree 
remove all .mpg files in the /home/luser directory tree 
remove all .mpg files in the /home/luser directory tree 
remove all .mpg files in the /home/luser directory tree 
remove all .php files in the /var/www/ directory 
remove all .sh files in the current directory tree whose names begin with UNK_START new UNK_END 
remove all .sh files in the current directory tree whose names begin with UNK_START new UNK_END 
remove all .sh files in the current directory tree whose names begin with UNK_START t UNK_END 
remove all .tmp files in and below /tmp 
remove all .tmp files in and below /tmp 
remove all .txt files from the /full/path/dir directory tree 
remove all .txt files from the /full/path/dir directory tree 
remove all .txt files in and below the current directory 
remove all .txt files in and below the current directory 
remove all .txt files in and below the current directory 
remove all .txt files in and below the current directory 
remove all .txt files in and below the current directory 
remove all .txt files with spaces in names in and below the current directory 
remove all cvs directories from the current directory tree 
remove all cvs directories in the current directory tree 
remove all thumbs.db files from the current directory tree 
remove all \*~ files under dir 
remove all a.out, *.o, and core files under the current directory 
remove all broken symbolic links in /usr/ports/packages 
remove all broken symlinks from the /usr/ports/packages directory tree 
remove all but 5 last comma-separated fields from each line in UNK_START data.csv UNK_END 
remove all characters except UNK_START ; UNK_END and digits from standard input 
remove all core dump files from user's home directory 
remove all directories called UNK_START test UNK_END from the /path/to/dir directory tree 
remove all directories called UNK_START test UNK_END from the /path/to/dir directory tree 
remove all directories called UNK_START test UNK_END from the current directory tree 
remove all directories called UNK_START test UNK_END from the current directory tree 
remove all directories called UNK_START test UNK_END from the current directory tree 
remove all directories called UNK_START test UNK_END from the current directory tree 
remove all directories called UNK_START test UNK_END from the current directory tree 
remove all directories called UNK_START test UNK_END from the current directory tree 
remove all directories found in directory tree $logdir that were modified more than 5 days ago 
remove all directories in and below the current directory 
remove all empty directories under the current directory and below 
remove all empty files in /tmp/ and below 
remove all empty regular files under the current directory and below 
remove all empty regular files under the current directory and below 
remove all empty sub-directories under current directory 
remove all files UNK_START a.out UNK_END and *.o in the home directory tree that were accessed more than 7 days ago 
remove all files and directories called UNK_START test UNK_END from the current directory tree 
remove all files and directories called UNK_START test UNK_END from the current directory tree 
remove all files and directories called UNK_START test UNK_END from the current directory tree 
remove all files and directories in the /home directory tree whose names are UNK_START trash UNK_END 
remove all files and directories in the current directory by answering with UNK_START y UNK_END to all prompts 
remove all files and directories under UNK_START /home/foo UNK_END directory tree that match with one of the name patterns '.ds_store', UNK_START ._.ds_store UNK_END , '._*', UNK_START .temporaryitems UNK_END or UNK_START .apdisk UNK_END 
remove all files containing UNK_START sample UNK_END (case insensitive) in their names under UNK_START /home/user/series UNK_END directory tree 
remove all files containing UNK_START sample UNK_END (case insensitive) in their names under UNK_START /home/user/series UNK_END directory tree 
remove all files except the ones listed in UNK_START manifest UNK_END 
remove all files from the current directory tree whose names contain whitespaces 
remove all files from the current directory tree whose names do not end with UNK_START .tex UNK_END or UNK_START .bib UNK_END 
remove all files from the current directory tree whose names do not match regular expression UNK_START excluded files criteria UNK_END 
remove all files from the current directory tree whose names end in UNK_START ~ UNK_END 
remove all files from the system whose path names contain UNK_START gui UNK_END 
remove all files in and below the current directory whose names begin with UNK_START not UNK_END 
remove all files in and below the current directory whose names begin with UNK_START not UNK_END 
remove all files in and below the current directory whose names begin with UNK_START not UNK_END 
remove all files in the $backup_path directory recursively that were last modified more than 30 days ago 
remove all files in the /myfiles directory tree that were accessed at least 30 days ago 
remove all files in the current directory tree that have the name UNK_START abc.xxx UNK_END 
remove all files in the ~/backups/mydatabasename directory recursively that were last modified more than 30 days ago 
remove all files last modified more than 10 days ago from the current directory tree 
remove all files matching the pattern *[+{;"\\=?~()<>&*|$ ]* under current directory 
remove all files named UNK_START filename UNK_END from the current directory tree, ignoring directory UNK_START folder1 UNK_END 
remove all files named `junk' and `dummy' 
remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods 
remove all files on the system that have been changed within the last minute 
remove all files that are not newer than jul 01 by modification time 
remove all files that contain the word gui in entire file system 
remove all files that end with UNK_START prefs copy UNK_END in their names under UNK_START /mnt/zip UNK_END directory tree 
remove all files that were older than 3 days 
remove all files under $dir that were accessed more than 5 days ago 
remove all files under /home/user/maildir/.spam/cur 
remove all files under /home/user/maildir/.spam/cur 
remove all files under /home/user/maildir/.spam/cur 
remove all files under /myfiles that were accessed more than 30 days ago 
remove all files under current directory 
remove all files whose names begin with UNK_START no-such-thing UNK_END in the /home/peter directory tree 
remove all files whose names end with UNK_START ~ UNK_END in the /home/peter directory tree 
remove all files whose names end with UNK_START ~ UNK_END in the /home/peter directory tree 
remove all files whose names start with spam- 
remove all files with UNK_START .js UNK_END extension from the UNK_START js UNK_END directory tree 
remove all files with a txt extension under current directory 
remove all files with a txt extension under current directory 
remove all files with names like UNK_START vmware-*.log UNK_END from the current directory tree 
remove all files with names like UNK_START vmware-*.log UNK_END from the current directory tree 
remove all files with names like UNK_START vmware-*.log UNK_END from the current directory tree 
remove all files with names like UNK_START vmware-*.log UNK_END from the current directory tree 
remove all files with names like UNK_START vmware-*.log UNK_END from the current directory tree 
remove all files with the .c extension in the current directory tree 
remove all files with the .c extension in the current directory tree 
remove all files/directories in the current directory without UNK_START .git UNK_END and UNK_START .gitignore UNK_END 
remove all libegl* files from the current directory tree 
remove all libgle* files from the current directory tree 
remove all non-hidden files in the current directory tree 
remove all regular files found in and below /path 
remove all regular files found in and below /path 
remove all regular files found in and below /path 
remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt 
remove all regular files from the current directory tree that were modified a day ago 
remove all regular files from the current directory tree that were modified between august 10th and august 17th 
remove all regular files from the current directory tree whose names do not end with UNK_START ignore1 UNK_END or UNK_START ignore2 UNK_END 
remove all regular files from the current directory tree whose names do not end with UNK_START ignore1 UNK_END or UNK_START ignore2 UNK_END 
remove all regular files from the current directory tree whose names do not end with UNK_START txt UNK_END 
remove all regular files in the current directory 
remove all regular files named UNK_START waldo UNK_END in the ~/books directory tree 
remove all regular files under $dir directory tree that were accessed more than 5 days ago 
remove all regular files under UNK_START /var/log/remote UNK_END directory tree that have not been modified in the last 14 days where day count starts from today 
remove all regular files under and below directory UNK_START $dir UNK_END that were last accessed more than 5 days ago 
remove all regular files with extensions php, css, ini, txt from directory tree /old/wordpress/ 
remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree 
remove all spaces from standard input 
remove all subdirectories of the current directory, except for "bar", "foo", "a", and UNK_START b UNK_END 
remove all text files in the home directory with confirmation 
remove all tmp/*.mp3 files 
remove all tmp/*.mp3 files 
remove all tmp/*.mp3 files 
remove all vmware-*.log files under current directory 
remove all vmware-*.log files under current directory 
remove all vmware-*.log files under current directory 
remove all vmware-*.log files under current directory ensuring white space safety in filename 
remove all vmware-*.log files/directories under current directory 
remove all white space from UNK_START infile.txt UNK_END and wrap each line to 80 characters 
remove any file containing string UNK_START gui UNK_END 
remove containing directories and suffix UNK_START .wiki UNK_END from specified path, output the result. 
remove containing directories from variable UNK_START path UNK_END ie. UNK_START /some/specific/directory UNK_END becomes "directory". 
remove directories in /media/1tb/videos modified more than 7 days ago 
remove duplicate phrases and keep the original order of lines in UNK_START $infile UNK_END 
remove duplicates in variable UNK_START variable UNK_END and preserve the order 
remove each unique item listed on standard input and do nothing if empty 
remove empty directories 
remove empty directories from directory tree /srv/${x} 
remove empty directories from directory tree /srv/abc 
remove empty directories from the current directory tree 
remove empty folder, and skip error message if one is not empty. 
remove everything in a current folder prompting user on each action. 
remove everything in a current folder without prompting. 
remove everything in a current folder without prompting. 
remove everything in the current directory except files matching regular expression UNK_START exclude these UNK_END 
remove file with inode number 31246 
remove files cart4, cart5, cart6 in directory ~/junk 
remove files erroneously named `-f' 
remove files from the file system that are owned by nobody 
remove files from the file system that are owned by nobody 
remove files from the file system that are owned by nobody, asking the user before each removal 
remove files from the home directory tree that were last accessed more than 100 days ago 
remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/ 
remove files in the current directory tree modified more than 31 days ago recursively 
remove files in the current directory tree whose names match pattern UNK_START file? UNK_END 
remove files matching pattern UNK_START *-*x*.* UNK_END from the current directory tree 
remove files modified at least five days ago in directory trees /path/to/files* 
remove files named UNK_START core UNK_END from the /work directory tree and write their names to /dev/stderr (the standard error 
remove files that are greater than 1mb in size under current directory 
remove files that are less than 1mb in size under current directory 
remove files that are less than 1mb in size under current directory 
remove files under /mnt/zip matching UNK_START *prets copy UNK_END with confirmation 
remove files under current directory that contains white space in their name 
remove files under current directory with inode number $inum 
remove files whose names match regular expression UNK_START ^.*/[a-za-z]+-[0-9]+x[0-9]+\.[a-za-z]+$ UNK_END from the current directory tree 
remove files whose names start with `foo' 
remove filetype suffix (last dot and following characters if any) from filename 
remove from the current directory tree all the regular files which have a dot in their names and contain string UNK_START <img-name>-<width:integer>x<height:integer>.<file-ext> syntax UNK_END 
remove gitlab.site.org from root's known hosts file. 
remove junk files modified more than 31 days ago recursively 
remove junk files modified more than 31 days ago recursively 
remove last two underscore-delimited fields and following characters in UNK_START t1_t2_t3_tn1_tn2.sh UNK_END keeping only UNK_START t1_t2_t3 UNK_END 
remove lines matching UNK_START kpt# UNK_END from UNK_START data.txt UNK_END and add left-justified line numbers 
remove newline characters from UNK_START file.txt UNK_END 
remove recursively emacs backup files in the current directory 
remove regular files changed more than 15 days ago from the /tmp directory tree 
remove regular files in the current directory tree 
remove regular files whose names match perl regular expression UNK_START \w+-\d+x\d+\.\w+$ UNK_END from the current directory tree 
remove sess_* files that were modified more than 2 days ago 
remove spaces from output of UNK_START echo aa | wc -l UNK_END 
remove symbolic links and get absolute path of UNK_START ${the_stuff_you_test} UNK_END and save to variable UNK_START dir_path UNK_END 
remove the UNK_START 123_ UNK_END prefix from all filenames of .txt files in current directory. 
remove the UNK_START 123_ UNK_END prefix from all filenames of .txt files in current directory. 
remove the .jpg files from the current directory whose names match regular expression UNK_START .+-[0-9]+x[0-9]+\.jpg UNK_END 
remove the .jpg files from the current directory whose names match regular expression UNK_START .+-[0-9]+x[0-9]+\.jpg UNK_END 
remove the file with inode number 752010 
remove the files from the home directory tree that were last accessed more than 100 days ago, with confirmation 
remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', UNK_START lib/pkgconfig/nodejs.pc UNK_END and UNK_START share/man/man1/node UNK_END with superuser privilege 
remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', UNK_START lib/pkgconfig/nodejs.pc UNK_END and UNK_START share/man/man1/node.1 UNK_END 
remove the first 13 characters of each UNK_START .txt UNK_END filename in the UNK_START /tmp UNK_END directory tree and number the output 
remove the first 7 characters of every line in the output of UNK_START history UNK_END 
remove the last 2 tab-separated fields of each line in file pointed to by filename 
remove the last 3 characters from 987654321, keeping only 987654 
remove the last two components (directories) of $path 
remove the passphrase from user's ssh key without prompting. 
remove the passphrase from ~/.ssh/id_rsa. 
remove the path $1 from the path environment variable 
remove the regular files from the current directory that were last modified on november, 22 
remove the regular files from the current directory tree that are newer than /tmp/date.start but not newer than /tmp/date.end 
remove the regular files from the current directory tree that were last modified on november, 21 
remove with prompting all files starting in /mydir that have not been accessed in over 100 days 
remove with prompting all files that have not been accessed in over 100 days 
removes UNK_START /var/lib/mongodb/mongod.lock UNK_END in UNK_START sudo UNK_END mode. 
removes 'foldername', and removes all content within if UNK_START foldername UNK_END is folder. 
removes UNK_START foo UNK_END file. 
removes UNK_START latest UNK_END folder if empty. 
removes 5 oldest files in the current folder. 
removes all empty folders that ends with any-cased UNK_START *.bak UNK_END under UNK_START /users/ UNK_END path. 
removes all empty folders under UNK_START /path/to/the/folder UNK_END path. 
removes all empty folders under current folder. 
removes all empty folders under current folder. 
removes all empty folders under current path, aged between UNK_START first UNK_END and UNK_START last UNK_END timestamps. 
removes all empty folders under path UNK_START /foo/bar UNK_END and the path itself. 
removes all empty folders under path '/thepath', printing info message on each operation. 
removes all empty folders with modification time more that 10 minutes ago from $homedirdata folder. 
removes all empty folders within $deletedir folder. 
removes all files but $1 newest ones from current folder. 
removes all files but 5 newest ones from current folder. 
removes all files but 5 newest ones from current folder. 
removes all files from current folder but 3 newest ones 
removes all files from current folder but 5 newest ones, filtering out directories from initial search. 
removes all files from current folder but 5 newest ones. 
removes all files like UNK_START *.bak UNK_END in a current folder, and prints messages about what is being done. 
removes all files like UNK_START a*.pdf UNK_END from current folder without prompting. 
removes all listed folders with content in sudo mode. 
removes all top-level *.pdf files in a current folder. 
removes all top-level empty folders within the current folder. 
removes any empty folder that matches pattern ed*. 
removes empty folder UNK_START edi UNK_END and 'edw'. 
removes empty folder 'symlink'. 
removes empty folder, and hides error message if one is not empty. 
removes everything from current folder but UNK_START *ddl* UNK_END and UNK_START *docs* UNK_END files. 
removes files 'junk1', 'junk2', 'junk3'. 
removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting. 
removes first and last parts of path $path and saves the result in UNK_START finalname UNK_END variable. 
removes first and last parts of path $path and saves the result in UNK_START finalname UNK_END variable. 
removes first and last parts of path UNK_START test/90_2a5/windows UNK_END and prints the result. 
removes only lowest level subfolders from current directory tree (folders without files and another folders within). 
removes resursively all files and folders named ".ds_store". 
removes resursively all files and folders named "thumbs.db", ignoring case distincts. 
removes the last 2 lines from a file 
rename UNK_START /usr/bin/php UNK_END to UNK_START /usr/bin/~php UNK_END 
rename UNK_START tux.png UNK_END to UNK_START .tux.png UNK_END 
rename UNK_START blah1 UNK_END to UNK_START blah1-new UNK_END 
rename UNK_START blah2 UNK_END to UNK_START blah2-new UNK_END 
rename UNK_START fghfilea UNK_END to UNK_START jklfilea UNK_END 
rename UNK_START file.txt UNK_END in directories "v_1", "v_2", and UNK_START v_3 UNK_END each to "v_1.txt", "v_2.txt", and UNK_START v_3.txt UNK_END respectively and print the conversion 
rename UNK_START file0001.txt UNK_END to UNK_START 1.txt UNK_END 
rename UNK_START file001abc.txt UNK_END to UNK_START abc1.txt UNK_END 
rename UNK_START new UNK_END to UNK_START old UNK_END and backup to UNK_START old.old UNK_END if UNK_START old UNK_END exists 
rename UNK_START new UNK_END to UNK_START old UNK_END and make a backup if UNK_START old UNK_END exists 
rename UNK_START old UNK_END to UNK_START tmp UNK_END 
rename UNK_START original.filename UNK_END to UNK_START new.original.filename UNK_END 
rename UNK_START original.filename UNK_END to UNK_START new.original.filename UNK_END 
rename UNK_START svnlog.py UNK_END to UNK_START svnlog UNK_END 
rename UNK_START www_new UNK_END to UNK_START www UNK_END even if UNK_START www UNK_END directory exists 
rename $file file, preserving only part of name before UNK_START - UNK_END symbol, and appending UNK_START .pkg UNK_END suffix to the end 
rename UNK_START .mkv UNK_END extension to UNK_START .avi UNK_END for all files/directories under UNK_START /volume1/uploads UNK_END directory tree 
rename .jpg files to .jpeg in all level 2 subdirectories of the current directory 
rename absolute path of symbolic link UNK_START dirln UNK_END to UNK_START dir2 UNK_END 
rename all UNK_START thumbs UNK_END directories to UNK_START thumb UNK_END in the current directory tree 
rename all *.html files under and below the current directory to *.var 
rename all *.txt regular files in the current directory tree to *.abc 
rename all .html files to .txt 
rename all .jpg files to .jpeg under the current directory and below 
rename all .png files, changing the string UNK_START _h.png UNK_END into "_half.png". 
rename all directories under current directory by replacing all occurrences of UNK_START foo UNK_END (case insensitive) with UNK_START bar UNK_END in their names 
rename all files and directories under current directory tree by converting the names to small letters without descending into UNK_START cvs UNK_END directory 
rename all files in current directory to lowerase, overwriting any existing files. 
rename all files in current directory to lowerase. 
rename all files in current directory whose name starts with 'f0000', trimming a zero from any sequence of four zeroes in the name. 
rename all files in current directory with names starting with UNK_START fgh UNK_END so they start with UNK_START jkl UNK_END instead 
rename all files matching UNK_START access.log.<number>.gz UNK_END incrementing <number>. 
rename all regular files under current directory tree with inode number 31467125 to UNK_START new_name.html UNK_END 
rename file UNK_START edited_blah.tmp UNK_END to UNK_START /etc/blah UNK_END 
rename file extension UNK_START .andnav UNK_END (case insensitive) to UNK_START .tile UNK_END for all files/directories under current directory tree 
rename file extension UNK_START .andnav UNK_END to UNK_START .tile UNK_END for all files/directories under current directory tree 
rename file file.txt.123456 to file.txt 
rename file with inode number 31467125 to new_name.html 
rename file ~/junk/cart1 to ~/junk/a 
rename recursively all files in the current directory tree that are called UNK_START article.xml UNK_END to UNK_START 001_article.xml UNK_END 
rename the *.so files at level 2 of the current directory tree prepending their names with UNK_START lib UNK_END 
rename the *.so files in the current directory tree prepending their names with UNK_START lib UNK_END 
rename uppercase file or folder name $1 to lower case name 
repeat UNK_START image.png UNK_END 10 times on a single line 
repeat UNK_START image.png UNK_END 10 times on a single line 
replace UNK_START inputfile UNK_END with a sorted unique list of its contents 
replace all UNK_START UNK_END with UNK_START - UNK_END from standard input 
replace all colons (':') with newlines in $list and search for the first match to the regex UNK_START ^$removepat\$ UNK_END where $removepat is a variable and save the result to variable UNK_START removestr UNK_END 
replace all non-punctuation characters with newlines from standard input 
replace all sequence of UNK_START blank UNK_END characters in file UNK_START log UNK_END with a single occurence of such symbol and print space-separated fields of each string but first two fields 
replace all spaces (' ') with comma (',') in ${to_ignore[@]}, append with UNK_START --ignore UNK_END and save the resultant string to variable UNK_START args UNK_END 
replace all spaces with underscores in directory names under current directory. 
replace all spaces with underscores in directory paths under current directory. 
replace all spaces with underscores in file paths under current directory. 
replace any blank character from standard input with a tab 
replace any sequence of spaces in file UNK_START text.txt UNK_END with single space and print 4th space separated field 
replace commas (',') with newlines in $mount_opts and search for the regex UNK_START ^acl$ UNK_END 
replace each new line in UNK_START input.txt UNK_END with UNK_START : UNK_END 
replace each newline in input UNK_START 1\n2\n3\n4\n5 UNK_END with a comma 
replace each non-blank line in UNK_START yourfile UNK_END preceded with UNK_START px= UNK_END where UNK_START x UNK_END is the line number 
replace newline with UNK_START _ UNK_END in UNK_START file UNK_END then search for UNK_START _foo_ UNK_END and output with UNK_START _ UNK_END characters deleted 
replace spaces in directory names with underscores for all directories in the current directory tree 
replace spaces in file names with underscores for all files in the current directory tree 
replace spaces with underscores in the names of all files and directories in the UNK_START /tmp UNK_END directory tree 
replace spaces with underscores in the names of all files and directories in the UNK_START /tmp UNK_END directory tree 
replace the UNK_START openssl UNK_END command executable with a symbolic link to UNK_START /usr/local/ssl/bin/openssl UNK_END 
replaces any occurences of UNK_START *favicon.ico* UNK_END in any subfolder with file '/root/favicon.ico'. 
report all c language source code files under the current directory 
report all files in /mydir1 and /mydir2 larger than 2000 blocks and accessed in over 30 days 
report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days 
report available space on the file system containing /tmp in kilobytes. 
report file system UNK_START /dev/disk0s2 UNK_END disk usage 
report file system containing /example disk usage in kilobytes. 
report file system containing /tmp disk usage in kilobytes. 
report file system containing path to /dir/inner_dir/ disk usage human-readable. 
report file system containing path to /dir/inner_dir/ disk usage in kilobytes. 
report file system containing path to /some/dir disk usage in kilobytes. 
report file system containing path to the current working directory disk usage human-readable. 
report file system containing path to the current working directory disk usage in kilobytes. 
report file system containing path to the current working directory inodes usage. 
report file system containing path-to-file disk usage human-readable. 
report file system containing the current directory disk usage 
report file system containing the current directory disk usage in kilobytes. 
report file system disk space usage in human readable format 
report file system inodes usage in human readable format 
report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point. 
report file systems disk space usage pretty formatted. 
report file systems disk usage human-readable using posix output format. 
report file systems disk usage in 1gb blocks. 
report file systems disk usage in kilobytes. 
report file systems disk usage using posix output format. 
report file systems disk usage, elide all entries insignificant to available space, and produce a grand total. 
report file systems inode usage. 
report file systems inodes usage. 
report root file system disk usage human-readable. 
report total disk usage info on root file system, printing all sizes as power of 1000 
report total file systems disk usage estimated in terabytes 
report total file systems disk usage in 1t blocks. 
report total file systems disk usage. 
report total size of the root filesystem disk usage in powers of 1000. 
reports count of characters in the value of ${foo_no_external_space} variable as follows: UNK_START length(foo_no_external_space)==<counted number of characters> UNK_END 
reports count of characters in the value of ${foo_no_lead_space} variable as follows: UNK_START length(foo_no_lead_space)==<counted number of characters> UNK_END 
reports count of characters in the value of ${foo_no_trail_space} variable as follows: UNK_START length(foo_no_trail_space)==<counted number of characters> UNK_END 
reports count of characters in the value of ${foo_no_whitespace} variable as follows: UNK_START length(foo_no_whitespace)==<counted number of characters> UNK_END 
reports count of characters in the value of ${foo} variable as follows: UNK_START length(foo)==<counted number of characters> UNK_END 
reports count of processors in system. 
reports count of processors in system. 
represent current date in rfc 3339 format with precision to seconds and save it to UNK_START timestamp UNK_END variable 
represent the utc date given in time string UNK_START 1970.01.01-$string1 UNK_END as number of seconds since the epoch and save it in UNK_START t1 UNK_END variable 
represent the current time as seconds since epoch and save it to variable UNK_START today UNK_END 
represent time string $mod_date as seconds since epoch and save to variable UNK_START mod_date1 UNK_END 
request a record from nameserver $ns for domain name $d, filter strings with domain name and exclude lines matching UNK_START dig UNK_END 
request ip address for each domain name received on the command input 
request ip address of UNK_START myip.opendns.com UNK_END from name server UNK_START resolver1.opendns.com UNK_END 
request mx record of UNK_START example.com UNK_END domain, and filter out all comment strings 
request ns record for com. domain, receiving only authoritative answers 
request changing the passphrase of key file UNK_START private.key UNK_END 
request that the master ssh connection UNK_START officefirewall UNK_END exits 
request that the master ssh connection UNK_START otherhosttunnel UNK_END exits 
resolve all symlinks in path to UNK_START firefox UNK_END binary if it exists in path, resulting in absolute path with no symlinks. 
resolve any symlinks in working directory, and go to resulting pathname. 
resolve symbolic link of file UNK_START /foo/bar/baz UNK_END 
resolve symbolic link of file UNK_START file UNK_END even if the file does not exist 
resolve symbolic link of path of UNK_START python2.7 UNK_END 
retrieve column number from column name UNK_START target UNK_END in file UNK_START table UNK_END 
retrieve only build number of current kernel, ie. #104 
return 0 if at least one UNK_START abc UNK_END file in the current directory tree contains text UNK_START xyz UNK_END 
return 0 if file system is mounted on UNK_START /full/path UNK_END 
return a list of files newer than file poop 
return all of the .conf files in pat's user folder and subdirectories 
return the depth of the current directory tree 
return the files that are newer than file `myfile' 
return the list of files named UNK_START filename UNK_END that are 50 megabytes or larger 
returns 0 if user $1 belongs to group $2. 
returns the single most recent file in a directory 
reverse the order of lines in UNK_START myfile.txt UNK_END using bsd UNK_START tail UNK_END command 
reverse the space separated words in UNK_START 35 53 102 342 UNK_END 
reverse the space separated words in UNK_START aaaa eeee bbbb ffff cccc UNK_END 
reverse the text in $input by taking each 4 characters as each units and save the result in variable UNK_START output UNK_END 
reversibly sorts content of the UNK_START ${tmp}/${script_name}.kb UNK_END file, comparing human readable numbers in file strings. 
reversibly sorts content of the UNK_START ${tmp}/${script_name}.name UNK_END file 
reversibly sorts content of the UNK_START ${tmp}/${script_name}.pid UNK_END file, comparing human readable numbers in file strings. 
revert $string value and print first 20 space-separated fields 
run UNK_START ./configure UNK_END with a new environment variable cc set to the full path of the command UNK_START cc UNK_END 
run UNK_START ./configure UNK_END with a new environment variable cc set to the full path of the command UNK_START gcc UNK_END 
run UNK_START command UNK_END on server UNK_START host UNK_END as user UNK_START user UNK_END 
run UNK_START chmod 0644 UNK_END on all files in the current directory tree 
run UNK_START chmod 0755 UNK_END on all directories in the current directory tree 
run UNK_START join UNK_END on file1 and file2, using a literal tab character as field separator. 
run UNK_START join UNK_END with the number-sorted output of file1 and file2, without modifying file1 or file2: for each line with a common first field in file1 and file2, output the common field followed by the extra fields in both files. 
run UNK_START make -e UNK_END with an environment variable UNK_START hostname UNK_END set to the system hostname 
run UNK_START otherscript.sh UNK_END script with all environment variables specified in the file UNK_START xxxx UNK_END 
run UNK_START somecommand UNK_END in an environment without the foo variable. 
run UNK_START top UNK_END in batch mode (don't accept user input) with delay of 1 second between updates, and duplicate the standard output to file UNK_START output.log UNK_END in current directory. 
run .makeall.sh in an empty environment. 
run a shell with all environment variables specified in the file UNK_START cronenv UNK_END in the user's home directory. 
run command UNK_START su whoami UNK_END on host UNK_START remotehost UNK_END 
run command specified by $line, replace space (' ') with newline and save the output to variable UNK_START arr UNK_END 
run commands UNK_START df -k;uname -a UNK_END on server UNK_START 192.168.79.134 UNK_END 
run perl -v (displays informations about perl's setup) in an empty environment. 
run rsync with options specified by variable opts, copying directory(ies) specified by variable find, and to destination specified by variable backupdir. 
run script $2 on remote host $1 using interpreter $interpreter with pseudo-terminal allocation 
run the file command on every regular file under current directory 
run the find command with all shell positional arguments 
runs `file' on every file in or below the current directory. 
ssh in server UNK_START server UNK_END as user UNK_START user UNK_END with x11 forwarding disabled 
ssh into UNK_START $name UNK_END as user UNK_START ${username} UNK_END using key file "${keydir}/${key}.pem", automatically add the host to list of known hosts and execute UNK_START ${commands} UNK_END 
ssh into UNK_START hostname UNK_END on port 22 as user UNK_START myname UNK_END 
ssh into UNK_START hostname UNK_END on port 22 as user UNK_START myname UNK_END 
ssh into UNK_START localhost UNK_END with forced pseudo-terminal allocation, execute "$heredoc", and save the output to variable UNK_START rel_dir UNK_END 
ssh into UNK_START myhost.com UNK_END as user UNK_START myname UNK_END with a check every 60 seconds that the server is still alive 
ssh into $1 with login name UNK_START pete UNK_END 
ssh into host UNK_START $1 UNK_END using key file UNK_START /path/to/ssh/secret/key UNK_END and execute command UNK_START $2 UNK_END 
ssh into host UNK_START server UNK_END as user UNK_START user UNK_END 
ssh into server UNK_START app1 UNK_END as the current user 
ssh into server UNK_START server.com UNK_END as user UNK_START remote_user UNK_END 
ssh into user@server and run command ${ssh_command} 
ssh login in UNK_START middle.example.org UNK_END via port 2222 as user UNK_START deviceuser UNK_END using a private key file UNK_START ./device_id.pem UNK_END 
ssh using parameters in $@ in master mode in the background without executing any commands and set the controlpath to UNK_START $mastersock UNK_END 
ssh with parameters specified in UNK_START $@ UNK_END using key file UNK_START ~/.ssh/gitkey_rsa UNK_END 
ssh with trusted x11 forwarding into UNK_START user@remotetoremote_ip UNK_END from ssh connection UNK_START user@remote_ip UNK_END 
save UNK_START something UNK_END into variable UNK_START param UNK_END in ksh 
save $line line in history 
save UNK_START echo whatever you UNK_START want your UNK_END command to be UNK_END in history 
save UNK_START foo UNK_END into variable UNK_START bar UNK_END in ksh 
save ip addresses of the host name in variable UNK_START ip UNK_END 
save a comma separated list of all $my_directory/*/ directories to variable UNK_START folder UNK_END 
save a comma separated list of all directories under current directory tree to variable UNK_START folder UNK_END 
save a line of 100 random characters either UNK_START . UNK_END or UNK_START UNK_END in variable UNK_START foo UNK_END 
save a list of all 755 permission files/directories under $dir directory tree to the variable UNK_START files UNK_END 
save a list of all the files/directories under current directory tree to a file named UNK_START foo UNK_END 
save a nginx link to UNK_START /path/to/file UNK_END with the current user and system fqdn host name in variable UNK_START path UNK_END 
save a space separated list of process ids of currently running jobs to variable UNK_START bgxjobs UNK_END 
save a unique list of the currently logged in usernames to variable UNK_START line UNK_END 
save absolute path of UNK_START $path UNK_END that may not exist to variable UNK_START abspath UNK_END 
save absolute path of UNK_START $path UNK_END that must exist along with all parents to variable UNK_START abspath UNK_END 
save absolute path of UNK_START $path UNK_END whose parents exist to variable UNK_START abspath UNK_END 
save absolute path of UNK_START /home/nohsib/dvc/../bop UNK_END in variable UNK_START absolute_path UNK_END 
save absolute path of the script filename in variable UNK_START my_path UNK_END 
save absolute path of the script filename in variable UNK_START script UNK_END 
save actual working directory in variable UNK_START target_pwd UNK_END 
save all directories under the current directory as a comma separated list in variable UNK_START folders UNK_END 
save all directories under the current directory as a comma separated list in variable UNK_START folders UNK_END 
save all entries that are wrapped around with opening and closing square brackets in file UNK_START filename UNK_END to variable UNK_START var UNK_END 
save count of lines from file $file matching with pattern $filter and not matching with pattern $nfilter in variable UNK_START totallinecnt UNK_END 
save directory UNK_START ../../lib UNK_END relative to the executable UNK_START gcc UNK_END to variable UNK_START libdir UNK_END 
save first ip address of domain UNK_START google.com UNK_END in UNK_START address UNK_END variable 
save first one of space separated parts of each line in $lockfile file to the UNK_START current_pid_from_lockfile UNK_END variable 
save full path of command UNK_START cat UNK_END to variable UNK_START cat UNK_END 
save full path of command UNK_START mktemp UNK_END to variable UNK_START mktemp UNK_END 
save full path of command UNK_START rm UNK_END to variable UNK_START rm UNK_END 
save full path of command UNK_START tr UNK_END to variable UNK_START tr UNK_END 
save host name in variable UNK_START thishostname UNK_END 
save in queue_pids variable only pid numbers that stored in $new_pids variable 
save list of groups which user $line belongs to and not matching pattern UNK_START _unknown|sciences|everyone|netaccounts UNK_END in UNK_START results UNK_END variable 
save long listing of all files listed in file UNK_START filenames.txt UNK_END to UNK_START listing UNK_END variable 
save long listing of all running processes in the UNK_START log UNK_END file, and save number of process strings that contain UNK_START cntps UNK_END in the UNK_START cnt UNK_END variable. 
save number of lines in UNK_START /some/big/file UNK_END to UNK_START lines UNK_END variable 
save number of lines in UNK_START file.txt UNK_END file in UNK_START nblines UNK_END variable 
save number of lines with any-cased UNK_START merge UNK_END from $commit_editmsg file in UNK_START merge UNK_END variable 
save number of processors in system to UNK_START np UNK_END variable 
save number of strings with $expression pattern in UNK_START foo.txt UNK_END to UNK_START big_lines UNK_END variable. 
save only the digits in UNK_START $filename UNK_END to variable UNK_START number UNK_END 
save small letter short day name of the week to variable UNK_START dayofweek UNK_END 
save standard input to variable UNK_START myvar UNK_END 
save standard input to variable UNK_START stdin UNK_END until the first character encoded as UNK_START \004 UNK_END is read 
save system information appended with the current date in UNK_START filename UNK_END variable 
save the fqdn host name of the system in variable UNK_START fhost UNK_END 
save the fqdn host name of the system in variable UNK_START hnd UNK_END 
save the utc date represented by time string $sting2 as the seconds since epoch to variable UNK_START finaldate UNK_END 
save the absolute path of UNK_START $path UNK_END to variable UNK_START full_path UNK_END 
save the absolute path of UNK_START $path UNK_END to variable UNK_START fullpath UNK_END 
save the absolute path of the current script to variable UNK_START self UNK_END 
save the absolute path of the current script to variable UNK_START self UNK_END 
save the absolute path of the current script to variable UNK_START self UNK_END 
save the absolute path of the current script to variable UNK_START self UNK_END 
save the absolute path of the directory of the current script to variable UNK_START dir UNK_END 
save the canonical filename of UNK_START $bash_source UNK_END in variable UNK_START me UNK_END 
save the canonical filename of the script in variable UNK_START me UNK_END 
save the canonical path of UNK_START $dir/$file UNK_END in variable UNK_START path UNK_END 
save the contents of UNK_START numbers.txt UNK_END to variable UNK_START f UNK_END 
save the current date to UNK_START date UNK_END variable 
save the current time formatted according to the format string UNK_START %y-%m-%d %h:%m:%s UNK_END to the variable UNK_START cdate UNK_END 
save the current user name in variable UNK_START myvariable UNK_END 
save the current working directory and the directory name of the current script to variable UNK_START dir UNK_END 
save the current working directory to variable UNK_START current UNK_END 
save the current working directory with resolved symbolic links to variable UNK_START real1 UNK_END 
save the date 222 days before today to the variable UNK_START date_222days_before_todayday UNK_END 
save the day of the year from the time string UNK_START 20131220 UNK_END to variable UNK_START datecoming UNK_END 
save the directory name of the canonical path to the current script in variable UNK_START my_dir UNK_END 
save the directory name of the current bash script to variable UNK_START path UNK_END if it is found in one of the directories specified by path. 
save the directory of the full path to the current script in variable UNK_START dir UNK_END 
save the directory of the full path to the current script in variable UNK_START dir UNK_END 
save the first UNK_START . UNK_END separated field of the system host name to variable UNK_START hostz UNK_END 
save the first line of UNK_START $j UNK_END into variable UNK_START k UNK_END in ksh 
save the first three octets of the host name's ip address to variable UNK_START subnet UNK_END 
save the first two letters of the system host name to variable UNK_START dc UNK_END 
save the first word of the first difference in UNK_START .dir_list_2 UNK_END compared to UNK_START .dir_list_1 UNK_END into variable UNK_START extract_dir UNK_END 
save the full path of command UNK_START f UNK_END to variable UNK_START full_f UNK_END 
save the full path of command UNK_START oracle UNK_END to variable UNK_START path UNK_END 
save the full path of command UNK_START ~/f UNK_END to variable UNK_START foo UNK_END 
save the greater version number of UNK_START $1 UNK_END and UNK_START $2 UNK_END into variable UNK_START ver UNK_END 
save the last modified time of file UNK_START file_name UNK_END to variable UNK_START stamp UNK_END 
save the latest modification time (in format UNK_START %t@ %t UNK_END of any file under UNK_START ./$dir UNK_END to variable UNK_START timestamp UNK_END 
save the list of all .py files under and below the current directory that contain UNK_START something UNK_END in their pathnames to output.txt 
save the logical current working directory to variable UNK_START basedir UNK_END 
save the md5 sum hash of UNK_START $my_iso_file UNK_END to variable UNK_START md5 UNK_END 
save the md5 sum of $twofish to variable UNK_START twofish UNK_END 
save the network node hostname append with '-', the current date and UNK_START .txt UNK_END into variable UNK_START filename UNK_END 
save the number of bytes in UNK_START $file UNK_END after decompression into variable UNK_START size UNK_END 
save the number of matching executables for UNK_START $cmd UNK_END in $path to variable UNK_START candidates UNK_END 
save the numerically greater value of UNK_START $kf UNK_END and UNK_START $mp UNK_END into variable UNK_START gv UNK_END 
save the percentage of packets lost of the 5 packets sent to UNK_START $host UNK_END in variable UNK_START packet_loss UNK_END 
save the physical current working directory to variable UNK_START end_abs UNK_END 
save the short dns lookup output of $workstation to UNK_START workstation_ip UNK_END variable 
save the short host name appended with UNK_START .mysqldb UNK_END in variable UNK_START dbprefix UNK_END 
save the short system host name to variable UNK_START hostname UNK_END 
save the system host name in variable UNK_START hostname UNK_END 
save the system host name in variable UNK_START hostname UNK_END 
save the system host name into variable UNK_START host UNK_END 
save the system host name to variable UNK_START myhostname UNK_END 
save the system load average for the past 1 minute of the currently logged in user to variable UNK_START proc_load_average UNK_END 
save the user name in upper case of the current user in variable UNK_START v UNK_END 
save the user name in upper case of the current user in variable UNK_START v UNK_END 
save the user name of the current user to variable UNK_START me UNK_END 
save the user name of the current user to variable UNK_START me UNK_END 
save the user name of the current user to variable UNK_START whoami UNK_END 
save the user name of the current user to variable UNK_START x UNK_END 
saves byte size of $myvar variable value in the UNK_START var2 UNK_END variable. 
saves bytes count of the value of UNK_START $each UNK_END variable. 
saves calendar of $month, $year in the UNK_START cal UNK_END variable. 
saves file sctipt.sh size in UNK_START size UNK_END variable. 
saves folder path where target of symbolic link $file file is located in UNK_START base UNK_END variable. 
saves index number of file UNK_START script.sh UNK_END in the UNK_START inode UNK_END variable. 
saves invoked command UNK_START check_script_call=$(history |tail -1|grep myscript.sh ) UNK_END in variable 'check_script_call', preceeding by its number in history. 
saves list of logged in users in system together with UNK_START user UNK_END header in the UNK_START a UNK_END variable. 
saves list of logged in users in system together with UNK_START user UNK_END header in the UNK_START b UNK_END variable. 
saves listing of a current folder in UNK_START output UNK_END variable. 
saves listing of a current folder in UNK_START var UNK_END variable. 
saves location of file $1 in UNK_START dir UNK_END variable. 
saves location of file $1 in UNK_START dir_context UNK_END variable. 
saves number of lines of current directory listing in UNK_START n_max UNK_END variable. 
saves real path of the folder containing the current script 
saves space separated content of $raw_log_dir in files variable 
scan every file in /etc for ipv4 addresses while trying to elminate false positives. 
scan every file in /etc for ipv4 addresses. 
search all directory from /usr downwards for files whose inode number is 1234 and print them . 
search all files & directoy from root directory which are greater then 100m and delete them . 
search in current directory downwards all files whic have permission 777 . 
search in current directory downwards all files which have not been accessed since last 7 days 
search in current directory downwards all files whose owner is aa1 or whose name is myfile . 
search in current directory downwards all files whose size is 10 blocks . 
search in current directory downwards all files whose size is greater than 10 bytes . 
search UNK_START file1 UNK_END for lines matching regex patterns listed in UNK_START file2 UNK_END and list the unique results (sorted alphabetically) 
search UNK_START file1 UNK_END for lines matching regex patterns listed in UNK_START file2 UNK_END and list the unique results (sorted alphabetically) 
search UNK_START input.txt UNK_END for regex patterns only matching those listed in "ignore.txt", list the unique lines and prefix with the number of occurrences 
search UNK_START inputfile UNK_END for lines starting with UNK_START t: UNK_END and group the results in files with at most 200 lines each 
search UNK_START mygzfile.gz UNK_END for UNK_START string to be searched UNK_END 
search UNK_START whatyousearchfor UNK_END in history and print 3 lines before and 4 lines after 
search $mygroup in /etc/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable UNK_START myusers UNK_END 
search *.txt files under and below /directory/containing/files for UNK_START pattern_to_search UNK_END 
search *.x files from the current directory tree for string UNK_START fred UNK_END 
search .c and .h files in the current directory tree for UNK_START expr UNK_END 
search /dev/shm and /tmp for regular files not changed in two weeks 
search /etc for files modified within the last 10 minutes 
search /etc for files modified within the last day 
search /path/to/your/directory for *.avi and *.flv files 
search /public/html/cosi for files whose name is UNK_START wiki.phtml UNK_END 
search /root/directory/to/search recursively for the files matching pattern UNK_START filename.* UNK_END 
search /some/directory for files that are owned by the user UNK_START joebob UNK_END 
search /tmp/ for files smaller than 100 bytes 
search /usr, /home, /tmp for *.jar files 
search /usr/bin for regular files that have been modified within the last 10 days 
search /usr/bin for regular files that were last accessed more than 100 days ago 
search /usr/local for subdirectories whose names end with a number 0-9 
search /usr/local recursively for directories whose names end with a number 0-9 
search /usr/src for filenames not ending in UNK_START *,v UNK_END 
search /var for files matching regular expression UNK_START .*/tmp/.*[0-9]*.file UNK_END 
search /var/log for logs larger than 10 megabytes 
search /var/tmp for files larger than 30 mb modified 31 days ago 
search path for utilities called "rename", display the type of file (script, executable, ...) for each match found. 
search path for utilities called "rename", display the type of file (script, executable, ...) for each match found. 
search all *.c files from the current directory tree for UNK_START hogehoge UNK_END 
search all *.c files from the current directory tree for UNK_START hogehoge UNK_END 
search all *.c files from the current directory tree for UNK_START hogehoge UNK_END 
search all *.txt files under ~/documents for the word UNK_START dogs UNK_END 
search all .c and .h files in the current directory tree for string UNK_START e UNK_END 
search all .c files from the current directory tree for "keyword", ignoring the case 
search all .java files residing in the current directory tree and modified at least 7 days ago for string UNK_START swt UNK_END 
search all .py files in the current directory tree for UNK_START some_function UNK_END 
search all python files in the current directory tree for string UNK_START import antigravity UNK_END 
search all directories starting from the root directory for UNK_START filename UNK_END 
search all files and directories either of the directory /home/oracle and /home/databse which contain the UNK_START zip UNK_END anywhere in the files or directory name . 
search all files called UNK_START abc UNK_END that reside in the current directory tree for string UNK_START xyz UNK_END 
search all files called UNK_START abc UNK_END that reside in the current directory tree for string UNK_START xyz UNK_END 
search all files from the /tmp directory tree for the string UNK_START search string UNK_END 
search all files in the current directory tree for "searchstring", ignoring .html files and skipping .svn directories 
search all files in the current directory tree that are named UNK_START whatever UNK_END for UNK_START whatever UNK_END 
search all files in the current directory tree that are named UNK_START whatever UNK_END for UNK_START you_search_for_it UNK_END 
search all files in the current directory tree whose names contain UNK_START . UNK_END for UNK_START searchstring UNK_END 
search all files in the current directory tree whose names end in UNK_START 1 UNK_END for string UNK_START 1 UNK_END 
search all files in the current directory tree whose names end in UNK_START 1 UNK_END for string UNK_START 1 UNK_END 
search all files in the current directory tree whose names end in UNK_START 1 UNK_END for string UNK_START 1 UNK_END 
search all files in the current directory tree, except *.html and *.svn*, for UNK_START searchstring UNK_END 
search all files in the current directory tree, except git files, for UNK_START string-to-search UNK_END 
search all files under and below /etc for ip addresses 
search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat. 
search all of /usr for any directory named 'my files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it. 
search all of /usr for any directory named 'my files', for each directory found, copy it to /iscsi preserving full paths and attributes. 
search all regular files in the current directory for UNK_START example UNK_END 
search all regular files in the current directory tree for UNK_START example UNK_END 
search all regular files in the current directory tree for UNK_START string UNK_END 
search all regular files in the current directory tree for UNK_START string UNK_END 
search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with UNK_START use strict UNK_END 
search all the .c and .h files in the current directory tree for UNK_START expr UNK_END 
search all the regular files from the current directory tree for UNK_START search string UNK_END 
search all the regular files in the current directory for UNK_START example UNK_END 
search all the regular files in the current directory tree for UNK_START example UNK_END 
search all variables and their values for UNK_START name UNK_END 
search appended data in UNK_START logfile.log UNK_END for UNK_START something UNK_END with a timeout of 3 seconds 
search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines 
search case insensitively for UNK_START foo UNK_END in all the files with UNK_START .java UNK_END extension under current directory tree and show only the file names 
search core files in current direcory and delete . 
search decompressed UNK_START filename.gz UNK_END for case-insensitive UNK_START user-user UNK_END 
search directories /opt, /usr, /var for regular file foo 
search directories /res/values-en-rus and /res/xml for xml files 
search directories called UNK_START backup UNK_END from /usr directory downwards and print them. 
search directory $curr_dir for regular files that were changed, accessed, or modified $ftime days ago 
search directory /users/david/desktop/ recursively for regular files 
search directory /users/david/desktop/ recursively for regular files with extensions .txt, .mpg, .jpg 
search directory /home/abcd recursively, starting from one level below, for regular files 
search directory /path/to/check/ for regular files 
search directory /tmp/foo for files containing UNK_START /tmp/foo/bar UNK_END in their full names 
search directory foo for files containing UNK_START /tmp/foo/bar UNK_END in their full names 
search directory foo for files containing UNK_START foo/bar UNK_END in their full names 
search directory lpi104-6 for files with inode number 1988884 
search directory tree $dir for *.txt files 
search directory tree $dir for *.txt files 
search directory tree $dir for *.txt files 
search directory tree $dir for *.txt files 
search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files 
search directory tree `myapp.app' for directories whose name is UNK_START headers UNK_END and delete them 
search directory tree `myapp.app' for directories whose name is UNK_START headers UNK_END and delete them 
search directory tree `myapp.app' for directories whose name is UNK_START headers UNK_END and delete them 
search directory tree `myapp.app' for directories whose name is UNK_START headers UNK_END and delete them in an optimized way 
search directory tree `myapp.app' for directories whose name is UNK_START headers UNK_END and delete them in an optimized way 
search directory tree `foo' for files named `headers' 
search directory trees /tmp and /var/tmp for UNK_START testfile.txt UNK_END 
search directory trees /usr/local/man and /opt/local/man for files whose names begin with UNK_START my UNK_END 
search directory trees /usr/share/doc, /usr/doc, and /usr/locale/doc for files named UNK_START instr.txt UNK_END 
search directory trees foo and bar for .java files 
search every directory except the subdirectory excluded_path for a regular file UNK_START myfile UNK_END 
search everywhere for a file called `httpd.conf' that is newer than /etc/apache-perl/httpd.conf 
search everywhere for directories named `root' 
search everywhere for files changed within the last minute 
search everywhere for hidden file `.profile' 
search file /etc/logs/server.log for lines containing UNK_START error UNK_END 
search file aaa from current direcoty downwards and print it . 
search files UNK_START file-containing-can't UNK_END in the current directory tree for the string UNK_START can't UNK_END 
search folder /home/abcd/ recursively for regular files 
search for UNK_START 000 UNK_END in the hex dump of UNK_START file-with-nulls UNK_END 
search for UNK_START 840 UNK_END in history 
search for UNK_START #define UNK_END in all files in the current directory, excluding backup files *~, *.orig, *.bak 
search for UNK_START 1234567890 UNK_END in every gzip file modified between 8:00 and 9:00 on 2014-04-30 
search for UNK_START config_64bit UNK_END in gzip compressed file UNK_START /proc/config.gz UNK_END 
search for UNK_START log UNK_END in jsmith's home directory tree 
search for UNK_START stock UNK_END in all *.java files from the current directory tree 
search for UNK_START yourstring UNK_END in all files under current directory 
search for UNK_START facebook\|xing\|linkedin\|googleplus UNK_END in UNK_START access-log.txt UNK_END and print a count of the unique entries 
search for UNK_START foo UNK_END in every file in the current directory and number the output 
search for UNK_START ifconfig UNK_END in the output of UNK_START history UNK_END and print 5 lines that precede and follow 
search for UNK_START ifconfig UNK_END in the output of UNK_START history UNK_END and print 5 lines that precede and follow 
search for UNK_START largecalculation UNK_END in all processes owned by the current user 
search for UNK_START pattern UNK_END in UNK_START file UNK_END and join each line by a space 
search for UNK_START pattern UNK_END in all the .c files in the current directory tree 
search for UNK_START vid=123 UNK_END in all compressed files found under UNK_START /my_home UNK_END matching UNK_START *log.20140226* UNK_END 
search for UNK_START whatever UNK_END in all files under /dir directory ensuring white space safety in filenames 
search for UNK_START www.athabasca UNK_END in all files under current directory 
search for $group at the beginning of each line in /etc/group and print the last colon (':') separated entry with comma replaced with newlines 
search for $search in all regular files under $dir directory tree and display the number of bytes of the matched output 
search for UNK_START /usr/bin/perl UNK_END in all regular files under current dirctory tree and also show a long listing of them 
search for UNK_START attached: yes UNK_END in all regular files under UNK_START /proc/scsi UNK_END directory tree matching the path UNK_START /proc/scsi/usb-storage UNK_END and show only the matched filenames 
search for UNK_START dogs UNK_END in all files with UNK_START .txt UNK_END extension under ~/documents and also print the file names 
search for UNK_START it took UNK_END in all $srch1* (case insensitive) files under current directory 
search for UNK_START processed files UNK_END in all $srch* (case insensitive) files under current directory 
search for UNK_START string UNK_END case insensitively in all files under current directory tree and show the matched lines with their filenames 
search for UNK_START text to find UNK_END in all regular files under current directory tree and show the matched files 
search for UNK_START text to find UNK_END in all regular files under current directory tree and show the matched files and matched lines with line numbers 
search for UNK_START birthday UNK_END (case insensitive) in all regular files under ~/documents directory tree and show only the filenames 
search for UNK_START class pool UNK_END in all *.java (case insensitive) files under current directory 
search for UNK_START example UNK_END in all regular files from the current directory 
search for UNK_START example UNK_END in all regular files from the current directory tree 
search for UNK_START example UNK_END in all regular files under current directory tree 
search for UNK_START example UNK_END in all regular files under current directory tree and also print the filenames 
search for UNK_START foo UNK_END in all regular files under UNK_START sources UNK_END directory tree and show the matched lines with filenames 
search for UNK_START foo UNK_END in all the java files under 'dir1', UNK_START dir2 UNK_END and UNK_START dir3 UNK_END directory tree and print only the names of the matched files 
search for UNK_START foo= UNK_END in all *.png files under current directory without descending into *.gif and *.svn directories 
search for UNK_START invalidtemplatename UNK_END in all regular files in directories/files taken from the glob pattern UNK_START ./online_admin/*/utf-8/* UNK_END and show the matched lines with the filenames 
search for UNK_START ireg UNK_END in all php files under UNK_START project UNK_END directory tree and show only the files that match 
search for UNK_START js UNK_END in all files under current directory that match UNK_START some string UNK_END in their names 
search for UNK_START keyword UNK_END in all javascript files under current directory tree excluding all paths that includes the directory UNK_START node_modules UNK_END 
search for UNK_START magic UNK_END in all regular files under current directory tree 
search for UNK_START mystring UNK_END in all *.txt (case insensitive) files under current directory 
search for UNK_START mystring UNK_END in all *.txt files under current directory 
search for UNK_START mystring UNK_END in all *.txt files under current directory 
search for UNK_START mystring UNK_END in all *.txt files under current directory 
search for UNK_START mystring UNK_END in all *.txt files under current directory 
search for UNK_START organic UNK_END in all files with UNK_START .html UNK_END extension under ~/html directory 
search for UNK_START pattern UNK_END in all files with UNK_START .cc UNK_END extension under current directory tree and show the matched lines with line numbers and filenames 
search for UNK_START pattern UNK_END in file UNK_START file UNK_END and print the matched lines by separating them with spaces instead of newlines 
search for UNK_START pattern_to_search UNK_END in all regular files with UNK_START .txt UNK_END extension under UNK_START /directory/containing/files UNK_END and show the matched lines along with filenames 
search for UNK_START some string UNK_END in all *.axvw files under current directory and show the matched lines with line numbers 
search for UNK_START some string UNK_END in all *.axvw files under current directory and show the matched lines with line numbers 
search for UNK_START some string UNK_END in all *js files under current directory and show the matched lines with line numbers 
search for UNK_START some string UNK_END in all *js files under current directory and show the matched lines with line numbers 
search for UNK_START sometext UNK_END in all the files with UNK_START .txt UNK_END extension under current directory tree and also print the filenames 
search for UNK_START specific string UNK_END in all files matching the name pattern UNK_START “*.[txt|txt]” UNK_END under current directory tree 
search for UNK_START string UNK_END case insensitively in all files under current directory tree and show the matched lines with their filenames 
search for UNK_START string-to-find UNK_END in all html files under current directory tree and show the matched lines with their filenames 
search for UNK_START string-to-find UNK_END in all files under current directory tree and show the matched lines with their filenames 
search for UNK_START string-to-find UNK_END in all files under current directory tree matching the regex UNK_START filename-regex.\*\.html UNK_END in their paths and show the matched lines along with the filenames 
search for UNK_START stuff UNK_END in all *,txt files under current directory 
search for UNK_START text UNK_END in all regular files under current directory tree 
search for UNK_START whatiwanttofind UNK_END in all files under current directory 
search for UNK_START “foobar” UNK_END in all files starting with UNK_START ‘ UNK_END and ending with UNK_START ’ UNK_END and contain UNK_START . UNK_END in their names in the entire filesystem and display only the matched files 
search for *pattern* in and below current directory 
search for .bam files anywhere in the current directory recursively 
search for .pdf files 
search for .zip files that are larger than 100m found anywhere in the file system and delete those files. 
search for error in all btree*.c files under current directory 
search for subscription.java under current directory, and go to directory containing it. 
search for a line starting with UNK_START use strict UNK_END in all files with UNK_START .pl UNK_END extension under current directory tree and show the unmatched files only 
search for a pattern UNK_START can't UNK_END in all the files with the name UNK_START file-containing-can't UNK_END in the current directory tree 
search for aaa in all files under current directory and count the number of matches 
search for all *.conf files in entire file system 
search for all *.ogg (case insensitive) files in the $home directory that have an access time of greater than 30 days 
search for all .html files in directory UNK_START www UNK_END and output only the basename (without containing path) of each. 
search for all .mp3 files in the /mnt/usb directory tree 
search for all directories named foo, foo, or any other combination of uppercase and lowercase characters beneath the current directory. 
search for all files and directories named foo, foo, or any other combination of uppercase and lowercase characters beneath the current directory. 
search for all files in the /home directory tree that have the same inode number 
search for all files in the current directory recursively whose names begin with UNK_START linkin park UNK_END 
search for all files in the current directory recursively whose names contain "linkin park", ignoring the case 
search for all files in the current directory recursively whose names contain "linkin", ignoring the case 
search for all files in the current directory recursively whose names end with UNK_START linkin park UNK_END 
search for all files named foo, foo, or any other combination of uppercase and lowercase characters beneath the current directory. 
search for all files newer than file /tmp/t 
search for all files newer than file /tmp/t1 but not newer than file /tmp/t2 
search for all files not newer than file /tmp/t 
search for all files owned by user www-data that are not larger than 100kb 
search for all files that end in UNK_START .conf UNK_END 
search for all files with either UNK_START sitesearch UNK_END or UNK_START demo UNK_END in their path names 
search for all files with either UNK_START sitesearch UNK_END or UNK_START demo UNK_END in their path names 
search for all files with either UNK_START sitesearch UNK_END or UNK_START demo UNK_END in their path names 
search for all files with same inode num 
search for all files with the same inode number 41525360 
search for all jpg images on the system and archive them 
search for all non-hidden files 
search for all the directories in directories taken from the glob pattern UNK_START /path/to/folders/* UNK_END and add the extension UNK_START .mbox UNK_END to all and create directories named UNK_START messages UNK_END inside them 
search for all the directories named UNK_START m? UNK_END under current directory tree, add the extension UNK_START .mbox UNK_END to all, create a UNK_START messages UNK_END directories inside them and move all files with .emlx extension to UNK_START messages UNK_END directory 
search for all the files in man pages and return the manual page for grep 
search for all zero-byte files and move them to the /tmp/zerobyte folder 
search for broken symlinks 
search for case insensitive pattern UNK_START search for me UNK_END in all files that match the name pattern UNK_START *.[!r]* UNK_END under current directory tree 
search for case-insensitive UNK_START string UNK_END in UNK_START log.tar.gz UNK_END 
search for directories that contain the phrase UNK_START foo UNK_END but do not end in UNK_START .bar UNK_END 
search for directory foo ignoring case 
search for empty files 
search for file UNK_START file UNK_END between level 2 and 3 of the directory tree 
search for file UNK_START file UNK_END with minimum depth set to 4 
search for file names with UNK_START bad UNK_END characters in the current directory and delete the files. 
search for filenames matching UNK_START android UNK_END in the current directory and number the output 
search for files UNK_START file1 UNK_END or UNK_START file9 UNK_END 
search for files bigger than 10m 
search for files greater than 20mb under your home directory (/home/user) 
search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one. 
search for files in your home directory which have been modified in the last twenty-four hours 
search for files in your home directory which have been modified in the last twenty-four hours. 
search for files only that end with .php and look for the string $test inside those files 
search for files only that end with .php and look for the string $test inside those files 
search for files only that end with .php and look for the string $test inside those files 
search for files only that end with .php and look for the string $test inside those files 
search for files specifying the maximum depth of the search 
search for files specifying the minimum depth of the search 
search for files that are at least 1.1gb 
search for files that are at least 100mb 
search for files that were accessed less than 5 days ago. 
search for files which are writable by somebody 
search for files which have read and write permission for their owner and group, and which other users can read, without regard to the presence of any extra permission bits 
search for files which have read and write permission for their owner, and group, but which other users can read but not write to. 
search for files whose name is UNK_START filename UNK_END and whose permissions are 777 
search for files whose size is between 100 kilobytes and 500 kilobytes 
search for files with UNK_START demo UNK_END in their names and UNK_START sitesearch UNK_END in their path names 
search for files with UNK_START sitesearch UNK_END in their names and UNK_START demo UNK_END in their path names 
search for files/directories named UNK_START filename.txt UNK_END under UNK_START /path/to/folder UNK_END directory tree without traversing into directories that contain the string UNK_START ignored_directory UNK_END in their paths 
search for files/directories named UNK_START filename.txt UNK_END under current directory tree without traversing into UNK_START ./ignored_directory UNK_END 
search for files/directories that are readable for everybody, have at least one write bit set but are not executable for anybody 
search for files/directories which are writable by both their owner and their group 
search for files/directories which are writable by both their owner and their group 
search for files/directories which are writable by either their owner or their group 
search for files/directories which are writable by either their owner or their group 
search for files/directories which are writable by either their owner or their group 
search for files/directories which are writable by somebody (their owner, or their group, or anybody else) 
search for files/directories which have read and write permission for their owner, and group and only read permission for others 
search for files/directories which have read and write permission for their owner, and group and only read permission for others 
search for files/directories with a case insensitive .txt extension in entire file system 
search for files/directories with the case insensitive pattern anaconda* in /var/log 
search for files/directories with the case insensitive pattern anaconda.* in /var/log 
search for files/directories with the case insensitive pattern anaconda.* in /var/log directory and create an archive (file.tar) of the last file found 
search for files/directories with the case insensitive pattern anaconda.* in var/log directory 
search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found 
search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of the last file found 
search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file1.tar) of the last block of files sent to xargs 
search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found 
search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety 
search for first match of the case insensitive regex UNK_START oyss UNK_END in all *.txt files under current directory and print the file paths along with the matches 
search for first match of the case insensitive regex UNK_START re UNK_END in all *.coffee files under current directory 
search for first match of the case insensitive regex UNK_START re UNK_END in all *.coffee files under current directory and print the file paths along with the matches 
search for hidden files non-recursively 
search for line 111 in file UNK_START active_record.rb UNK_END with 2 lines of context 
search for line number 111 in file UNK_START active_record.rb UNK_END 
search for lines that have zero or more whitespace characters before UNK_START http:// UNK_END and number the uniquely sorted output 
search for non-empty files 
search for occurrences of string UNK_START main( UNK_END in the .c files from the current directory tree 
search for occurrences of string UNK_START main( UNK_END in the .c files from the current directory tree 
search for regular expression UNK_START expr UNK_END in all .c and .h files from the current directory tree 
search for regular file foo ignoring case 
search for regular files of the grooup UNK_START users UNK_END in the file system 
search for regular files of the user bluher in the file system 
search for symlinks pointing to anywhere within /mnt/oldname/ 
search for the perl regex UNK_START [\x80-\xff] UNK_END in *.xml files under current directory tree 
search for the case insensitive pattern UNK_START pattern UNK_END in all files under current directory tree and display the matched files 
search for the case insensitive pattern UNK_START search for me UNK_END in all files with '.p', UNK_START .w UNK_END and UNK_START .i UNK_END extension under current directory tree without descending into UNK_START .svn UNK_END and UNK_START pdv UNK_END directories 
search for the case insensitive regex UNK_START string_to_search_for UNK_END in all files under current directory 
search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory 
search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory 
search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory 
search for the extended grep regex UNK_START expr UNK_END in all files with UNK_START .c UNK_END and UNK_START .h UNK_END extension under current directory tree 
search for the extended regex expanded by"$month\/$year.*get.*ad=$advertiser http\/1" in the decompressed contents of the /var/log/apache2/access*.gz files that are newer than ./tmpoldfile and older than ./tmpnewfile 
search for the extened regex UNK_START expr UNK_END in all files with UNK_START .c UNK_END and UNK_START .h UNK_END extension under current directory tree 
search for the files that are owned by user rooter or by user www-data 
search for the files/directories that were modified more than an hour ago 
search for the literal string UNK_START v$process UNK_END in all files under current directory 
search for the pattern UNK_START ^use strict UNK_END in all *.pl files under current directory 
search for the pattern UNK_START search string UNK_END in all the files in the ''/tmp folder and display the matched lines along with the file names 
search for the query UNK_START filename UNK_END in the current directory and any subdirectories 
search for the regex UNK_START +\s\+ UNK_END in file UNK_START in.txt UNK_END and print the matches by replacing newlines with comma (',') 
search for the regex UNK_START \$wp_version = UNK_END in all the regular files that end with UNK_START /wp-includes/version.php UNK_END (case insensitive) in their paths in directories/files taken from the glob pattern UNK_START /home/*//public_html/ UNK_END and show the matched lines along with the file names 
search for the regex UNK_START \$wp_version = UNK_END in all the regular files that end with UNK_START /wp-includes/version.php UNK_END (case insensitive) in their paths in directories/files taken from the glob pattern UNK_START /var/www/vhosts/*/httpdocs UNK_END and show the matched lines along with the file names 
search for the regex $greppattern in all files with UNK_START .c UNK_END or UNK_START .h UNK_END extension under $searchpath with name pattern $filepat and show the matched line numbers, file names and matched lines 
search for the regex UNK_START ->get(\|#hyphenate UNK_END in all files with UNK_START .pl UNK_END or UNK_START .pm UNK_END extension under UNK_START /users/tom UNK_END directory tree and only show the filenames 
search for the regex UNK_START [0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]* UNK_END in all files under /etc 
search for the regex UNK_START ^error UNK_END in all *.log files under current directory 
search for the regex UNK_START pattern_to_search UNK_END in all files under UNK_START /directory/containing/files UNK_END and show the matched lines as well as the file names 
search for the regex ... in the manual of the find command 
search for the regex ^catalina in the first line of each file under current directory 
search for the regex expanded by the variable $search in all regular files under $dir directory tree 
search for the regex expaned by the variable $search in all regular files under $dir directory tree 
search for the string UNK_START error UNK_END in all xml files in the current working directory tree 
search for the string UNK_START device UNK_END in all regular files in the entire filesystem 
search for the string UNK_START foo UNK_END in *.html files under /usr/src/linux directory 
search for the string UNK_START git UNK_END in all the files under current directory tree excluding paths and names that contain the string UNK_START git UNK_END 
search for the string UNK_START git UNK_END in all the files under current directory tree without traversing into UNK_START .git UNK_END folder and excluding files that have UNK_START git UNK_END in their names 
search for the string UNK_START magic UNK_END in all regular files under current directory tree and display long listing of them 
search for the wp-config.php file in /var/www and one level below 
search for utility UNK_START foo UNK_END in path, display its file type description. 
search history for UNK_START part_of_the_command_i_still_remember_here UNK_END 
search in current directory downwards all files whose owner is aa1 and grop is grp . 
search in current directory downwards all files whose size is 10 bytes ( characters ) . 
search in the current directory and all sub-directories except ./d and any further sub-directories also named d for the file named hi.dat 
search in the current directory and all sub-directories except ./d for the file named hi.dat 
search in the current directory and all sub-directories except ./d for the file named hi.dat. 
search level 3 of the current directory tree for the directories whose pathnames contain UNK_START new parts UNK_END 
search my_folder recursively for text files containing UNK_START needle text UNK_END 
search non-recursively directory tree `myapp.app' for directories whose name is UNK_START headers UNK_END and delete them in an optimized way 
search only for directories 
search only for regular files 
search recursively through /mydir, outputting only the base (leaf) name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash. 
search regular files under ~/mail for string UNK_START linux UNK_END 
search subdirectory `linux' in the current directory for file `teste.tex' 
search the UNK_START katalogi UNK_END directory tree for files named UNK_START wzorzec UNK_END 
search the UNK_START test1 UNK_END directory recursively for regular files 
search the UNK_START test1 UNK_END directory recursively for regular files named UNK_START textfile.txt UNK_END 
search the UNK_START your/dir UNK_END directory for empty subdirectories 
search the UNK_START tmp UNK_END directory for .mp3 files 
search the *.c files residing in the current directory tree for string UNK_START blash UNK_END 
search the *.cc files in the current directory tree for string UNK_START xxx UNK_END 
search the *.cc files in the current directory tree for string UNK_START xxx UNK_END 
search the *.code files from the current directory tree for string UNK_START pattern UNK_END 
search the *.code files from the current directory tree for string UNK_START pattern UNK_END 
search the *.txt files from the current directory tree for UNK_START string UNK_END 
search the ./bin directory recursively for files called UNK_START cp UNK_END 
search the .ver files from the current directory tree for perl regular expression UNK_START model-manufacturer:.\n. UNK_END 
search the .ver files from the current directory tree for string "test_version=' 
search the .c files residing in the lib/ directory tree for lines beginning with UNK_START pyerr UNK_END 
search the .cs files of the current directory tree for string UNK_START content pattern UNK_END 
search the .css files in the /starting/directory tree for UNK_START .exampleclass UNK_END 
search the .java files from the /applications/ directory tree for todo lines 
search the .java files from the /applications/ directory tree for todo lines 
search the .java files from the /applications/ directory tree for todo lines 
search the .java files from the current directory tree for todo lines 
search the .java files from the current directory tree for todo lines 
search the .log files in the current directory tree for string UNK_START the sas system UNK_END 
search the .py files residing in the current directory tree for UNK_START something UNK_END 
search the .sh files in the current directory tree for string UNK_START ksh UNK_END 
search the /applications directory tree for *.app directories 
search the /path directory tree for files matching pattern UNK_START file_name* UNK_END 
search the /path directory tree for files matching pattern UNK_START file_name* UNK_END and containing UNK_START bar UNK_END in their pathnames 
search the /path directory tree for files whose pathnames match pattern UNK_START /path/bar* UNK_END and whose names match pattern UNK_START file_name* UNK_END 
search the /path/bar* directories recursively for files matching pattern UNK_START file_name* UNK_END 
search the /dir directory tree for files whose names match regular expression UNK_START .*2015.*\(album.*\|picture.*\) UNK_END 
search the /dir directory tree for files whose names match regular expression UNK_START 2015.*(album|picture) UNK_END 
search the /etc directory tree for files accessed within the last 24 hours 
search the /etc directory tree for symbolic links 
search the /etc/apache-perl directory tree for files newer than /etc/apache-perl/httpd.conf 
search the /home/bozo/projects directory tree for files modified within the last 24 hours 
search the /home/pankaj directory for regular files whose status has changed within the last 5 minutes 
search the /home/sdt5z/tmp directory tree for files named UNK_START accepted_hits.bam UNK_END 
search the /home/test directory tree for directories and files called UNK_START .ssh UNK_END 
search the /home/user1 directory tree for files whose names end in UNK_START .bin UNK_END 
search the /home/weedly directory tree for regular files named myfile 
search the /home/www directory tree for regular files 
search the /media/shared directory recursively for mp3 and ogg files 
search the /mnt/raid/upload directory tree for files that have been modified within the last 7 days 
search the /mnt/raid/upload directory tree for files that have not been modified within the last 5 days 
search the /myfiles directory tree for files last accessed more than 30 days ago 
search the /myfiles directory tree for files last modified 2 days ago 
search the /myfiles directory tree for files that are 5 512 byte blocks in size 
search the /myfiles directory tree for files whose names contain UNK_START blue UNK_END 
search the /myfiles directory tree for regular files with at least these permissions: 647 
search the /myfiles directory tree for regular files with read and write permissions set for `others' 
search the /path directory recursively for txt files 
search the /path directory tree for files having permissions 777 
search the /path directory tree for files lacking the group writable bit 
search the /path directory tree for files lacking the group writable bit 
search the /path directory tree for files matching pattern UNK_START *.foo UNK_END 
search the /path directory tree for files missing g+w and o+w bits 
search the /path directory tree for files missing g+w or o+w bits 
search the /path directory tree for files that do not have a valid user or group 
search the /path directory tree for regular files 
search the /path tree for all executables 
search the /path/to/dir directory tree for .c files 
search the /path/to/directory tree for regular files modified 61 days ago and then remove them 
search the /root directory recursively for files named UNK_START findcommandexamples.txt UNK_END 
search the /root directory recursively for the regular file named UNK_START myfile UNK_END 
search the /root directory recursively for the regular file named UNK_START myfile UNK_END ignoring UNK_START work UNK_END directories 
search the /root directory recursively for the regular file named UNK_START myfile UNK_END ignoring /root/work/ 
search the /storage/sdcard0/tencent/micromsg/ directory tree for jpg files 
search the /tmp directory tree for files owned by user `ian' 
search the /tmp tree for files between 10kb and 20kb 
search the /tmp/ directory recursively for files matching regular expression UNK_START .*file[0-9]+$ UNK_END 
search the /tmp/ directory recursively for regular files 
search the /usr/ directory tree for files newer than file /tmp/stamp 
search the /usr/bin directory tree for regular files accessed more than 100 days ago 
search the /usr/bin directory tree for regular files modified or created less than 10 days ago 
search the /usr/local/doc directory tree for .texi files 
search the /var/www/ tree for files not owned by user `apache' 
search the /var/www/ tree for files owned by root or unknown group and change their group to UNK_START apache UNK_END 
search the css files found in the current directory tree for string UNK_START foo UNK_END 
search the movies folder in the user's home directory for files larger than 1024 megabytes in size. 
search the xml files from directories /res/values-en-rus and /res/xml for string UNK_START hovering_msg UNK_END 
search the `images' directory tree for regular files 
search the `research' directory and one level below for directories that are not owned by group `ian' 
search the bla directory recursively for *.so files 
search the current directory and all of its sub-directories for the file 'file1'. 
search the current directory and all of its sub-directory for any pdf files being careful to prevent the shell from expanding UNK_START * UNK_END before it's passed to find. 
search the current directory and all of its sub-directory for any pdf files being careful to prevent the shell from expanding anything in UNK_START *.pdf UNK_END before it'ss passed to find. 
search the current directory and all of its sub-directory for any pdf files. 
search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755 
search the current directory and directories below for .sql files 
search the current directory and its sub-directories for any file that has UNK_START bsd UNK_END somewhere in its name. 
search the current directory and two levels below for file `teste.tex' 
search the current directory for html files whose names begin with UNK_START a UNK_END 
search the current directory for php files 
search the current directory for all files with no UNK_START read UNK_END privilege for UNK_START others UNK_END 
search the current directory for all regular files executable by 'user', 'group', and UNK_START others UNK_END 
search the current directory for files whose names start with UNK_START messages. UNK_END ignoring svn and cvs files 
search the current directory for files whose names start with UNK_START messages. UNK_END ignoring svn files 
search the current directory for files whose names start with UNK_START messages. UNK_END ignoring svn, git, and .anythingelseiwannaignore files 
search the current directory for files whose names start with UNK_START messages. UNK_END ignoring svn, git, and .anythingelseiwannaignore files 
search the current directory for files whose names start with my 
search the current directory for regular files whose names start with my 
search the current directory recursively for *.txt files with lines that match regular expression UNK_START ^string UNK_END 
search the current directory recursively for .m4a files 
search the current directory recursively for .sh files whose names begin with UNK_START new UNK_END 
search the current directory recursively for mov files 
search the current directory recursively for mov files, following symlinks 
search the current directory recursively for directories with the execute permission set for everybody 
search the current directory recursively for files containing UNK_START needle text UNK_END 
search the current directory recursively for files containing UNK_START needle text UNK_END 
search the current directory recursively for files containing UNK_START needle text UNK_END 
search the current directory recursively for files containing UNK_START needle text UNK_END 
search the current directory recursively for files containing UNK_START string UNK_END 
search the current directory recursively for files last modified within the past 24 hours 
search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and UNK_START en UNK_END and UNK_START es UNK_END directories 
search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en* 
search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en* 
search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en* 
search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en* 
search the current directory recursively for files last modified within the past 24 hours ignoring paths ./es* and ./en* 
search the current directory recursively for files whose size is between 10 and 50 mb 
search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx 
search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx 
search the current directory recursively for files writable for `others' 
search the current directory recursively for regular files last accessed 2 days ago 
search the current directory recursively for regular files last accessed 2 minutes ago 
search the current directory recursively for regular files last accessed less than 2 days ago 
search the current directory recursively for regular files last accessed less than 2 minutes ago 
search the current directory recursively for regular files last accessed more than 2 days ago 
search the current directory recursively for regular files last accessed more than 2 minutes ago 
search the current directory recursively for regular files last changed 2 days ago 
search the current directory recursively for regular files last changed less than 2 days ago 
search the current directory recursively for regular files last changed more than 2 days ago 
search the current directory recursively for regular files last modified less than 2 days ago 
search the current directory recursively for regular files last modified more than 2 days ago 
search the current directory recursively for regular files modified 2 days ago 
search the current directory recursively for regular files that have been changed less than 3 days ago and print 5 of them. 
search the current directory recursively for regular files with the extension given as variable $extension 
search the current directory recursively for regular files with the read permission set for everybody 
search the current directory recursively for regular files, skipping hidden files in the current directory 
search the current directory recursively for text files containing at least one character 
search the current directory recursively for text files containing at least one character 
search the current directory recursively for the largest files 
search the current directory tree for *.c and *.asm files, ignoring the case 
search the current directory tree for *.c and *.sh files 
search the current directory tree for *.conf and *.txt files 
search the current directory tree for *.wav files that have UNK_START export UNK_END in their pathnames 
search the current directory tree for *bash* files 
search the current directory tree for *bash* files printing them on a single line 
search the current directory tree for *cache, *xml, and *html files 
search the current directory tree for .ver files 
search the current directory tree for .aux files 
search the current directory tree for .rb files ignoring .vendor directories 
search the current directory tree for .rb files ignoring the UNK_START ./vendor UNK_END subdirectory 
search the current directory tree for php files changed less than 14 days ago 
search the current directory tree for txt files skipping hidden ones 
search the current directory tree for a regular file named UNK_START file_name UNK_END 
search the current directory tree for all .java files newer than the file build.xml 
search the current directory tree for all .java files that were last modified at least 7 days ago 
search the current directory tree for all files except svn ones 
search the current directory tree for all files except svn ones 
search the current directory tree for all files except svn ones 
search the current directory tree for all files matching either pattern UNK_START *.rb UNK_END or pattern UNK_START *.py UNK_END 
search the current directory tree for all files matching pattern UNK_START *.rb UNK_END 
search the current directory tree for all files matching regular expression UNK_START .*\.rb$ UNK_END 
search the current directory tree for all image files 
search the current directory tree for all regular files matching pattern UNK_START *.rb UNK_END 
search the current directory tree for all regular non-hidden files except *.o 
search the current directory tree for an html file having the text UNK_START web sites UNK_END in it 
search the current directory tree for directories 
search the current directory tree for directories 
search the current directory tree for directories lacking execute permissions for user, group, or others 
search the current directory tree for directories that can be opened by noone 
search the current directory tree for executable files 
search the current directory tree for executable files and searchable directories 
search the current directory tree for executable regular files 
search the current directory tree for executable regular files 
search the current directory tree for file UNK_START a.txt UNK_END 
search the current directory tree for file `teste.tex' 
search the current directory tree for filenames matching the pattern UNK_START [mm][yy][ff][ii][ll][ee]* UNK_END 
search the current directory tree for files aaa and bbb 
search the current directory tree for files and directories called UNK_START test UNK_END 
search the current directory tree for files and directories whose names begin with UNK_START pro UNK_END 
search the current directory tree for files and directories whose names do not end in UNK_START .exe UNK_END and UNK_START .dll UNK_END 
search the current directory tree for files and directories whose names do not end in UNK_START .exe UNK_END and UNK_START .dll UNK_END 
search the current directory tree for files and directories whose names do not end in UNK_START .exe UNK_END and UNK_START .dll UNK_END 
search the current directory tree for files and directories whose names do not end in UNK_START exe UNK_END and UNK_START dll UNK_END 
search the current directory tree for files and directories with permissions 775 
search the current directory tree for files containing UNK_START album UNK_END and UNK_START vacations UNK_END in their names and not containing UNK_START 2015 UNK_END 
search the current directory tree for files containing UNK_START bash UNK_END in their names 
search the current directory tree for files containing UNK_START needle UNK_END in their names 
search the current directory tree for files containing UNK_START sh UNK_END in their names 
search the current directory tree for files containing UNK_START string UNK_END in their path names 
search the current directory tree for files executable by at least someone 
search the current directory tree for files larger than 10mb but smaller than 50mb 
search the current directory tree for files last accessed more than 10 days ago 
search the current directory tree for files matching regular expression UNK_START .*myfile[0-9][0-9]? UNK_END 
search the current directory tree for files matching regular expression UNK_START ^myfile[0-9][0-9]?$ UNK_END 
search the current directory tree for files matching sed regular expression UNK_START .*myfile[0-9]\{1,2\} UNK_END 
search the current directory tree for files modified less than 5 days ago 
search the current directory tree for files named UNK_START accepted_hits.bam UNK_END 
search the current directory tree for files named UNK_START accepted_hits.bam UNK_END 
search the current directory tree for files named "somename", case insensitive 
search the current directory tree for files named UNK_START subscription.java UNK_END 
search the current directory tree for files that are less than 50kb 
search the current directory tree for files whose name is ".note", case insensitive 
search the current directory tree for files whose name is ".note", case insensitive 
search the current directory tree for files whose name is ".note", case insensitive 
search the current directory tree for files whose name is ".note", case insensitive 
search the current directory tree for files whose names are not UNK_START a.txt UNK_END 
search the current directory tree for files whose names begin with UNK_START my UNK_END and end with UNK_START p UNK_END followed by any character 
search the current directory tree for files whose names begin with UNK_START my UNK_END and end with UNK_START p UNK_END followed by any character, ignoring path names containing UNK_START test UNK_END 
search the current directory tree for files whose names begin with UNK_START my UNK_END 
search the current directory tree for files whose names contain UNK_START textforrename UNK_END 
search the current directory tree for files whose names contain UNK_START bills UNK_END 
search the current directory tree for files whose names do not end in UNK_START .exe UNK_END and UNK_START .dll UNK_END 
search the current directory tree for files whose names do not end in UNK_START .exe UNK_END and UNK_START .dll UNK_END 
search the current directory tree for files whose names do not end in UNK_START 1 UNK_END and UNK_START 2 UNK_END 
search the current directory tree for files whose names end in UNK_START rb UNK_END or UNK_START js UNK_END 
search the current directory tree for files whose names end in UNK_START rb UNK_END or UNK_START js UNK_END 
search the current directory tree for files whose names end in UNK_START rb UNK_END or UNK_START js UNK_END and which contain string UNK_START matchnamehere UNK_END 
search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case 
search the current directory tree for files whose names start with UNK_START f UNK_END 
search the current directory tree for files without UNK_START test UNK_END in their path names 
search the current directory tree for hidden files 
search the current directory tree for hidden files skipping .htaccess 
search the current directory tree for regular .mkv files 
search the current directory tree for regular files changed less than 1 day ago 
search the current directory tree for regular files changed on the 10th of september 
search the current directory tree for regular files lacking read permissions for user, group, or others 
search the current directory tree for regular files last changed more than 14 days ago 
search the current directory tree for regular files modified within the past 24 hours whose names do not end with UNK_START .ds_store UNK_END 
search the current directory tree for regular files modified within the past 24 hours whose names do not end with UNK_START .ds_store UNK_END 
search the current directory tree for regular files named `doc.txt' and print UNK_START found UNK_END for each of them 
search the current directory tree for regular files omitting directory `omit-directory' 
search the current directory tree for regular files omitting directory `omit-directory' 
search the current directory tree for regular files omitting directory `omit-directory' 
search the current directory tree for regular files omitting directory `omit-directory' 
search the current directory tree for regular files owned by user UNK_START www UNK_END 
search the current directory tree for regular files that can be read by noone 
search the current directory tree for regular files that contain UNK_START string UNK_END 
search the current directory tree for regular files that contain UNK_START string UNK_END 
search the current directory tree for regular files that contain UNK_START string UNK_END 
search the current directory tree for regular files that were accessed $ftime days ago 
search the current directory tree for regular files that were changed $ftime days ago 
search the current directory tree for regular files that were modified $ftime days ago 
search the current directory tree for regular files whose names begin with UNK_START orapw UNK_END 
search the current directory tree for regular files whose names end in UNK_START .shtml UNK_END or UNK_START .css UNK_END 
search the current directory tree for regular files whose names end in UNK_START .shtml UNK_END or UNK_START .css UNK_END 
search the current directory tree for regular files whose names end in UNK_START .shtml UNK_END or UNK_START .css UNK_END 
search the current directory tree for regular files whose names end in UNK_START .shtml UNK_END or UNK_START .css UNK_END 
search the current directory tree for regular files whose names end in UNK_START log UNK_END 
search the current directory tree for regular files whose names end with "keep.${suffix}", where $suffix is a shell variable 
search the current directory tree for regular files whose names match pattern $x 
search the current directory tree for regular files whose names match regular expression UNK_START .+-[0-9]+x[0-9]+\.jpg UNK_END 
search the current directory tree for symbolic links named UNK_START link1 UNK_END 
search the current directory tree for symbolic links to files matching pattern UNK_START */test* UNK_END 
search the current directory tree for symbolic links to files matching pattern UNK_START *test* UNK_END 
search the current directory tree for symlinks pointing at other symlinks 
search the current directory tree for symlinks whose contents match pattern UNK_START *sysdep.c UNK_END 
search the current directory tree for the files with extension UNK_START trc UNK_END and list them if they are more than three days old 
search the current directory tree for the files with extension UNK_START trc UNK_END and remove them if they are more than three days old 
search the current directory tree for the files with extension UNK_START trc UNK_END and remove them if they are more than three days old 
search the current directory tree recursively for the regular file named UNK_START myfile UNK_END ignoring UNK_START work UNK_END and UNK_START home UNK_END directories 
search the current directory up to depth level 2 for files and directories 
search the current directory, except the subdirectory tree ".svn", for files whose name is UNK_START foo.cpp UNK_END 
search the current user's home directory and below for all .png files and copy those files in the directory imagesdir. 
search the current user's home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified. 
search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified. 
search the current user's home directory and its sub-directories for any files accessed after alldata.tar was last accessed and add them to that same tar archive. 
search the current working directory tree for files whose names start with UNK_START filea_ UNK_END or UNK_START fileb_ UNK_END 
search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user. 
search the directories given as arguments to the bash script for files whose name is not UNK_START ss UNK_END 
search the directories matching pattern UNK_START /path/to/some/dir/*[0-9] UNK_END for level 1 subdirectories 
search the directories that match pattern UNK_START /path/to/directory/folder{?,[1-4]?,50} UNK_END for .txt files 
search the directory $path recursively for regular files with the given $extension 
search the directory given as variable $d for empty subdirectories 
search the directory tree /tmp for regular files using zero delimiter for output 
search the directory tree given as variable $dir for regular files 
search the directory tree given as variable $root_dir for regular files 
search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser. 
search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems. 
search the entire file hierarchy for files ending in UNK_START .old UNK_END and delete them. 
search the entire file hierarchy for files ending in UNK_START .old UNK_END and delete them. 
search the entire file hierarchy for files ending with UNK_START ~ UNK_END and print all matches except for those with UNK_START /media UNK_END in their pathnames. 
search the entire file hierarchy for files larger than 100 megabytes and delete them. 
search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file. 
search the entire file system for .jpg files. 
search the entire file system for any file that is writable by other. 
search the entire system for suid or sgid files 
search the file hierarchy for files larger than 100000 kb without searching any mounted removable media 
search the file system for regular files whose names are shorter than 25 characters 
search the file system for regular files whose names are shorter than 25 characters 
search the file system for regular files whose names are shorter than 25 characters 
search the file system for regular files whose names are shorter than 25 characters 
search the files from directory tree UNK_START dirname UNK_END for string UNK_START foo UNK_END 
search the files from directory tree UNK_START dirname UNK_END for string UNK_START foo UNK_END 
search the files from the current directory tree for UNK_START chrome UNK_END 
search the files from the current directory tree for UNK_START chrome UNK_END 
search the files from the current directory tree for UNK_START chrome UNK_END 
search the files from the current directory tree for UNK_START chrome UNK_END 
search the files from the current directory tree for UNK_START foo UNK_END 
search the files from the current directory tree for UNK_START foo UNK_END 
search the files from the current directory tree for UNK_START foo UNK_END 
search the files from the current directory tree for UNK_START foo UNK_END 
search the files from the current directory tree for text UNK_START documentclass UNK_END 
search the files in the current directory tree for lines containing string UNK_START vds admin UNK_END 
search the files in the current directory tree that are named UNK_START string to be searched UNK_END for UNK_START text UNK_END 
search the files of the current directory tree for string UNK_START searched-string UNK_END 
search the files residing in the current directory tree whose names contain UNK_START bills UNK_END for UNK_START put UNK_END 
search the files residing in the current directory tree whose names contain UNK_START bills UNK_END for UNK_START put UNK_END 
search the files residing in the current directory tree whose names contain UNK_START bills UNK_END for UNK_START put UNK_END 
search the files under and below /directory/containing/files for UNK_START pattern_to_search UNK_END 
search the files under and below /directory/containing/files for UNK_START text to search UNK_END 
search the first 300 commands in history containing UNK_START scp UNK_END and ending in UNK_START important UNK_END 
search the given $directory for files with permissions stored in $permissions 
search the home directory for ogg and mp3 files 
search the home directory for filenames starting with UNK_START xx UNK_END except for UNK_START xxx UNK_END files 
search the home directory for files accessed more than 10 days ago 
search the home directory for files whose names begin with UNK_START test UNK_END 
search the home directory tree for .tar.gz files newer than file UNK_START filename UNK_END 
search the home directory tree for all .txt files 
search the home directory tree for files last modified less than 2 days ago or newer than file UNK_START filename UNK_END 
search the home directory tree for files last modified more than a year ago 
search the home directory tree for files matching pattern UNK_START *.txt UNK_END 
search the home directory tree for files modified less than 7 days ago 
search the home directory tree for files modified less than a day ago 
search the home directory tree for files owned by sam 
search the home directory tree for regular files modified yesterday 
search the home directory tree for video files 
search the home directory tree for video files 
search the local subdirectory tree of the current working directory and the /tmp directory tree for directories named mydir 
search the path given as the $absolute_dir_path variable for regular files 
search the regular files from directory tree UNK_START directory_name UNK_END for UNK_START word UNK_END and print the names of the matched files 
search the regular files from directory tree UNK_START folder_name UNK_END for UNK_START your_text UNK_END 
search the regular files of the current directory tree for string UNK_START foo UNK_END 
search the regular files of the current directory tree for string UNK_START foo UNK_END 
search the regular files of the current directory tree for string "stringyouwannafind", ignoring the case 
search the regular files of the current directory tree for string UNK_START stuff UNK_END 
search the regular files of the current directory tree for string UNK_START texthere UNK_END 
search the regular files of the current directory tree for string UNK_START whatever UNK_END 
search the regular files of the current directory tree for string UNK_START whatever UNK_END 
search the regular files of the current directory tree for string UNK_START whatever UNK_END 
search the specified group for the given "filename 
search the specified user for the given UNK_START filename UNK_END 
search the src/ directory recursively for .c and .h files 
search the system for *.rpm files ignoring removable media 
search the system for directories named UNK_START needle UNK_END 
search the system for files and directories owned by group `managers' 
search the system for files and directories owned by user `admin' 
search the system for files named "findcommandexamples.txt", ignoring the case 
search the system for files whose names begin with letters 'a', 'b', or UNK_START c UNK_END 
search the system for regular files whose names are UNK_START filename UNK_END ignoring the case 
search the system for the file UNK_START myfile UNK_END ignoring permission denied errors 
search the system for the file “testfile.txt” 
search the system for the file “testfile.txt” ignoring the case 
search the xargstest/ directory recursively for files matching pattern UNK_START file?? UNK_END 
search the ~ and `music' directory trees for .mp3 files 
search the ~/books directory recursively for files named UNK_START waldo UNK_END 
search the ~/books directory recursively for regular files named UNK_START waldo UNK_END 
search three folders named foo, bar, and baz for all UNK_START *.rb UNK_END files 
search through the /usr directory for all files that begin with the letters chapter, followed by anything else. 
search through the /usr/local directory for files that end with the extension .html, and print the file locations. 
search user1's home directory tree for *.bin files 
searches for UNK_START something UNK_END in a large file and prints the matching line 
searches manual pages which descriptions contain 'postscript', and prints name and description of only ones that contain any-cased UNK_START png UNK_END pattern. 
searches the manual page names and descriptions 
searches the manual page names and descriptions by UNK_START disk UNK_END keyword. 
searches the manual pages with descriptions in section 3, that name begins with lowercase letter. 
searches through the /usr/local directory for files that end with the extension .html. when these files are found, their permission is changed to mode 644 (rw-r--r--). 
searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. when these files are found, their permission is changed to mode 755 (rwxr-xr-x). 
see all pages in section 3. 
see the word count of every *.txt file in the home directory 
see what files are executable by the file's owner and group 
select everything selected by * without descending into any directories 
send 4 ping packets of size 2 to UNK_START www.google.com UNK_END on a solaris machine 
send 4 ping requests to host "google.comz", displaying only the summary info after the last request completed. 
send 5 ping requests to address 12.34.56.78 and print only the last 2 lines of the summary output. 
send output from find the find command to a file 
send sighup (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary. 
send sigkill signal to process id 16085, killing it instantly. 
send sigkill signal to processes id 18581, 18582, and 18583, killing them instantly. 
send sigterm signal to first process sent to background by the current shell. 
send sigterm signal to last process sent to background by the current shell. 
send sigwinch process to current shell, causing it to update the lines and columns variables which describe the size of the screen/window in characters. 
send term signal to process with id listed in UNK_START /var/run/databasesynchronizerclient.pid UNK_END file 
send a single ping request with a ttl of 1 to UNK_START 192.168.1.1 UNK_END 
send an audible ping to UNK_START 10.100.3.104 UNK_END 
send at most 3 ping requests to UNK_START 8.8.8.8 UNK_END with a timeout of 3 seconds on interface UNK_START eth9 UNK_END 
send one ping request to host whose name or ip address is specified by variable "ip", using network interface eth9. 
send one ping request to host whose name or ip address is specified by variable "remote_machine". 
send one ping request to host with local address in the 10.0.0.x range, with last number specified by variable "i", waiting 1 second for a reply, and output only lines containing UNK_START from UNK_END to standard output. 
send one ping request to host with local address in the 192.168.1.x range, with last number specified by variable "counter", and output only lines containing UNK_START ms UNK_END to standard output. 
send one ping request to local machine. 
send ping requests to UNK_START yourhostname.local UNK_END 
send ping requests to hostname specified by variable UNK_START c UNK_END for 1 second. 
send reverse requests to get domain name for each address in UNK_START my_ips UNK_END list 
send two ping requests to UNK_START www.google.com UNK_END 
sends current job to the background. 
sends current job to the background. 
serach in root directory all files which have more than 2 links. 
serach for all the files containing grep in man pages 
serach for all the files starting with grep in man pages 
serach in current directory downwards all files which have not been modified since last 7 days 
set 444 permission to all regular files under current directory 
set 644 permission to all regular files under /home/my/special/folder directory 
set 644 permission to all regular files under /path 
set 644 permission to all regular files under current directory 
set 644 permission to all regular files under current directory 
set 644 permission to all regular files under current directory 
set 644 permission to all regular files under current directory 
set environment variables using assignments are listed in UNK_START .env UNK_END file and run UNK_START rails UNK_END command with defined environment 
set file permission to 664 and directory permission to 775 for all files and directories under htdocs 
set permission of UNK_START file UNK_END to read only for the owner 
set permission of all files in "img", "js", and UNK_START html UNK_END to 644 
set permissions for all direcotries under /var/www to 755 
set permissions for all regular files under /var/www to 755 
set permissions for directories in `foldername' and its subdirectories to 755 
set permissions for files in `foldername' and its subdirectories to 644 
set permissions for files in `foldername' to 777 
set permissions of all directories under UNK_START /opt/lampp/htdocs UNK_END to 711 
set permissions of all directories under UNK_START /opt/lampp/htdocs UNK_END to 755 
set permissions of all directories under UNK_START /path/to/base/dir UNK_END to 755 
set permissions of all files under UNK_START /opt/lampp/htdocs UNK_END to 644 
set permissions of command UNK_START node UNK_END to 755 
set permissions to 2770 for all directories in the current directory tree 
set permissions to 400 for regular files under the current directory 
set permissions to 500 for directories under the current directory 
set permissions to 600 for regular files under media/ 
set permissions to 600 for regular files under var/ 
set permissions to 644 for all regular files under the current directory tree that have permissions 755 
set permissions to 660 for all regular files in the current directory tree 
set permissions to 700 for directories under media/ 
set permissions to 700 for directories under var/ 
set permissions to 700 for every subdirectory of the current directory 
set permissions to 755 for every subdirectory of the current directory 
set permissions to ug=rw,o= for files inside the ./default/files tree 
set permissions to ug=rw,o= for files under the $d directory tree 
set permissions to ug=rwx,o= for directories inside the ./default/files tree 
set permissions to ug=rwx,o= for directories under the $d directory tree 
set prompt to the system host name and history number 
set read, write and execute permission for all (owner, group, other) for the files/directories in foldername directory tree 
set shell option 'checkwinsize'. 
set shell option 'dotglob'. 
set shell option 'histverify'. 
set the bash environmental variable UNK_START prompt_command UNK_END to save the output of the last executed command to variable UNK_START last UNK_END and file '/tmp/x" 
set the environment variable UNK_START display UNK_END to the system host name followed by UNK_START :0 skype UNK_END 
set the environment variable UNK_START display UNK_END to the system host name followed by UNK_START :0 skype UNK_END 
set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian 
set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/x11r6/bin, usr/sbin/ 
set the group to UNK_START username UNK_END for all files with gid=1000 in the current directory tree 
set the host name to UNK_START myservershostname UNK_END 
set the host name to the contents of UNK_START /etc/hostname UNK_END 
set the modification timestamp of file UNK_START filename UNK_END to specified date/time. 
set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x 
set the permissions of all directories inside the current directory tree to ug=rwx,o= 
set the read bit for UNK_START other UNK_END on all *rc.conf files in the current directory tree 
set the setgid bit on all directories in the repository UNK_START /git/our_repos UNK_END 
set the setup connection timeout to 3 seconds for connecting to UNK_START user@ip UNK_END via ssh 
set the shell prompt to UNK_START host:pwd> UNK_END 
set the system date to sat may 11 06:00:00 idt 2013 
set the timestamp of b to the same one as a 
set the value of UNK_START to_sort UNK_END to UNK_START $1 UNK_END in a subshell which no longer exists after the pipeline completes 
set the variable UNK_START me UNK_END to the name of the running script, or shell, login shells have a hyphen appended to the beginning of the name, such as "-bash". 
set the variable UNK_START me UNK_END to the name of the running script. 
set timestamp of b to the timestamp in stat format specified by variable UNK_START old_time UNK_END 
set timestamp of all php files in current directory to date specified. 
set timestamp of old_file.dat to specified timestamp. 
set trace prompt to print seconds, nnoseconds, script name, and line number 
set trace prompt to print seconds.nanoseconds 
set up ssh connection forwarding in the background with no terminal or command execution from localhost port 8888 to UNK_START proxyhost UNK_END port 8888 and a reverse connection from UNK_START officefirewall UNK_END port 22222 to UNK_START localhost UNK_END port 22 
set up a local ssh tunnel from port 80 to port 3000 
set up a local ssh tunnel from port 80 to port 3000 
set up a remote port forward from port 10022 on host UNK_START server UNK_END to port 22 on localhost 
set up local port forwards in the background with no terminal or command execution from port 4431 to host UNK_START www1 UNK_END port 443 and port 4432 to host UNK_START www2 UNK_END port 443 via the host UNK_START colocatedserver UNK_END 
set variable UNK_START architecture UNK_END to machine architecture, ie. x86_64 
set variable UNK_START extract_dir UNK_END to list of top-level directories and files contained in tar archive specified by variable file. 
set variable UNK_START filename UNK_END to only the name of document specified by url, in this case UNK_START pic.jpg UNK_END 
set variable UNK_START finalname UNK_END to the second-to-last slash-separated path component of variable UNK_START path UNK_END 
set variable UNK_START fname UNK_END to the basename of path specified in variable "f", that is remove everything up to the last slash if present. 
set variable UNK_START file UNK_END to the base name of first argument to script or function, that is the part following the last slash. 
set variable UNK_START file UNK_END to the base name of first argument to script or function, that is the part following the last slash. 
set variable UNK_START path UNK_END to name of current directory (without the containing directories) converted to lowercase. 
set variable UNK_START path UNK_END to name of current directory (without the containing directories). 
set variable UNK_START rav UNK_END to the contents of UNK_START var UNK_END spelled backwards. 
set variable bzip2_cmd to the full path of command UNK_START bzip2 UNK_END 
set variable gzip to the full path of command UNK_START gzip UNK_END 
set variable os to the name of the operating system, ie. UNK_START linux UNK_END 
set variable os to the name of the operating system, ie. UNK_START linux UNK_END 
set variable ping to 1 if it's possible to ping host address, to 0 otherwise. 
set variable packetloss to first digit of percentage of packet loss occurring when pinging host specified by testip 
set variable value to current kernel release name. 
sets UNK_START extglob UNK_END shell option. 
sets UNK_START extglob UNK_END shell variable. 
sets UNK_START globstar UNK_END shell option. 
sets shell option 'dotglob'. 
sets shell option 'extglob'. 
sets shell option 'globstar'. 
sets shell option 'nounset'. 
sets shell option 'nullglob'. 
sets shell options UNK_START extglob UNK_END and 'nullglob'. 
sets shell options UNK_START globstar UNK_END and 'nullglob'. 
sets shell options 'globstar', UNK_START dotglob UNK_END and 'nullglob'. 
setup a local ssh tunnel from port 1234 to UNK_START remote2 UNK_END port 22 via connection to UNK_START remote1 UNK_END as UNK_START user1 UNK_END on port 45678 
show a listing of files not modified in over 20 days or not accessed in over 40 days 
show a long listing of files not modified in over 20 days or not accessed in over 40 days 
show a long listing of the latest file or directory under current directory 
show all files in /etc that are owned by root have been modified within the last minute 
show all files in user's home directory that have read, write and execute permissions set for user, group and others. 
show all files that have not been accessed in the $home directory for 30 days or more 
show all running processes with a name matching UNK_START postgres UNK_END 
show all values (without the names) of variables whose name or value contains UNK_START variable_name UNK_END 
show all variables whose name or value contains "path", sorted in reverse alphabetical order. 
show current date in UNK_START %y-%m-%d UNK_END format 
show directory sizes in kb and sort to give the largest at the end 
show directory sizes in kb and sort to give the largest at the end 
show file type information for all regular files under UNK_START /home UNK_END directory tree 
show file type information for files in /usr/bin 
show filename and filetype description of all php files in all directories contained in current directory whose name or filetype description includes UNK_START utf UNK_END 
show filename and filetype description of all php files in current directory whose name or filetype description includes UNK_START utf UNK_END 
show files in /home owned by group `test' 
show find's version 
show human-readable file type description of file UNK_START /mnt/c/boot.ini UNK_END 
show logged in users with idle time of each one 
show long listing of current directory by deleting all digits from the output 
show ls's detailed output for all files named UNK_START something UNK_END 
show manual for the find command 
show manual of the find command 
show manual of the find utility 
show manual page for the find utility 
show manual page of find 
show manual page of find utility 
show process tree with command-line arguments of a process that has id 20238. 
show system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type. 
show the current utc date in UNK_START %y-%m-%dt%k:%m:%s%z UNK_END format 
show the date in default format for tomorrow + 2 days + 10 minutes 
show the epoch in default date/time format 
show the explanation of find's debugging options 
show the files or directories in the current directory whose names are not UNK_START mycprogram.c UNK_END 
show the last 10 .conf files found by `find' in the /etc directory 
show the last 10 .conf files found by `find' in the /etc directory and 1 level below 
show the list of all files on the system whose names do not end in UNK_START .c UNK_END 
show the list of directories in the /mnt/raid directory tree 
show the list of files larger than 100 mb 
show the list of files modified less than a minute ago 
show the list of files modified more than 31 days ago 
show the list of files that are not owned by user wnj or are not newer than file `ttt' 
show the list of files that are owned by user wnj or are newer than file `ttt' 
show the list of user wnj's files that are newer than file `ttt' 
show the number of lines for each .php and .phtml file in the current directory tree 
show the number of lines for each php file in the current directory tree 
show the number of regular files in the current directory tree 
show the subdirectories of the current directory 
show the subdirectories of the current directory 
show the value of variable "list", discarding consecutive duplicates and adding number of occurrences at the beginning of each line. 
show version information of the find utility 
show what content owned by root has been modified within the last day 
show who is logged on 
shows mac address of network interface eth0. 
shows only process trees rooted at processes of this user. 
shows size of compressed file in .bz2 archive. 
shows state of UNK_START extglob UNK_END shell option. 
shows state of UNK_START globstar UNK_END shell option. 
shows state of shell option 'extglob'. 
shows status of a shell option 'compat31'. 
shows status of a shell option 'dotglob'. 
shows status of a shell option 'nullglob'. 
shows strings that not match regex UNK_START ^($|\s*#|\s*[[:alnum:]_]+=) UNK_END 
silently and recursively change the ownership of all files in the current directory to UNK_START www-data UNK_END 
silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in UNK_START line UNK_END variable 
silently read a line from standard input into variable UNK_START reply UNK_END without backslash escapes and using the prompt $'press enter to continue...\n' 
silently read a line into variable UNK_START passwd UNK_END with prompt UNK_START enter your password: UNK_END 
silently read a single character from standard input into variable UNK_START reply UNK_END without backslash escapes, with a timeout of 5 seconds, and using the prompt $'press any key or wait 5 seconds to continue...\n' 
silently read a single character from standard input into variable UNK_START key UNK_END without backslash escapes and using the prompt $'press any key to continue...\n' 
silently read a single character into variable UNK_START reply UNK_END 
silently read exactly 1 character ignoring any delimiters into variable UNK_START select UNK_END 
silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $'press escape to continue...\n' 
simulate a full login 
sort UNK_START $file UNK_END and output the result to UNK_START $file UNK_END 
sort UNK_START , UNK_END delimited lines in UNK_START file UNK_END by the first field preserving only unique lines 
sort UNK_START : UNK_END delimited lines in UNK_START test.txt UNK_END by the first and third field preserving only unique lines 
sort UNK_START file UNK_END using a buffer with a size 50% of main memory 
sort UNK_START file1.txt UNK_END and output the result to UNK_START file1.txt UNK_END 
sort UNK_START some_data UNK_END by the first and second UNK_START ; UNK_END delimited entries and stabilizing the sort 
sort UNK_START some_data UNK_END by the first and second UNK_START ; UNK_END delimited entries, outputing unique lines and stabilizing the sort 
sort a file UNK_START file UNK_END preserving only unique lines and change the file in-place 
sort all directories under current directory placing the file with least modification time at first 
sort all directory names matching folder_* and go to the last one. 
sort all files/directories under current directory according to modification time and print only the recent 7 of them 
sort and compare files UNK_START $def.out UNK_END and UNK_START $def-new.out UNK_END 
sort and display the file name and creation month of top 11 files in the entire file system (sort in the order of month ) 
sort and print each unique line in UNK_START myfile.txt UNK_END 
sort and remove duplicate lines in the output of UNK_START finger UNK_END 
sort content of files UNK_START file1 UNK_END and UNK_START file2 UNK_END by second of dot-separated fields. 
sort file UNK_START a.csv UNK_END by the first comma separated value of each line and print only unique entries 
sort file UNK_START file UNK_END by line 
sort file UNK_START foo.txt UNK_END by line to standard output 
sort file pointed by variable $filename, removing duplicate entries but ignoring the last n characters of each line. 
sort file.txt ignoring the last 10 characters of each line. 
sort file1 and file2 then display differences between them. 
sort lines in UNK_START file UNK_END to standard output preserving only unique lines 
sort lines in UNK_START set1 UNK_END and UNK_START set2 UNK_END to standard output preserving only unique lines 
sort numerically and compare files UNK_START ruby.test UNK_END and UNK_START sort.test UNK_END 
sort standard input in alphabetical order 
sort strings of UNK_START test.txt UNK_END file by second from the end field 
sort tab separated file UNK_START file UNK_END using a version sort for field 6 and a numeric sort for field 7 
sort the contents of file "ips.txt", eliminate duplicate entries, and prefix each entry with number of occurrences. 
sort the lines of the file 'inputfile', keep only the uniq lines and change it in-place 
sort the lines of the file UNK_START temp.txt UNK_END and change it in-place 
sort the lines of the file UNK_START temp.txt UNK_END and change it in-place 
sorts content of the $tmp file and filters out all strings with ':0'. 
split UNK_START $1 UNK_END into files of at most UNK_START $2 UNK_END or default 10000 using a numeric suffix of length 6 
split UNK_START $1 UNK_END into files of at most UNK_START $2 UNK_END or default 10000 using a numeric suffix of length 6 and suffix UNK_START ${tdir}/x UNK_END 
split UNK_START $filename UNK_END into files with at most 20 lines each with a prefix UNK_START xyz UNK_END 
split UNK_START $infile UNK_END into files of at most UNK_START $splitlimt UNK_END with a numeric suffix and a prefix UNK_START x_ UNK_END 
split UNK_START $original_file UNK_END into files of at most UNK_START $max_lines_per_chunk UNK_END lines each with a prefix UNK_START $chunk_file_prefix UNK_END 
split UNK_START $source_file UNK_END into files of at most 100 lines each 
split UNK_START $file UNK_END into files with at most 1000 lines each and use a prefix length of 5 
split UNK_START ${fspec} UNK_END into 6 files with about equal number of lines each and use prefix UNK_START xyzzy. UNK_END 
split UNK_START /etc/gconf/schemas/gnome-terminal.schemas UNK_END into 1000000 files of about equal size 
split UNK_START /path/to/large/file UNK_END into files with at most 50000 lines and use prefix UNK_START /path/to/output/file/prefix UNK_END 
split UNK_START /tmp/files UNK_END into files of at most 1000 lines each 
split UNK_START /usr/bin/cat UNK_END into 10000 files of about equal size 
split UNK_START /usr/bin/firefox UNK_END into 1000 files of about equal size 
split UNK_START /usr/bin/gcc UNK_END into 100000 files of about equal size 
split UNK_START addresss_file UNK_END into files containing at most 20 lines and prefix UNK_START temp_file_ UNK_END 
split UNK_START input_file_name UNK_END into files of at most 500 mib each with a numeric suffix of length 4 and prefix UNK_START input.part. UNK_END 
split UNK_START abc.txt UNK_END into files with at most 1500000000 bytes each and use prefix UNK_START abc UNK_END 
split UNK_START bigfile UNK_END into files of at most 1000 lines each with prefix UNK_START /lots/of/little/files/here UNK_END 
split UNK_START complete.out UNK_END into files with at most UNK_START $lines_per_file UNK_END lines each 
split UNK_START data.tsv UNK_END into files of at most 100 mib preserving lines and use a prefix of UNK_START data.tsv. UNK_END and numeric suffixes 
split UNK_START data.tsv UNK_END into files of at most 5000000 lines each with prefix UNK_START _tmp UNK_END 
split UNK_START database.sql UNK_END into files of at most 100000 lines each with prefix UNK_START database- UNK_END 
split UNK_START date.csv UNK_END into files with at most 100 lines each 
split UNK_START domains.xml UNK_END into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of UNK_START domains_ UNK_END 
split UNK_START file UNK_END into 10 files of about equal size without splitting lines 
split UNK_START file.tar.gz UNK_END into files of size 1024 mb 
split UNK_START file.tar.gz UNK_END into files of size 1024 mb with a prefix of UNK_START file.tar.gz.part- UNK_END 
split UNK_START file.txt UNK_END excluding the first line into files of at most 4 lines each and with a prefix UNK_START split_ UNK_END 
split UNK_START file.txt UNK_END excluding the first line into files with at most 20 lines each and a prefix UNK_START split_ UNK_END 
split UNK_START file.txt UNK_END into files of at most 1 mib in size with a numeric suffix and prefix UNK_START file UNK_END 
split UNK_START file.txt UNK_END into files of at most 1 mib in size with a numeric suffix, prefix "file", and additional suffix UNK_START .txt UNK_END 
split UNK_START file.txt UNK_END into files of at most 20 lines each with a prefix UNK_START new UNK_END 
split UNK_START filename UNK_END into files of at most 200000 lines each 
split UNK_START foo.txt UNK_END into files with 1 line each and use a suffix length of 5 
split UNK_START hugefile.txt UNK_END into files with 100000 lines each starting with UNK_START part. UNK_END and using numeric suffixes 
split UNK_START infile UNK_END into 2 files of about equal size 
split UNK_START input.txt UNK_END into files of at most 10 bytes each with prefix UNK_START /tmp/split-file UNK_END 
split UNK_START input.txt UNK_END into files of at most 10 bytes each with prefix UNK_START xxx/split-file UNK_END 
split UNK_START input.txt UNK_END into files with 1 line each and use a prefix UNK_START output. UNK_END and a suffix length of 5 
split UNK_START input_file UNK_END into files of at most 100 lines each with prefix UNK_START output_file UNK_END 
split UNK_START list.txt UNK_END into files with at most 600 lines each 
split UNK_START mybigfile.txt UNK_END into files of at most 200000 lines each 
split UNK_START randn20m.csv UNK_END into files of at most 5000000 lines each with prefix UNK_START _tmp UNK_END 
split UNK_START system.log UNK_END into files of at most 10 mib in size with a numeric suffix and prefix UNK_START system_split.log UNK_END 
split UNK_START t.txt UNK_END into files with at most 30000000 lines each and use a prefix UNK_START t UNK_END and numeric suffixes of length 2 
split UNK_START your_file UNK_END into files with at most 9 lines each 
split a file UNK_START file.tar.gz UNK_END into pieces named as UNK_START file.tar.gz.part-nnn UNK_END with size 1024 mb where nnn is a numeric suffix 
split a file UNK_START file.tar.gz UNK_END into pieces with size 1024 mb 
split a file addresss_file into pieces per 20 lines named with prefix "temp_file_ and numeric suffixes 
split all files in the directory tree UNK_START /dev/shm/split/ UNK_END into files of at most 1000 lines each and use the filename as the prefix 
split standard input into files of at most 1000 lines each 
split standard input into files of at most 3400000 lines each 
split standard input into files with at most 75 lines each 
split the contents of UNK_START file1 file2 ... file40000 UNK_END into 1445 files in a round robin fashion with prefix UNK_START outputprefix UNK_END and numeric suffixes 
split the contents of all UNK_START .txt UNK_END excluding the first 1000 lines into files of at most 1000 lines each 
split the output of UNK_START ls UNK_END into files of at most 500 lines each with prefix UNK_START outputxyz. UNK_END 
split the output of UNK_START tar [your params] UNK_END into files of at most 500 mib in size and use prefix UNK_START output_prefix UNK_END 
split the sorted and unique lines in files UNK_START emails_*.txt UNK_END into files with at most 200 lines each with numeric suffixes of length 4 
start UNK_START top UNK_END to monitor all processes with the default settings. 
start program UNK_START scriptname UNK_END with an empty environment. 
store n symbols of input into variable UNK_START buffer UNK_END 
store content of uncompressed file UNK_START $file.fastq UNK_END in variable UNK_START reads UNK_END 
store info about all mounted file systems, printing all sizes in powers of 1000 
stores system load average number in the UNK_START proc_load_average UNK_END variable. 
stores system load average number in the UNK_START proc_load_average UNK_END variable. 
strip all UNK_START \ UNK_END and newlines from $output and save the result to variable UNK_START output UNK_END 
strips last section from the path $pathname, and prints basename of the rest part. 
strips two last sections from the path $pathname, and prints basename of the rest part. 
suffix all files and folders in the current directory with UNK_START _suf UNK_END 
synchronize UNK_START /home/user1/ UNK_END to UNK_START wobgalaxy02:/home/user1/ UNK_END including hidden files 
synchronize UNK_START /path/to/dir_a UNK_END with files in UNK_START /path/to/dir_b/ UNK_END if the files are newer 
synchronize UNK_START /path/to/dir_b UNK_END with files in UNK_START /path/to/dir_a/ UNK_END if the files are newer 
synchronize UNK_START xxx-files UNK_END to UNK_START different-stuff/xxx-files UNK_END recursively preserving metadata with a bandwidth limit of 2000 kib/s 
take a file path from standard input and remove it. 
take a file path from standard input and remove it. 
take first text field from file UNK_START file.txt UNK_END as a domain name and get short a record for this one. 
take the last slash-separated section of variable UNK_START file UNK_END and copy it to variable "name". 
take the section of variable UNK_START file UNK_END between the last slash and the following dot, if any, and store that section in variable "name". 
takes folder path from string UNK_START /path/to/copy/file/to/is/very/deep/there UNK_END and created it with all parents. 
takes path list from UNK_START .exportfiles.text UNK_END file, cuts off first two path segments and last one. 
test if UNK_START file.tar.gz UNK_END is corrupt 
test if a file named UNK_START file UNK_END in the current directory is more than 1 hour old 
test if a file named UNK_START file UNK_END in the current directory is more than 1 hour old 
the command runs all the directories (-type d) found in the $logdir directory wherein a file's data has been modified within the last 24 hours (-mtime +0) and compresses them (compress -r {}) to save disk space. 
the cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories. 
the file UNK_START files_to_find.txt UNK_END contains a list of filenames, create each file or update its timestamp if it exists. 
this command find displays the files which are modified in the last 15 minutes. and it lists only the unhidden files. i.e hidden files that starts with a . (period) are not displayed in the find output. 
this find command ignore the case when searching for file name , to ignore the case in this example all .py & .py file will search 
this will remove all files (type f) modified longer than 14 days ago under /root/maildir/ recursively from there and deeper (mindepth 1 
time stamp every ping request to 8.8.8.8 in unix epoch format 
to descend at most one levels of directories below the command line arguments pass the -maxdepth 1 option. this will avoid deleting nested directories: 
to match only hidden dot directories 
traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt. 
traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt. 
treat each line of UNK_START list-of-entries.txt UNK_END as a value to be put in one cell of the table that UNK_START column UNK_END outputs 
truncate all non-empty regular files under the current directory 
try to determine the type of contents in UNK_START myfile UNK_END located in user's home directory. 
turns on network interface eth0. 
type unique list of all directories contiaining each file named UNK_START myfile UNK_END under the /home directory 
uncompress UNK_START archive.tar.gz UNK_END and extract the archive to UNK_START /destination UNK_END 
uncompress and unarchive UNK_START data.tar.gz UNK_END 
ungzip and untar all files matching UNK_START www-backup.tar.* UNK_END 
unpack all *.gz archives in the current directory tree 
unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic 
unsets UNK_START history UNK_END shell option. 
unsets shell option 'extglob'. 
unzip UNK_START bigfile.txt.gz UNK_END to standard output, search for patterns in "patterns.txt", and list the unique matches 
unzip UNK_START daily_backup.sql.gz UNK_END and search for lines matching UNK_START 'x'|/x/ UNK_END 
unzip UNK_START file.gz UNK_END to standard output and execute in bash with arguments UNK_START -n wordpress UNK_END 
unzip UNK_START file.gz UNK_END to stdout 
unzip "file.gz", list the unique first comma separated field prefixed by the number of occurrences, sort from least frequent to most frequent 
unzip "file.gz", list the unique lines matching regex pattern UNK_START "searchstring":"[^"]*" UNK_END prefixed by the number of occurrences, sort from least frequent to most frequent 
unzip all UNK_START .gz UNK_END files in the current directory tree excluding files containing "dvportgroups", "nsanity", "vcsupport", "viclient", and UNK_START vsantraces UNK_END 
unzip all UNK_START .gz UNK_END files in the current directory tree to their respective directories 
unzip all files matching UNK_START /homes/ndeklein/mzml/*.gz UNK_END 
unzip all files matching UNK_START test1/*/*.gz UNK_END 
unzip all files that match UNK_START *.gz UNK_END in the current directory and subdirectories to stdout and search for UNK_START test UNK_END 
unzip and expand tar archive UNK_START compressfilename UNK_END 
unzip and merge all UNK_START small-*.gz UNK_END files into files of 2000000 lines 
unzip and untar UNK_START 4.56_release.tar.gz UNK_END to standard output 
unzip and untar UNK_START file.tar.gz UNK_END 
unzip and untar UNK_START myarchive.tar.gz UNK_END and check for corruption 
unzip and untar UNK_START openssl-fips-2.0.1.tar.gz UNK_END 
unzip and untar UNK_START tarball.tar.gz UNK_END 
unzip every UNK_START .gz UNK_END file in the current directory 
unzip every UNK_START .gz UNK_END file in the current directory tree 
unzip every UNK_START .gz UNK_END file in the current directory tree 
unzip file UNK_START $empty_variable UNK_END 
update the archive UNK_START 2009.tar UNK_END with the files from the data/ directory tree that match pattern UNK_START filepattern-*2009* UNK_END 
update the archive UNK_START 2009.tar UNK_END with the files from the data/ directory tree that match pattern UNK_START filepattern-*2009* UNK_END 
update the archived copy of the home directory, UNK_START alldata.tar UNK_END 
update the history file in the current session 
update the timestamp of UNK_START /tmp/$$ UNK_END to the current month and day 
update the timestamp of 'filename', or create an empty file if it doesn't exist. 
update timestamps of all files (not directories) under current directory. 
update timestamps of all files (not directories) under current directory. also works on older unix systems with obsolete UNK_START find UNK_END command. 
update timestamps of all files and directories under current directory. 
update timestamps of all files and directories under directory /path/to/dir. 
update timestamps of all files in entire filesystem which are not newer than /tmp/timestamp 
update timestamps of all regular files (ie. excluding directories, symlinks, sockets, etc.) under /your/dir 
use UNK_START $bytes UNK_END amount of ram for UNK_START $seconds UNK_END seconds with no output 
use UNK_START $bytes UNK_END amount of ram with no output 
use UNK_START /var/log/wtmp UNK_END and print ips and search for UNK_START ^msw.*127.0.0.1 UNK_END 
use UNK_START vagrant-ssh UNK_END as the config file and ssh into UNK_START default UNK_END host 
use multiple -exec command in find . find all .txt files & grep banna in .txt files . 
use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set. 
variable pid contains a process id, check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals. 
variable pid contains a process id, send sigterm to this process if it exists. 
verbosely change ownership of UNK_START $file UNK_END to UNK_START root UNK_END 
verbosely compresses all files on fifth and sixth depth level keeping original files in place. 
verbosely compresses all files on fourth and fifth depth level keeping original files in place. 
verbosely compresses all files on second and third depth level keeping original files in place. 
verbosely compresses all files on seventh and eighth depth level keeping original files in place. 
verbosely compresses all files on sixth and seventh depth level keeping original files in place. 
verbosely compresses all files on third and fourth depth level keeping original files in place. 
verbosely compresses all files on third and fourth depth level keeping original files in place. 
view line 500 to line 500 + 501 in gzipped file UNK_START bigfile.z UNK_END 
view lines 116 through 120 of history 
view manual page of find utility 
view manual page of the find command 
view the man page of find 
views text content of compressed fileb file in tarfile archive. 
wrap each line in UNK_START file UNK_END to fit in 80 characters and count the number of lines 
wrap each line in UNK_START file.txt UNK_END to fit in 80 characters 
wrap each line in UNK_START file.txt UNK_END to fit in 80 characters 
wrap each line in UNK_START longline UNK_END to a maximum of 30 characters 
wrap each line in UNK_START longline UNK_END to a maximum of 30 characters breaking at spaces 
wrap standard input to fit in 10 characters per line 
write UNK_START 127.0.0.1 ad.doubleclick.net UNK_END to the console and append to UNK_START /etc/hosts UNK_END as root 
write UNK_START 2-1 UNK_END to standard output and to UNK_START /sys/bus/usb/drivers/usb/unbind UNK_END 
write UNK_START 2-1.1.1 UNK_END to standard output and to file UNK_START /sys/bus/usb/drivers/usb/unbind UNK_END 
write UNK_START australia/adelaide UNK_END to standard output and to UNK_START /etc/timezone UNK_END 
write UNK_START hello, world UNK_END to standard output and to UNK_START /tmp/outfile UNK_END 
write UNK_START some console and log file message UNK_END to standard output and UNK_START /dev/fd/3 UNK_END 
write UNK_START [some repository] UNK_END to standard output and append to UNK_START /etc/apt/sources.list UNK_END as root 
write UNK_START \n/usr/local/boost_1_54_0/stage/lib UNK_END to standard output and append to UNK_START /etc/ld.so.conf UNK_END 
write UNK_START deb blah ... blah UNK_END to standard output and append to UNK_START /etc/apt/sources.list UNK_END as root 
write UNK_START deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen UNK_END to standard output and append to UNK_START /etc/apt/sources.list.d/10gen.list UNK_END as root 
write UNK_START error UNK_END to standard output 
write UNK_START fifo forever UNK_END infinitely using the named pipe UNK_START fifo UNK_END by writing its contents to standard output and to UNK_START fifo UNK_END 
write UNK_START foo UNK_END to the real path of the current command's standard input 
write UNK_START foo UNK_END to the real path of the current command's standard output 
write UNK_START hello world UNK_END to the console and print number of bytes, symbols and strings in provided input. 
write UNK_START suspend UNK_END to standard output and to file UNK_START /sys/bus/usb/devices/usb3/power/level UNK_END 
write UNK_START "myname="test" UNK_END to the console and append to UNK_START $config UNK_END as root 
write a random list of numbers to /tmp/lst and stdout. 
write contents of UNK_START /sys/kernel/debug/tracing/trace_pipe UNK_END to standard output and to UNK_START tracelog.txt UNK_END executing as a root user 
write current directory listing to standard output and to UNK_START files.txt UNK_END 
write every two lines in UNK_START infile UNK_END on a single line separated by a comma 
write every two lines in UNK_START infile UNK_END on a single line separated by a space 
write out the entire directory hierarchy from the current directory 
write out the entire directory hierarchy from the current directory 
write output and error of UNK_START bash myscript.sh UNK_END to standard output and to UNK_START output.log UNK_END 
write output of UNK_START ls -a UNK_END to standard output and to UNK_START output.file UNK_END 
write output of UNK_START ls -hal /root/ UNK_END to standard output and to UNK_START /root/test.out UNK_END 
write output of UNK_START ls -lr / UNK_END to standard output and append to UNK_START output.file UNK_END 
write output of UNK_START ls -lr / UNK_END to standard output and to UNK_START output.file UNK_END 
write standard input to standard output and file UNK_START /tmp/arjhaix4 UNK_END 
write standard input to standard output and to UNK_START foobar.txt UNK_END 
write the common third space separated fields in UNK_START file1.sorted UNK_END and UNK_START file2.sorted UNK_END to UNK_START common_values.field UNK_END 
write the current date and time followed by UNK_START 0 UNK_END to the console and append to UNK_START log.csv UNK_END 
write the current date and time followed by UNK_START 1 UNK_END to the console and append to UNK_START log.csv UNK_END 
write the lines appended to UNK_START xxxx UNK_END as it appears to the console and append to UNK_START yyyy UNK_END in the background 
add read permission to others for the files in the current folder having the name UNK_START rc.conf UNK_END in their name. 
add read,write permissions to all the files in the current folder which have the permission 600 
all .jpg or .png images modified in the past week 
all the files that end with .mp3 and end with .jpg 
archive all files in a current directory modified in the last 30 days 
archive all the normal/regular files in the current directory which have been modified in the last 24 hours. 
as root, find from / all files called UNK_START file.txt UNK_END 
ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours 
bind UNK_START \c-i UNK_END to UNK_START complete UNK_END function 
bind key UNK_START \x61 UNK_END to insert itself 
bind word UNK_START foobar UNK_END to key code UNK_START \e[24~ UNK_END 
bind word UNK_START pwd\n UNK_END to key code UNK_START \e[24~ UNK_END 
calculate the disk usage for all the files which have been modified in the last 24 hours in ~/tmp folder and display the file sizes 
change cgi files to mode 755 
change cgi files to mode 755 under htdocs or cgi-bin directories 
change group of the file /tmp/php_session to group daemon 
change group of the file /var/lib/php/session to group lighttpd 
change group of the file myfile to group friends 
change html files to mode 644 
change owner and group of all files and directory into current directory to user and group apache 
change owner and group of the all files with group owner vboxusers into home directory to user and group kent 
change owner and group of the current directory and all files into it to user and group andrew 
change owner and group of the file UNK_START /path/to/yourapp UNK_END to root 
change owner and group of the file UNK_START file UNK_END to user UNK_START user UNK_END and group UNK_START group UNK_END 
change owner and group of the file dir1 to user root and group specialusers 
change owner and group of the file it to user and group root 
change owner and group of the file script.sh to user root 
change owner and group of the file uid_demo to user and group root 
change owner of all files into current directory except files named as UNK_START ./var/foo* UNK_END to user www-data 
change owner of the file UNK_START file UNK_END to user user_name 
change owner of the file /home/bob to user root 
change owner of the file destination_dir to user "user: 
change owner of the file file.sh to user root 
change owner of the file my_test_expect.exp to user el 
change owner of the file process to user root 
change owner of the files into directory UNK_START /mydir UNK_END with UNK_START .txt UNK_END extension to user root 
change owner of the files into directory UNK_START /mydir UNK_END with UNK_START .txt UNK_END extension to user root 
change owner of the files into directory dir_to_start except directory dir_to_exclude to user owner 
change permission of all the files in the entire file system which have permissions 777. 
change permission of all the files in the entire file system which have the permissions 777. 
change permissions for directories in the entire file system 
change permissions of all the script files in a directory 
change permissions of files older than 30 days 
change the extension of all the UNK_START .abc UNK_END files in the folder UNK_START /the/path UNK_END to UNK_START .edefg UNK_END and do not change in the sub directories 
change the extension of all the UNK_START .abc UNK_END files in the folder UNK_START /the/path UNK_END to UNK_START .edefg UNK_END and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found 
change the extension of all the UNK_START .lst UNK_END files in the current folder to UNK_START a.lst UNK_END 
change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition 
change the group of all directories in the current folder 
change the group of all regular/normal files in the current directory 
change the group of all the files in the file system which belong to the group with the gid 999 
change the group of all the files in the folder /u/netinst/ to staff 
change the group of all the files which belong to the user edwarda to pubs 
change the group to UNK_START new_group UNK_END and permissions to 770 for all the files in the current folder 
change the group to UNK_START new_group UNK_END and permissions to 770 for all the files in the current folder 
change the owner and group of all the directories in the current folder and /home/admin/data/ to admin & admin 
change the owner and group of all the files in the folder /usr/lpp/financials 
change the owner and group of all the normal/regular files in the current folder and /home/admin/data/ to admin & admin 
change the owner of all the files in folder /u/netinst to netinst 
change the owner of all the files in the current directory 
change the owner of all the files in the file system which belong to the user with the uid 999 
change the owner of all the regular/normal files which belong to the root user to UNK_START tom UNK_END in the current folder 
change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file 
change the ownership of all directories in the current folder 
change the ownership of all regular/normal files in the current directory 
change the ownership of all regular/normal files in the current directory 
change the ownership of all regular/normal files in the current directory after users confirmation 
change the ownership of all regular/normal files in the current directory(print0 is used to handle all the files which have spaces or new lines in their names) 
change the ownership of all the files in the file system from edwarda to earnestc 
change the ownership of all the files in the file system from edwarda to earnestc 
change the permission of all directories in current folder to 755. 
change the permission of all php files in current folder 
change the permission of all php files in current folder. plus symbol at the end is used to give multiple files as input to the chmod command 
change the permission of all the directories to 755 in the current folder 
change the permission of all the files in the current directory to 664 and change the permission of all the directories in the current folder to 775. 
change the permission of all the normal/regular files from 777 to 755 in the folder UNK_START /home/user/demo UNK_END 
change the permission of all the normal/regular files to 644 in the current folder 
change the permission of all the php files in the folder /var/www/ to 700 
change the permission of all the regular files in the folder /home to 700 
change the permission of all the regular/normal files in the current folder from 777 to 755 
change the permission of all the rpm files in the entire file system to 755 
change the permissions of al the directories in the current folder 
change the permissions of all regular/normal files in the current directory 
change the permissions of all regular/normal files in the current directory 
change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name 
change the permissions of all regular/normal files in the file system 
change the permissions of all the directories to 775 in the current folder 
change the permissions of all the directories in the current folder 
change the permissions of all the directories in the current folder 
change the permissions of all the directories in the current folder 
change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name 
change the permissions of all the directories in the folder UNK_START /path/to/somedirectory UNK_END to 755 
change the permissions of all the directories in the folder root_dir to 555 
change the permissions of all the directories to 755 in the folder UNK_START /home/nobody/public_html UNK_END 
change the permissions of all the files ending with UNK_START fits UNK_END in the folder UNK_START /store/01 UNK_END 
change the permissions of all the files ending with UNK_START fits UNK_END in the folder UNK_START /store/01 UNK_END and save the output file names to a log file 
change the permissions of all the normal files in a directory 
change the permissions of all the regular files in the current folder 
change the permissions of all the regular files in the folder root_dir to 444 
change the permissions of all the regular/normal files in the current folder 
change the permissions of all the regular/normal files in the current folder 
change the permissions of all the regular/normal files in the folder UNK_START /path/to/somedirectory UNK_END to 644 
change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html 
change the permissions of all the regular/normal files to 664 in the current folder 
change the permissions of mp3 files in the folder /var/ftp/mp3 to 644 
change the permissions of the directories from 777 to 755 in the folder UNK_START /var/www/html UNK_END 
change the word UNK_START ghbag UNK_END to UNK_START stream-agg UNK_END in all the file names in current folder which have the word UNK_START -ghbag- UNK_END in their name 
change user and group of the file UNK_START /var/run/docker.sock UNK_END to user root and group dockerroot 
change user and group of the file /usr/bin/aws to user amzadm and group root 
change user and group of the file bin to user and group root:wheel 
change user of the direct public_html to user owner and group nobody 
check find version 
check if myfile has 0644 permissions 
check if there any files from the .git folder after excluding it using the prune command 
check readline bindings for UNK_START \x61 UNK_END 
check the type of files in the folder /usr/bin 
compare each c header file in or below the current directory with the file /tmp/master 
compress all the non-compressed files in the current directory. 
compresses all the files in the current folder with default depth 
concatenates file1.txt, file2.txt, and file3.txt with the filenames printed at the beginning of file contents 
convert epoch second timestamp to date 
cope *.mp3 files to /tmp/musicfiles 
copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize. 
copy all files which do not have execute permission to another folder 
copy all the files with the extension UNK_START .type UNK_END from one folder to a target directory 
copy all the log files in the current folder which have not been accessed in the last 30*24 hours to the folder old 
copy all the mp3 files from current folder to another folder 
copy all the regular files in the current directory to the temporary diectory. 
copy all the regular/normal files from temp folder which have been modified in the last 30*24 hours to /tmp/backup 
copy the entire contents of the current directory to another directory, while preserving the permissions, times, and ownership of every file and sub-directory 
copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4 
copy the file header.shtml to those dirs 
count all the html files having a specifc word in a folder. 
count all the regular files that are present in a directory 
count amount of jobs running 
count lines of c or c++ or obj-c code under the current directory 
count lines of c or c++ or obj-c or java code under the current directory 
count the lines of java code for all the java files in the current directory 
create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files (files ending with ~) 
create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/backup.log 
create a backup of all the files in the home folder on a partition and save the log to a file 
create a backup of all the files which have been modified in the last 48 hours 
create a compressed archive UNK_START compressfilename.tar.gz UNK_END with verbose output 
create a compressed archive UNK_START filename.tar.gz UNK_END with verbose output 
create a compressed archive in my_dir directory matching UNK_START .[^.]* ..?* UNK_END glob pattern 
create a compressed archive with files newer than 1st of january 2014, 18:00:00. 
create a cpio archive of the entire contents the current directory while preserving the permissions, times, and ownership of every file and sub-directory 
create a gzip of all the files in the current folder excluding the already gzipped files 
create a gzip of all the files in the current folder excluding the already gzipped files. 
create a hard link as directory named UNK_START new_hard_link UNK_END to the directory UNK_START existing_dir UNK_END as root 
create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours 
create a list of all files in all subdirectories 
create a md5sum for all the instances of the file mycprogram.c in current folder 
create a soft link of the files in the folder /media/movies which have been modified in the last 30 days 
create a symbolic link in current directory named UNK_START environments UNK_END to file UNK_START ../config/environments UNK_END 
create a symbolic link in current directory named UNK_START my_db UNK_END to file UNK_START /media/public/xampp/mysql/data/my_db UNK_END 
create a symbolic link named UNK_START $oracle_home/include UNK_END to file UNK_START /usr/include/oracle/11.2/client UNK_END 
create a symbolic link named UNK_START -pdf-kundendienst UNK_END to UNK_START local--pdf-kundendienst UNK_END file 
create a symbolic link named UNK_START /usr/bin/my-editor UNK_END to file UNK_START /usr/share/my-ditor/my-editor-executable UNK_END 
create a symbolic link named UNK_START /usr/lib/jvm/default-java UNK_END to file UNK_START /usr/lib/jvm/java-7-oracle UNK_END 
create a symbolic link named UNK_START test UNK_END to file UNK_START .bashrc UNK_END 
create a symbolic link named UNK_START www UNK_END to file UNK_START www1 UNK_END 
create a symbolic link with absolute path UNK_START /cygdrive/c/program files UNK_END to file UNK_START /cygdrive/c/programfiles UNK_END 
create a symbolic link with absolute path UNK_START /cygdrive/c/users/mic/mypics UNK_END to file UNK_START /cygdrive/c/users/mic/desktop/pending - pics/ UNK_END 
create a tar ball of all pdf files in current folder 
create a tar ball of all the jpg and png images in the current folder 
create a tar file of all the songs on my system that have been modified in the last 180 days (which is essentially six months) 
create a tar of all png & jpg images in the current folder 
create a tar.gz compress file with all the jpg files in the entire file system 
create a zip of all the files in the current folder which are bigger than 100kb and do not go more than 2 levels during search 
create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine) 
create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units) 
create an archive excluding files matching patterns listed in /path/to/exclude.txt 
create an archive using 7zhelper.sh as a compress program 
create an archive using pbzip2 as a compress program 
create an archive using pbzip2 as a compress program 
create and list contents of the archive 
create archive UNK_START backup.tar.gz UNK_END from /path/to/catalog 
create backup of all the text files present in the current folder 
create directories a b c d e 
create directories bravo_dir and alpha_dir 
create directories foo and bar 
create directories mnt and point 
create directory UNK_START .hiddendir UNK_END 
create directory /cpuset 
create directory /data/db 
create directory /etc/cron.15sec 
create directory /etc/cron.5minute 
create directory /etc/cron.minute 
create directory /path/to/destination 
create directory /tmp/foo 
create directory /tmp/new 
create directory /var/svn as user root 
create directory testproject 
create directory aaa 
create directory aaa/bbb 
create directory backup 
create directory certs 
create directory destdir 
create directory dir 
create directory dir1 
create directory dirname with permissions 777 
create directory es if it is not exist and create direcoty lc_messages 
create directory foo 
create directory foo 
create directory log into home directory 
create directory new_dir 
create directory practice into home directory 
create directory public_html into home directory 
create directory saxon_docs 
create directory subdirectory 
create directory tata 
create directory temp into home directory 
create directory testexpress 
create symbolic links in current directory to all files located in directory UNK_START /original UNK_END and have filename extension UNK_START .processname UNK_END 
create symbolic links in current directory to all files located in directory UNK_START /original UNK_END and have filename extension UNK_START .processname UNK_END 
create symbolic links in directory UNK_START /usr/local/symlinks UNK_END to all files located in directiry UNK_START incoming UNK_END and that have been modified earlier then 5 days and owned by user UNK_START nr UNK_END 
create symbolic links in directory UNK_START /your/dest/dir/ UNK_END to all files located in UNK_START /your/source/dir/ UNK_END and have filename extension UNK_START txt.mrg UNK_END 
create the compressed tar archive images.tar.gz containing all jpg files found under / 
delete a hard link and create a symbolic link to file named UNK_START $link UNK_END 
delete all empty files in the current directory ( empty file = size 0 bytes ) 
delete all files in $dir that have not been accessed in at least 5 days 
delete all files in the home directory which ahve the name core in them 
delete all files that have the extension UNK_START bam UNK_END in current directory 
delete all instances of the file UNK_START bad UNK_END if its size is 0 bytes 
delete all normal/regular files in the current folder which are empty 
delete all text files from current folder 
delete all text files in the entire file system 
delete all text files in the home folder after user confirmation 
delete all the UNK_START .bak UNK_END or swap files in kat folder 
delete all the UNK_START .doc UNK_END files in the current folder 
delete all the UNK_START wmv UNK_END UNK_START wma UNK_END files in the currnet folder, 
delete all the backup files in current directory 
delete all the broken symbolic links from the folder /usr/ports/packages 
delete all the core files in the folder /prog which are bigger than 1kb 
delete all the directories empty directories in the current folder 
delete all the empty directories in the current folder 
delete all the empty files in the current directory 
delete all the empty files in the current directory only if they are ok and the user has the permission to delete them 
delete all the empty files(files with size 0 bytes) in the current folder 
delete all the empty in the current folder and all its sub directories 
delete all the empty in the current folder do not search in sub directories 
delete all the files ending with UNK_START ~ UNK_END in current folder 
delete all the files ending with UNK_START ~ UNK_END in current folder 
delete all the files ending with UNK_START ~ UNK_END in current folder 
delete all the files in the current folder 
delete all the files in the current folder 
delete all the files in the current folder which do not belong to any user 
delete all the files in the current folder which are bigger than 1kb 
delete all the files in the current folder which do not belong to any user 
delete all the files in the current folder which end with UNK_START .bak UNK_END or UNK_START .backup UNK_END and which have not been accessed in the last 30 days 
delete all the files in the current folder which have been modified in the last 14*24 hours 
delete all the files in the file system which belong to the user edwarda 
delete all the files in the file system which belong to the user edwarda after user confirmation 
delete all the files which start with UNK_START tes UNK_END in the current folder 
delete all the log files in the current folder 
delete all the log files in the current folder 
delete all the log files in the current folder 
delete all the log files which have not been modified in the last 5 days after user confirmation 
delete all the mp3 files in the current folder. 
delete all the mp3 files in the home folder 
delete all the mp4 files in the folder /home which are bigger than 10mb 
delete all the normal files in the current directory whcih have the word UNK_START gui UNK_END in their content. 
delete all the normal files in the current folder and do not delete those in the subfolders 
delete all the normal/regular files in the current folder 
delete all the php files in the folder /var/www 
delete all the regular files in the temp folder which have not been changed in the last 15*24 hours 
delete all the regular files in the temp folder which have not been modified in the last 24 hours 
delete all the regular files in the temp folder which have not been modified in the last 24 hours 
delete all the regular files in the temp folder which have not been modified in the last 24 hours 
delete all the regular files in the temp folder which have not been modified in the last 24 hours + at the end gives bulk input to the rm command 
delete all the text files from the current folder after user confirmation 
delete all the text files in the current folder 
delete all the text files in the current folder. 
delete all the text files starting with the name UNK_START oldstuff UNK_END in the file system 
delete all the tmp files ( files with the extension tmp ) in the /tmp folder 
delete all the tmp files ( files with the extension tmp ) in the /tmp folder. print0 is used to display all those files which have newline in their names or files whose name is only spaces. 
delete all the trace files (".trc") from the folder $dba/$oracle_sid/bdump/ which have not been accessed in the last 7*24 hours 
delete all the trace files (".trc") which have not been been accessed in the last 30*24 hours 
delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename UNK_START .svn UNK_END 
delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename UNK_START .svn UNK_END 
delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename UNK_START .svn UNK_END 
delete what was typed in the command line and run UNK_START pwd UNK_END when button UNK_START \e[24~ UNK_END 
dispaly a long listig of all the files in the current folder which are bigger than 100kb 
dispaly a long listing of all the files in the current folder which have been modified in the last 14 days 
dispaly all the empty regular/normal files in the current folder 
display a list of all files in the folder passed as argument to a script 
display a list of all java or jsp files in the current folders 
display a list of all regular/normal files in the current folder 
display a list of all the files in the home folder which have been modified today 
display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems 
display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems 
display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set 
display a long ilsting of all the files in the file system which are bigger than 1kb and which have not been modified in the last 30*24 hours 
display a long list of all regular/normal files in the file system which belong to the root and with suid bit set 
display a long list of all the directories which have files ending with UNK_START .todo UNK_END 
display a long list of all the directories which have files ending with UNK_START .todo UNK_END 
display a long list of all the files in the directory UNK_START /mydir UNK_END which have not been modified in the last 20*24 hours or which have not been accessed in the last 40*24 hours 
display a long list of all the files that are bigger than 10kb in current folder 
display a long list of all the jpg files in the home folder 
display a long list of all the jpg files in the home folder(plus at the end is used to give bulk data as input) 
display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files 
display a long listing of all files in the entire file system which are bigger than 1mb 
display a long listing of all fles in current folder which have been modified in the last 60 minutes 
display a long listing of all images with the name UNK_START articles UNK_END in the current folder 
display a long listing of all images with the name UNK_START articles UNK_END in the current folder ( print0 is used to preserve file names with new line in their name ) 
display a long listing of all regular files in current folder which have been modified in the last 60 minutes 
display a long listing of all regular files in current folder which have been modified in the last 60 minutes 
display a long listing of all regular files in current folder which have been modified in the last 60 minutes 
display a long listing of all the UNK_START trash UNK_END files in the folder /home 
display a long listing of all the directories in current directory 
display a long listing of all the directories in the current folder 
display a long listing of all the directories in the entire file system 
display a long listing of all the empty files in the entire file system which are empty 
display a long listing of all the files in the /var folder which are bigger than 10mb. print0 is used to handle the files which have new lines in their names 
display a long listing of all the files in the current directory 
display a long listing of all the files in the current folder 
display a long listing of all the files in the current folder in sorted order, which are bigger than 10kb 
display a long listing of all the files in the current folder that have been accessed in today from the start of the day 
display a long listing of all the files in the current folder which are bigger than 10kb 
display a long listing of all the files in the current folder which have been modified in the last 24 hours 
display a long listing of all the files in the current folder which have been modified in the last 24 hours 
display a long listing of all the files in the home folder which are bigger than 200mb 
display a long listing of all the files that begin with the name UNK_START metallica UNK_END in the entire file system 
display a long listing of all the java files in the current folder in sorted order 
display a long listing of all the log files in the current folder which are bigger than 1mb 
display a long listing of all the normal/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces ) 
display a long listing of all the regular/normal files in the current folder 
display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled. 
display a long listing of all the xls or csv files in the entire file system 
display a long listing of all the xls or csv files in the entire file system 
display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago 
display a long listing of the files in current folder which have been modified in the last 60 minutes 
display a long listing of the files in current folder which have been modified in the last 60 minutes 
display all directories in a folder 
display all directories in current folder 
display all directories in current folder 
display all directories in current folder and do not search in sub directories 
display all directories in current folder excluding those that are present in .git folder 
display all directories in the current folder 
display all directories in the entire file system 
display all directories in the folder UNK_START $orig_dir UNK_END 
display all directories in the folder UNK_START /myfiles UNK_END 
display all directories in the folder UNK_START prod UNK_END and do not search in the sub directories 
display all directories in the folder symfony 
display all directories in vim folder do not search in sub directories 
display all directories which have not been accessed in the last 24*3 hours 
display all empty files in the current folder 
display all empty files(files with sisze 0 bytes) in home folder 
display all executable files in the folder /home 
display all file in the folder /dir/to/search except UNK_START .c UNK_END files 
display all file in the folder /dir/to/search except UNK_START .c UNK_END files 
display all file in the home folder except UNK_START .c UNK_END files 
display all file in the home folder except UNK_START .c UNK_END files 
display all file names in current folder 
display all files expect directories in the current folder 
display all files ending with UNK_START .ext UNK_END in current folder and append the file contents of list.txt and sort them based on name and display only uniq items 
display all files ending with UNK_START ini UNK_END in current folder 
display all files in a folder 
display all files in current folder 
display all files in current folder and follow the symbolic links and display the pointed file 
display all files in current folder ending with UNK_START ~ UNK_END or UNK_START # UNK_END using regular expression 
display all files in current folder excluding current folder (.) 
display all files in current folder excluding text files 
display all files in current folder excluding those that have the word UNK_START git UNK_END in their name and display files that have git in their path names 
display all files in current folder using regular expression 
display all files in current folder which are bigger than 1 mb 
display all files in current folder which are bigger than 100kb but are less than 500kb 
display all files in current folder which have been modified in the last 60 minutes 
display all files in current folder which have not been modified in the last 60 minutes 
display all files in current folder with null separating each file 
display all files in the current directory excluding those that are present in the directories whose name starts with UNK_START efence UNK_END and do not search in the sub directories 
display all files in the current folder 
display all files in the current folder 
display all files in the current folder ($@ contains the variables passed as argument to the function) 
display all files in the current folder after pruning those in the current folder ( dot is the output of this command ) 
display all files in the current folder along with their last access timestamps 
display all files in the current folder along with their last accessed timestamps 
display all files in the current folder and do not search in the sub directories 
display all files in the current folder expect text files 
display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter 
display all files in the current folder which are not empty 
display all files in the current folder which do not belong to the user john 
display all files in the current folder which do not match the regular expression 
display all files in the current folder which end with extension UNK_START myfile UNK_END followed by one digit or two digits 
display all files in the current folder which end with extension UNK_START myfile UNK_END followed by one digit or two digits 
display all files in the current folder which end with extension UNK_START myfile UNK_END followed by two digits 
display all files in the current folder which start with met 
display all files in the current folder with the name test excluding those that are present folder test 
display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder 
display all files in the directory UNK_START dir UNK_END which have been accessed in the last 60 minutes 
display all files in the directory UNK_START dir UNK_END which have been changed in the last 60 minutes 
display all files in the entire file system 
display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set 
display all files in the entire file system excluding those that are in the transfer directory 
display all files in the file system which are bigger than 50mb and having size UNK_START filename UNK_END in them 
display all files in the folder /usr and its sub directory(do not search beyond the sub directory) 
display all files in the folder /usr/src excluding those ending with UNK_START ,v UNK_END 
display all files in the folder bar only in the path /foo/bar/myfile (no output is generated) 
display all files which have been modified between two dates in current folder 
display all hidden files in the current folder 
display all html files in current folder 
display all instances of the file tkconfig.sh in the folder /usr 
display all instances of UNK_START foo.cpp UNK_END file in the current folder which are not in the sub directory tree UNK_START .svn UNK_END 
display all instances of the .profile file in the entire file system 
display all jpg files in the current folder 
display all mp3 files in the file system which have not been accessed in the last 24 hours 
display all non empty directories in current folder 
display all normal / regular files in current folder in reverse order 
display all normal/regular files in a folder 
display all normal/regular files in a folder 
display all normal/regular files in current folder 
display all normal/regular files in current directory 
display all normal/regular files in current directory 
display all normal/regular files in current folder 
display all normal/regular files in current folder 
display all normal/regular files in current folder in sorted order 
display all normal/regular files in current folder which have readable permission 
display all normal/regular files in the folder UNK_START $orig_dir UNK_END 
display all normal/regular files in the folder UNK_START pathfolder UNK_END 
display all normal/regular files or directories in the folder UNK_START $orig_dir UNK_END 
display all pdf files in the current folder 
display all php,xml and phtml files in current folder 
display all regular files in current folder excluding search in the directories that are ending with UNK_START git,svn UNK_END 
display all regular files in current folder which have spaces in their name 
display all regular files in the folder image-folder 
display all regular/normal files in a directory 
display all regular/normal files in current folder 
display all regular/normal files in temp folder and display the filename along with file size 
display all regular/normal files in the current folder ending with the word ummy 
display all regular/normal files in the current folder that were accessed exactly 7*24 hours back 
display all regular/normal files in the current folder which are accessed in the last 7*24 hours 
display all regular/normal files in the current folder which are not accessed in the last 7*24 hours 
display all regular/normal files in the current folder with the name dummy 
display all regular/normal files in the folder UNK_START dir UNK_END and display the filename along with file size 
display all regular/normal files in the folder /users/david/desktop/ 
display all regular/normal files in the folder symfony 
display all regular/normal files which have been modified in the last 30 minutes 
display all scala files in the directory UNK_START src/main UNK_END 
display all scala files in the directory UNK_START src/main UNK_END 
display all scala files in the directory UNK_START src/main UNK_END 
display all shell scripts in current folder 
display all soft links in current folder 
display all sqlite files in the current directory along with their timestamp 
display all symbolic links in current folder 
display all symbolic links in the folder UNK_START myfiles UNK_END 
display all symbolic links in the folder UNK_START myfiles UNK_END and follow them 
display all text files in a folder 
display all text files in current folder 
display all text files in current folder 
display all text files in the current folder 
display all text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search) 
display all text files in the folder /tmp/1 
display all text files in the folder /tmp/1 excluding those which do not have spaces in their names 
display all text files in the folder /user/directory which have been modified in today 
display all text, mpg, jpg files in the folder /users/david/desktop 
display all the UNK_START .c UNK_END files in the current directory 
display all the UNK_START .c UNK_END files in the current folder excluding those that are present in all the sub directories 
display all the UNK_START .c UNK_END files in the current folder excluding those that are present in the .svn sub folder 
display all the UNK_START .c UNK_END files in the folder UNK_START /home/david UNK_END which have been accessed in the last 48 hours 
display all the UNK_START .c UNK_END files which have been modified in the last 10 minutes 
display all the UNK_START .mov UNK_END files in the current folder 
display all the UNK_START .mov UNK_END video files in the current folder in the format filename and folder path 
display all the UNK_START .sh UNK_END files in the current folder 
display all the UNK_START c UNK_END files in the current folder 
display all the .sh scripts and perl files in the current folder 
display all the .sh scripts and perl files in the current folder 
display all the .sh scripts in the folder /usr 
display all the .sh scripts in the folder /usr 
display all the c files or python files in the folder UNK_START euler UNK_END 
display all the c, cpp, header files in the kat folder 
display all the c files and the header files in the path /some/dir and do not search in sub directories 
display all the configuration files in UNK_START /etc UNK_END folder along with their last access and modified timestamps 
display all the configuration files in the current folder which are in the current tree structure 
display all the configuration files in the etc folder 
display all the details of empty files in current folder 
display all the directories in the current folder 
display all the directories in the current folder 
display all the directories in the current folder excluding those that are present in the .svn directory tree 
display all the directories in the current folder excluding those that are present in the aa directory tree 
display all the directories in the current folder excluding those that are present in the aa directory tree 
display all the directories in the current folder excluding those that are present in the folder secret 
display all the directories in the current folder excluding those that have the name UNK_START node_modules UNK_END 
display all the directories in the current folder for the files which have not been accessed in the last 48 hours 
display all the directories in the current folder which are atleast one level deep 
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2 
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2 
display all the directories in the folder /path/to/dest except tmp and cache directories 
display all the directories in the folder /path/to/dest except tmp directory 
display all the directories in the folder /usr/share 
display all the directories in the folder /var and do not go beyond 2 levels during search 
display all the directories in the folder master- 
display all the doc files in the current folder ( files ending with UNK_START .doc UNK_END ) 
display all the empty files in current folder 
display all the empty files in the current folder( files of size 0 bytes) 
display all the empty files in the entire file system 
display all the empty files in the folder /opt (file size 0 bytes) 
display all the file in the folder /home/david/ which start with the word UNK_START index UNK_END 
display all the file in the folder /home/david/ which start with the word UNK_START index UNK_END ( case insensitive search) 
display all the files in the current folder excluding the current folder and do not search in the sub directories 
display all the files in the current folder excluding the perl files 
display all the files in the current folder excluding those which are present in UNK_START ./src/emacs UNK_END folder 
display all the files in the current folder which have colon in their name 
display all the files along with their group name in the folder /home which do not belong to the group test 
display all the files and directories with the name UNK_START cvs UNK_END from /usr/src folder that are at least seven levels deep and do not descend onto the folders 
display all the files ending with UNK_START .foo UNK_END excluding those that are in the directory UNK_START .snapshot UNK_END 
display all the files ending with UNK_START .foo UNK_END including those that are in the directory ".snapshot", this is the wrong way of using prune. 
display all the files ending with UNK_START .user UNK_END in /var/adm/logs/morelogs/ and excluding all regular files 
display all the files ending with UNK_START .user UNK_END or beginning with UNK_START admin UNK_END or ending with UNK_START .user.gz UNK_END in /var/adm/logs/morelogs/ and excluding all regular files 
display all the files ending with .c in the current folder 
display all the files having spaces in the current folder 
display all the files having spaces in the current folder 
display all the files having the word UNK_START searched phrasse UNK_END in their name in the current folder excluding those from the paths UNK_START /tmp/ UNK_END and UNK_START ./var/log UNK_END 
display all the files in current folder 
display all the files in current folder which are bigger than 10kb 
display all the files in current folder which have been accessed in the last 15 days 
display all the files in current folder which have been changed in the last 2-6 days 
display all the files in current folder which have been changed in the last 24 hours 
display all the files in current folder which have not been modified in the last 7 days 
display all the files in current folder which have write permission to all the users 
display all the files in current folder which start with UNK_START file2015-0 UNK_END 
display all the files in the /usr folder which have the permissions 777 
display all the files in the current directory and do not search in sub directories 
display all the files in the current directory and do not search in the sub directories 
display all the files in the current directory excluding the paths "targert", "tools", UNK_START git UNK_END 
display all the files in the current directory excluding those that are in the UNK_START secret UNK_END directory 
display all the files in the current folder 
display all the files in the current folder 
display all the files in the current folder 
display all the files in the current folder 
display all the files in the current folder along with the change time and display file names of the last 10 changed files 
display all the files in the current folder along with the hidden files with the depth 
display all the files in the current folder along with the modification time and display file names of the last 10 modified files 
display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2. 
display all the files in the current folder and traverse from the sub directories 
display all the files in the current folder except those whose name is UNK_START personal UNK_END 
display all the files in the current folder excluding search in the paths containing the folder having the word UNK_START mmm UNK_END 
display all the files in the current folder excluding the directory aa 
display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with UNK_START .git UNK_END 
display all the files in the current folder excluding the files with the name mmm 
display all the files in the current folder excluding those ending with UNK_START .disabled UNK_END in sorted order 
display all the files in the current folder excluding those that are present in the folder UNK_START secret UNK_END 
display all the files in the current folder excluding those that are present in the path UNK_START ./etc UNK_END 
display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word UNK_START file UNK_END 
display all the files in the current folder excluding those which are in the path of UNK_START .git UNK_END 
display all the files in the current folder expect perl shell and python fiels 
display all the files in the current folder for the files which have been accessed in the last 24 hours 
display all the files in the current folder for the files which have not been accessed in the last 24 hours 
display all the files in the current folder in a single line separated by null command 
display all the files in the current folder that are at least one week old (7 days) but less then 30 days old 
display all the files in the current folder that end with UNK_START .ksh UNK_END 
display all the files in the current folder that have been modified in the last 24 hours 
display all the files in the current folder which are bigger than 100mb and save the output list to the file /root/big.txt 
display all the files in the current folder which are in the path UNK_START ./sr*sc UNK_END 
display all the files in the current folder which are in the path ending with the folder f 
display all the files in the current folder which are present in the path UNK_START ./sr*sc UNK_END 
display all the files in the current folder which are present in the path UNK_START ./src/emacs UNK_END 
display all the files in the current folder which contains form feed (^l) and does not contain null 
display all the files in the current folder which do not belong to any group 
display all the files in the current folder which do not belong to any user 
display all the files in the current folder which end with UNK_START .bash UNK_END 
display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word UNK_START kt UNK_END followed by a digit 
display all the files in the current folder which have are bigger than 1kb 
display all the files in the current folder which have been accessed in the last 60 minutes 
display all the files in the current folder which have been modified after the files UNK_START /bin/sh UNK_END 
display all the files in the current folder which have been modified between two dates 
display all the files in the current folder which have been modified in one hour ago 
display all the files in the current folder which have been modified in the last 14*24 hours 
display all the files in the current folder which have been modified in the last 2 days 
display all the files in the current folder which have been modified in the last 24 hours 
display all the files in the current folder which have been modified in the last 24 hours 
display all the files in the current folder which have been modified in the last 24 hours excluding all directories 
display all the files in the current folder which have been modified in the last 5*24 hours 
display all the files in the current folder which have not been modified in the last 7 days and which are not in the list UNK_START file.lst UNK_END 
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours. 
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours. 
display all the files in the current folder which have the word UNK_START bills UNK_END in their name 
display all the files in the current folder which start with either UNK_START filea_ UNK_END or UNK_START fileb_ UNK_END 
display all the files in the current folder. 
display all the files in the directory modules 
display all the files in the entire file system 
display all the files in the entire file system 
display all the files in the entire file system which are bigger than 10mb 
display all the files in the entire file system which begin with UNK_START apache-tomcat UNK_END 
display all the files in the entire file system which have set uid bit set. 
display all the files in the file system excluding all the UNK_START .c UNK_END files 
display all the files in the file system which are changed a minute ago 
display all the files in the file system which are present in nfs system 
display all the files in the file system which are smaller than 20 bytes 
display all the files in the file system which belong to no group 
display all the files in the file system which belong to no user 
display all the files in the file system which belong to the group lighttpd 
display all the files in the file system which belong to the user UNK_START user1 UNK_END 
display all the files in the file system which belong to the user UNK_START wnj UNK_END and which are modified after the file UNK_START ttt UNK_END 
display all the files in the file system which belong to the user UNK_START wnj UNK_END or which are modified after the file UNK_START ttt UNK_END 
display all the files in the file system which belong to the user with the id 1005 
display all the files in the file system which do not belong to the user UNK_START wnj UNK_END and which are modified before the file UNK_START ttt UNK_END 
display all the files in the file system which have been modified in the last 10 minutes 
display all the files in the folder UNK_START $orig_dir UNK_END 
display all the files in the folder UNK_START /users/me/desktop UNK_END which belong to the user UNK_START popo UNK_END and which have the permission 777 
display all the files in the folder UNK_START /users/me/desktop UNK_END which have read permission to them 
display all the files in the folder UNK_START /home/mywebsite UNK_END which have been changed in the last 7*24 horus 
display all the files in the folder /etc /srv excluding those that are present in the path of ./srv/tftp/pxelinux.cfg* and /etc/mtab 
display all the files in the folder /home which do not belong to the group test 
display all the files in the folder /home which do not belong to the group test 
display all the files in the folder /home which have the setuid bit enabled 
display all the files in the folder /mp3-collection which are bigger than 10mb or which start with the name UNK_START metallica UNK_END 
display all the files in the folder a 
display all the files in the folders /etc /srv excluding the paths /etc/mtab and /srv/tftp/pxelinux.cfg 
display all the files in the folders mydir1, mydir2 which are bigger than 2kb and have not been accessed in the last 30*24 hours 
display all the files in the home folder 
display all the files in the home folder except text files 
display all the files in the home folder excluding directories which have been modified in the last 24 hours 
display all the files in the home folder that have been modified in the last 24 hours 
display all the files in the home folder that have been modified in the last 7*24 hours 
display all the files in the home folder which are smaller than 500 bytes 
display all the files in the home folder which are smaller than 500 bytes 
display all the files in the home folder which begin with UNK_START arrow UNK_END 
display all the files in the home folder which begin with UNK_START arrow UNK_END and end with UNK_START xbm UNK_END 
display all the files in the home folder which belong to the suer UNK_START bruno UNK_END and end with UNK_START .sxw UNK_END and have been accessed in the last 3*24 hours 
display all the files in the home folder which end with UNK_START .xbm UNK_END 
display all the files in the home folder which have not been modified in the last 365*24 hours 
display all the files in the home folder which have read permission to the user 
display all the files in the kat folder 
display all the files in the user folder which have been modified after the files /tmp/stamp$$ 
display all the files in the usr folder and those that are in the path local 
display all the files in the usr folder which have been modified after feburary 1st 
display all the files on the current folder excluding those that are present in the folder UNK_START ./src/emacs UNK_END 
display all the files only in the path UNK_START ./sr*sc UNK_END 
display all the files with the names UNK_START name1 UNK_END and UNK_START name2 UNK_END in the current folder and do not search in the sub directories 
display all the header files and cpp files in the current folder 
display all the header files and cpp files in the current folder 
display all the header files and cpp files in the current folder 
display all the hidden directories in the directory UNK_START /dir/to/search/ UNK_END 
display all the hidden files in the directory UNK_START /dir/to/search/ UNK_END 
display all the hidden files in the folder /home 
display all the home folder which end with the extension UNK_START sxw UNK_END and which have been accessed in the last 3*24 hours and which belong to the user bruno 
display all the html files in the current folder 
display all the html files in the current folder 
display all the html files in the current folder excluding search in the path ./foo 
display all the html files in the current folder excluding search in the paths ./foo, ./bar. 
display all the html files in the current folder that have been modified exactly 7*24 hours ago 
display all the html files in the current folder that have been modified in the last 7*24 hours 
display all the html files in the current folder that have not been modified in the last 7*24 horus 
display all the html files in the folder /var/www 
display all the ip addresses in all the files that are present in /etc folder 
display all the ip addresses in all the files that are present in /etc folder 
display all the jars in the current folder 
display all the java script files in a folder 
display all the java script files in the current folder 
display all the java, xml and action scripts (.as) files in a directory 
display all the jpg files in the current folder and do not search in sub directories 
display all the jpg files in the current folder which belong to the user nobody 
display all the jpg images in current folder 
display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names 
display all the normal/regular files in a directory 
display all the normal/regular files in the current folder 
display all the normal/regular files in the current folder and do not go beyond 3 levels 
display all the normal/regular files in the current folder which are empty 
display all the normal/regular files in the directory folder1 
display all the php files in the current folder which do not have the permission 644 
display all the php files in the entire file system 
display all the regular files in current folder 
display all the regular files in current folder excluding all the directories and all the sub directories having UNK_START normal UNK_END in their name 
display all the regular files in current folder that belong to the user UNK_START tom UNK_END 
display all the regular files in the current folder and do not search in sub folders 
display all the regular files in the current folder excluding those that are present in the path UNK_START git UNK_END 
display all the regular files in the current folder excluding those that are present in the path UNK_START git UNK_END 
display all the regular files in the current folder that are bigger than 10kb 
display all the regular files in the current folder that are exactly 10kb 
display all the regular files in the current folder that are less than 10kb 
display all the regular files in the current folder that are modified after the file UNK_START file.log UNK_END 
display all the regular files in the current folder which dont not have the permission 777 
display all the regular files in the current folder which have the permission 777 
display all the regular files in the folder UNK_START $(folder) UNK_END which are modified in the last $(retention)*24 hours and excluding hidden files 
display all the regular/ normal files in a folder 
display all the regular/normal files ending with UNK_START .mod UNK_END in a folder 
display all the regular/normal files in a folder 
display all the regular/normal files in a folder 
display all the regular/normal files in current directory 
display all the regular/normal files in current folder 
display all the regular/normal files in current folder 
display all the regular/normal files in current folder which have been modified exactly 60 minutes before 
display all the regular/normal files in the /root folder which are bigger than 500mb 
display all the regular/normal files in the current directory 
display all the regular/normal files in the current directory which are atleast 2 levels deep 
display all the regular/normal files in the current folder excluding the files UNK_START bbb UNK_END and UNK_START yyy UNK_END 
display all the regular/normal files in the current folder excluding the files with the name mmm 
display all the regular/normal files in the current folder that are not accessed in the last 10 minutes 
display all the regular/normal files in the current folder which are modified after a file 
display all the regular/normal files in the current folder which have been modified in the last 24 hours 
display all the regular/normal files in the entire file system 
display all the regular/normal files in the folder UNK_START /home/user/demo UNK_END which have the permission 777. 
display all the regular/normal files in the folder /path/ which have not been modified today ( from day start ie, 00:00 ) 
display all the regular/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 ) 
display all the soft links in a folder which are not broken 
display all the symbolic links in the current folder 
display all the symbolic links in the current folder 
display all the tex files in the current folder 
display all the tex files in the current folder 
display all the text and pdf files in the current folder 
display all the text files in the current folder 
display all the text files and hidden files in the home folder 
display all the text files and pdf files in the current folder 
display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders 
display all the text files in a folder 
display all the text files in current folder 
display all the text files in current folder 
display all the text files in the current folder 
display all the text files in the current folder and do not search in the bin directory 
display all the text files in the current folder except readme files 
display all the text files in the current folder which have been modified in the last half minute ( 30 seconds ) 
display all the text files in the home folder 
display all the text files in the home folder ( case insensitive search ) 
display all the text files in the temp folder 
display all the trace files (".trc") from the folder $dba/$oracle_sid/bdump/ which have not been accessed in the last 7*24 hours 
display all the users in the current folder that belong to the group UNK_START sunk UNK_END 
display all the users in the current folder which do not belong to the user root 
display files ending with UNK_START .ext UNK_END in current folder excluding those that are present in the list list.txt 
display files ending with UNK_START .ext UNK_END in current folder which are present in the file UNK_START foo UNK_END 
display files in current folder ending with UNK_START pdf UNK_END or UNK_START pdf UNK_END 
display in a list of all the files that are bigger than 10kb in current folder 
display list of all the c files ( fuiles with UNK_START .c UNK_END extension ) in current folder 
display list of all the files in the /tmp folder 
display list of all the files in the current directory 
display list of all the files in the current directory (print0 handles file names with newlines or spaces) 
display list of all the files in the current folder which are empty. 
display list of all the hidden directories in the directory UNK_START /dir/to/search/ UNK_END 
display list of all the hidden directories in the directory UNK_START /dir/to/search/ UNK_END 
display list of all the hidden files in the directory UNK_START /dir/to/search/ UNK_END 
display list of all the hidden files in the home folder 
display list of all the hidden regular/normal files in the directory UNK_START /dir/to/search/ UNK_END 
display list of all the regular/normal files in the current folder which start with UNK_START my UNK_END 
display list of all the regular/normal files in the home folder which are bigger than 512 kb 
display list of all the regular/normal files in the home folder which are exactly 6579 bytes 
display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to "peter","peter" 
display long list of all the perl files in the current folder 
display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) . 
display long listing of all files in the current directory whose size is 24 or 25 bytes. 
display long listing of all normal/regular files in the current directory which have been modified in the last 2 days. 
display long listing of all regular/normal files whose size is less than 50 bytes. 
display long listing of all the empty files in the current folder 
display long listing of all the files in the folder UNK_START /myfiles UNK_END 
display long listing of all the files in the root folder which are bigger than 3kb 
display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00 
display long listing of all the regular hidden files in the folder musica 
display long listing of all the symbolic links in the current folder 
display long listing of all the text files in the current folder 
display long listing of all the text files in the current folder (plus at the end executes quickly by sending bulk data as input to the command in exec) 
display long listing of first 10 directories in the current folder 
display only the file names of all the files which end with UNK_START .deb UNK_END 
display table of files with their name, owner, and size in bytes. 
display ten files in the current directory 
display ten files in the tmp directory 
display the amount of disk space used by all the log files in the folder /usr/local/apache/logs/ 
display the base name(name without extension) of all the UNK_START .nef UNK_END files in the current folder 
display the base name(name without extension) of all the UNK_START .flac UNK_END files in the current folder 
display the change owner command for all the regular files in the current folder. 
display the commands to force delete all jpg files in current directory which are less than 50kb and do not search in the sub directories 
display the contents of all the files in the current folder which start with test ( case insensitive search ) 
display the contents of all the files in the current folder which start with test (case insensitive search) 
display the contents of all the text files in the current directory 
display the count of all normal/regular files in current directory 
display the count of all the directories in the current folder 
display the count of all the directories present in a folder 
display the count of all the files in the current folder 
display the count of all the normal/ regular files in the current directory 
display the count of number html files in the current folder 
display the count of number of files in the current folder 
display the count of regular/normal files in the current folder do not search in sub directories 
display the count of total number of empty files in the current folder 
display the count of total number of non empty files in the current folder 
display the count of total number of text files in the folder /home/you which have been modified in the last 60*24 hours 
display the directory name along with the modified time for all the files /var 
display the file name and creation month of top 11 files in the entire file system 
display the file name and the file type of all the files in the current directory 
display the filenames which do not have begin with dot (.) 
display the files along with the size of all the files in the current which are bigger than 100mb 
display the help of find command 
display the html, javascript and text files in the current folder (print0 is used to preserve the filenames of all the files which have newlines in their names) 
display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files 
display the list of all the normal files excluding hidden files which have been accessed in the last 500 days 
display the list of all the text files present in the current directory excluding the search in certain paths. 
display the long listing detials of all the files in the folder junk which is in home folder. 
display the long listing of all files in /var/log which were modified 60 days or more ago. 
display the manual page of find 
display the name of all directories in the current folder and do not search in sub directories 
display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output) 
display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins 
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins 
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins 
display the number of lines in all the UNK_START .c UNK_END files in the current folder 
display the number of lines in all the UNK_START .c UNK_END files in the current folder 
display the number of lines in all the UNK_START .c UNK_END files in the current folder 
display the number of lines in all the files in the current folder 
display the number of lines in all the files in the current folder 
display the number of lines in all the header files in the current folder 
display the number of lines in all the php files in the current folder 
display the three largest files by size in current folder 
display the three smallest files by size in a folder. 
display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder 
display the type of all the regular/normal files in the entire file system 
display the version of find 
display the version of find command 
display the version of find command 
display top 11 files along with the last access date for all the files in the file system 
displays all files in the current directory 
displays all the files in the current folder 
download a file UNK_START http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip UNK_END using cookies UNK_START oraclelicense=accept-securebackup-cookie UNK_END 
download content from UNK_START http://127.0.0.1:8000 UNK_END and output to UNK_START index.html UNK_END 
download content from UNK_START http://example.com/textfile.txt UNK_END and output to UNK_START textfile.txt UNK_END 
download contents from UNK_START https://raw.github.com/creationix/nvm/master/install.sh UNK_END and execute 
download contents from UNK_START https://www.npmjs.com/install.sh UNK_END and execute 
download contents of a website UNK_START http://example.com/ UNK_END 
download contents of a website UNK_START https://get.scoop.sh UNK_END 
download file UNK_START https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh UNK_END and execute it 
dsisplay all files inthe current folder 
exclude vendor and app/cache dir, and search name which suffixed with php 
execute command UNK_START who UNK_END when key UNK_START \ew UNK_END is pressed 
explicitly list all files in the current directory 
extract UNK_START backup.tar.gz UNK_END with verbose output 
extract UNK_START filename.tar.xz UNK_END with verbose output 
extract UNK_START passwd.tar.gz UNK_END with verbose output 
extract UNK_START phantomjs-1.9.0-linux-x86_64.tar.bz2 UNK_END 
extract UNK_START archive.tar.gz UNK_END to /destination 
extract UNK_START archive.tar.gz UNK_END to /destination 
extract /path/to/my_archive.tar.xz to /path/to/extract and preserve permissions. 
extract archive stored in $1 
file all the sticky bit set files whose permission are 551 
files all files which expect directories and display count of them 
filter output of bind -p by regex 
find case-insensitive stringbuffer in all *.java files 
find directory which case-insensitive name is too in currect directory 
find file which case-insensitive name is too in currect directory 
find files which full path name is /tmp/foo/bar under foo directory and print 
find files which full path name is /tmpfoo/bar under /tmp/foo directory and print 
find files which full path name is /tmpfoo/bar under foo directory and print 
find files which full path name is foo/bar under foo directory and print 
find files which full path name is foo/bar under foo directory and print 
find js file which name is not UNK_START glob-for-excluded-dir UNK_END under current directory. 
find symbolic link file that name match UNK_START *sysdep.c UNK_END 
find UNK_START .flac UNK_END files in current folder using regular expressions 
find *.gif files under the currently directory and sub-directories and list them using the ls command 
find -name UNK_START *.js UNK_END -not -path UNK_START ./node_modules/* UNK_END -not -path UNK_START ./vendor/* UNK_END 
find .bmp or .txt files 
find .gif files in /var/www and below that were last changed between 90 and 180 days ago 
find css files, omitting results containing UNK_START cvs UNK_END 
find stringbuffer in all *.java files 
find stringbuffer in all *.java files, ignoring case 
find texinfo source files in /usr/local/doc 
find texinfo source files in /usr/local/doc 
find a UNK_START fool.scala UNK_END named regular file under /opt /usr /var those directories. 
find a difference between website content of UNK_START http://tldp.org/ldp/abs/html/ UNK_END and UNK_START http://www.redhat.com/mirrors/ldp/ldp/abs/html/ UNK_END 
find a specfic video file in the current directory 
find a.out, *.o and core files under the current directory and sub-directories and delete them. 
find al the files that are modified exactly 2 days ago 
find al the tmp directories in the current directory and create a dump of it 
find all *.csv files which modify within last 2 days in /home directory then zip ( archive )- 
find all files that match UNK_START [a-f0-9\-]{36}\.jpg UNK_END of grep 
find all tools generated files a.out , *.o and core dump files which not required to us these all junk files & delete from current directory . 
find all UNK_START .flac UNK_END files in current folder starting with UNK_START cmn- UNK_END 
find all UNK_START .flac UNK_END files starting with UNK_START cmn- UNK_END and search for files having cjk characters using unicodes 
find all UNK_START .flac UNK_END files starting with UNK_START cmn- UNK_END and search for files having cjk characters using unicodes 
find all UNK_START *.c UNK_END files under $home directory which context contains sprintf 
find all UNK_START js UNK_END suffix files exclue the path *exclude/this/dir*' under current dirctory 
find all *.java files/directories under current directory 
find all *.java files/directories under current directory 
find all .bak files in or below the current directory and move them to ~/.old.files directory: 
find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names 
find all css files that do something with your html id #content 
find all pdfs owned by user “seamstress” 
find all c, cpp files in current folder 
find all c, cpp files in current folder 
find all class files or sh script files in the current folder 
find all configuration files in a folder 
find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension 
find all directories in the current directory 
find all directories in the current directory 
find all directories in the current directory which have the name foo and do not have the extension UNK_START bar UNK_END 
find all directories in the current folder 
find all directories in the current folder and do not search in sub directories 
find all directories named build under the current directory 
find all directories that names are UNK_START apt UNK_END and display details 
find all directories that names are UNK_START project.images UNK_END 
find all directories that names are UNK_START project.images UNK_END and display details 
find all directories with the name UNK_START lib64 UNK_END in the usr folder and replace space with UNK_START : UNK_END 
find all directories with the name root in the entire file system. 
find all directories with the name test in a directory 
find all directory list which have empty list in /tmp directory 
find all directory list which have empty list in /tmp directory . 
find all empty files 
find all empty files in /tmp directory . 
find all empty files in home directory 
find all empty files in the current directory ( empty file = size 0 bytes ) 
find all executable files 
find all executable files in /home directory. 
find all files that names are UNK_START apt UNK_END 
find all files that names are UNK_START apt UNK_END and display detailed list 
find all files the current folder which have not been accessed in the last 7 days and which are bigger than 20kb 
find all files & dircetiry in current directory which have .tmp extension and delete them . 
find all files and directories that have been modified in the last seven days 
find all files and directories under the current directory and display the inode of each one, using printf 
find all files beneath the current directory that begin with the letters UNK_START foo UNK_END and delete them. 
find all files ending with UNK_START js.compiled UNK_END in current folder 
find all files ending with UNK_START js.compiled UNK_END in current folder (print0 is used to handle files with newlines in their names) 
find all files ending with UNK_START js.compiled UNK_END in current folder and rename them. 
find all files having certain word in its name in the current folder 
find all files in /usr/bin and run the UNK_START file UNK_END command on them. 
find all files in and under the current directory that have read, write and execute permissions set for all users. 
find all files in current folder and display the total lines in them 
find all files in current folder having the name pattern UNK_START some_pattern UNK_END and move them to folder target_location (gnu version) 
find all files in current folder having the name pattern UNK_START some_pattern UNK_END and move them to the folder target_location (gnu version) 
find all files in current folder using name patterns 
find all files in current folder which are bigger than 1 mb and move them to another folder 
find all files in current folder which are bigger than 1 mb and move them to another folder 
find all files in current folder which are bigger than 1 mb and move them to another folder after user confirmation 
find all files in current folder which are bigger than 1mb 
find all files in current folder which are bigger than 270mb and less than 300mb 
find all files in current folder which are exactly 300mb 
find all files in current folder which are less than 300mb 
find all files in current folder which are more than 300mb 
find all files in current folder which have been accessed exactly 10 minutes ago 
find all files in etc which have been changed in the last 1 day 
find all files in etc which have been changed in the last 25 hours 
find all files in home folder which have been modified after a timestamp 
find all files in home folder which have been modified exactly 1 day before 
find all files in the a direcotry which have been modified in exactly 1 day back 
find all files in the current directory and sub-directories that were accessed after modifying /etc/hosts 
find all files in the current directory and sub-directories that were modified after the /etc/passwd file was modified 
find all files in the current directory do not display the files which are not readable 
find all files in the current directory do not display the files which do not have read permission to all users 
find all files in the current directory excluding those that end with .js or have the words .min or console in their name 
find all files in the current directory that are less than 1 byte size 
find all files in the current directory which are bigger than 2mb 
find all files in the current directory which are bigger than 4mb 
find all files in the current directory whose size is 24 or 25 bytes. 
find all files in the current folder and search for a word in them. 
find all files in the current folder that are modified exactly 1 minute ago 
find all files in the current folder that are modified exactly 2 minutes ago 
find all files in the current folder that are not modified in the last 10 minutes 
find all files in the current folder that are not modified in the last 240 hours 
find all files in the current folder that end with UNK_START ,txt UNK_END 
find all files in the current folder that have a single letter in their name and have not been modified today 
find all files in the current folder which are bigger than 10mb and less than 50 mb 
find all files in the current folder which are bigger than 10bytes 
find all files in the current folder which are of size 0 bytes. 
find all files in the current folder which are of size 0 bytes. 
find all files in the current folder which end with macs 
find all files in the current folder which have been accessed in the last 30 minutes 
find all files in the current folder which have been modified after /etc/passwd 
find all files in the current folder which have been modified in the last 24 hours 
find all files in the current folder which have been modified in the last 24 hours and whose file name is of length 1 
find all files in the current folder which have not been accessed in the last 30 days in the current folder 
find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20kb 
find all files in the current folder which have not been changed in the last 48 hours 
find all files in the current folder which have not been modified today and whose file name is of length 1 
find all files in the current folder which have only the write permission for the others 
find all files in the current folder which start with pro 
find all files in the current folder whose size is less than 50kb 
find all files in the current folder with the permission 777 and modify the permissions as 755. 
find all files in the entire file system whose size is more than 100mb 
find all files in the file system having the name UNK_START filename UNK_END 
find all files in the file system which are modified after the file /tmp/checkpoint 
find all files in the file system which belong to no user or which have no user 
find all files in the file system which belong to the group users and having the word UNK_START filename UNK_END in their name. 
find all files in the file system which belong to the user pat and having the word UNK_START filename UNK_END in their name. 
find all files in the file system which have been accessed in the last 24 hours 
find all files in the file system which have no user and no group 
find all files in the file system which have not been accessed in the last 2 days 
find all files in the file system whose size is bigger than 3gb 
find all files in the file system whose size is exactly 2kb 
find all files in the file system with the permissions 777 and having the word UNK_START filename UNK_END in their name. 
find all files in the folder UNK_START myfiles UNK_END which are exactly 5 bytes 
find all files in the folder UNK_START myfiles UNK_END which have not been accessed in the last 30*24 hours 
find all files in the folder /etc which have been modified after /tmp/foo 
find all files in the folder /path/to/dir which have been modified between two dates 
find all files in the home folder that are modified in the last 24 hours 
find all files in the home folder that are modified in the last 7 days 
find all files in the home folder which are modified in the last 2 days. 
find all files in the home folder which have been modified between 72 and 96 hours before 
find all files named `linux' on the system 
find all files not ending in UNK_START .html UNK_END 
find all files read less than 1 minute ago 
find all files starting with capital letter in the current folder 
find all files that are readable and writable by their owner 
find all files that are readable or writable by their owner 
find all files that belong to root user 
find all files that do not have execute permission to all 
find all files that do not have read permission to all 
find all files that have been used more than two days since their status was last changed 
find all files that names are dir-name-here 
find all files that names are game 
find all files that were modified between 90 to 100 days ago in home directory and delete then . 
find all files under UNK_START /usr UNK_END 
find all files under the /etc directory and display ip address patterns in them 
find all files under the /etc directory and display any ip address patterns in them 
find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes 
find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar. 
find all files under the current folder except dir1 dir2 dir3 folder 
find all files which name contain UNK_START foo UNK_END and path is not dir1 or dir2 
find all files with pattern` UNK_START *.mp3 UNK_END 
find all files with pattern` UNK_START *.mp3 UNK_END and send output into nameoffiletoprintto file 
find all files with the first letter “e” or “f” and last one x in /usr/bin directory: 
find all files without 777 permision 
find all foo.bar files in the entire file system 
find all foo.bar files in the entire file system and which are present in the same partition as root. 
find all gif files in the file system 
find all gzip files in a folder 
find all headers file *.h in /nas/projects directory 
find all hidden files in the current folder which have been modified after profile file 
find all html or cgi files in current folder 
find all java files in the current folder and search for the pattern regex 
find all javascript files under the current folder 
find all jpg files in current folder 
find all jpg files in the current folder 
find all jpg files in the folder which are in the path UNK_START /201111/ UNK_END and sort them based on name 
find all jpg,png,jpeg,pdf,tif,tiff,bmp and other image formats using regular expressions excluding those ending with UNK_START _ocr.pdf UNK_END 
find all js files under the build direcotry except build/external and build/log directory. 
find all js files under the build direcotry except build/external directory. 
find all js files which path does not contain ./node_modules/* nor './vendor/*" 
find all js files which path neither ./dir1 nor ./dir2 
find all log files larger then 100mb in /home directory and delete them . 
find all normal/regular files in current folder and display the total lines in them 
find all normal/regular files in current folder and display the total lines in them 
find all normal/regular files in current folder which end with UNK_START ~ UNK_END or which begin and end with UNK_START # UNK_END and and and delete them 
find all normal/regular files in current folder which end with UNK_START ~ UNK_END or which begin and end with UNK_START # UNK_END and and move them to temp folder 
find all normal/regular files in the current directory 
find all normal/regular files in the entire file system having the word UNK_START filename UNK_END in their name. 
find all of the executable files on your computer 
find all of the files that are readable 
find all pdf files in the current folder 
find all php files in the folder /var/www/ 
find all png files in the current folder 
find all posix-extended regex UNK_START [a-f0-9\-]\{36\}\.jpg UNK_END files 
find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files 
find all read me files in a folder 
find all readable files 
find all readme files in a folder 
find all regex UNK_START .*/[a-f0-9\-]\{36\}\.jpg UNK_END files 
find all regex UNK_START \./[a-f0-9\-]\{36\}\.jpg UNK_END files 
find all regex UNK_START ./[a-f0-9\-]\{36\}\.jpg UNK_END files 
find all regular file and create jw-htmlfiles.tar 
find all regular files then display the number of occurrences of banana without lines not proper end 
find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has 
find all regular files under the /etc/sysconfig directory that were accessed in the last 30 minutes 
find all regular files which have been modified in the last 48 hours in home folder 
find all regular/normal files in current folder which have been modified in the last 60 minutes 
find all regular/normal files in the current folder 
find all regular/normal files in the current folder that have been modified in the last 120 hours 
find all regular/normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes 
find all regular/normal files in the folder UNK_START myfiles UNK_END which have read and write permission to the other users 
find all regular/normal files which have cpp folder in their path 
find all regular/normal files which have execute permission in current folder and copy them to another folder 
find all sqlite files in the current directory. 
find all symbolic links in the current folder 
find all symbolic links under /usr 
find all teh script files in a directory 
find all text files in current folder and delete all the files that have the word foo in their name 
find all text files in current folder and delete them 
find all text files in current folder and display all files that have the alphabet a in their name 
find all text files in current folder; which have been modified exactly 5 days ago 
find all text files in the current directory 
find all text files in the current directory and compress them to a cpio file 
find all text files in the current directory and display them page wise 
find all text files in the current folder 
find all text files in the current folder excluding those that are presenti n the folder UNK_START /svn UNK_END and search for a pattern. 
find all text files in the current folder which have been modified after the file /tmp/newerthan 
find all text files in the folder UNK_START fff UNK_END and find the md5sum for them 
find all text files in user/directory/ which have been modified today and display the last line of these files 
find all text files which have extra extensions in the current folder 
find all the UNK_START .jpg UNK_END files in current folder and display their count 
find all the UNK_START .c UNK_END files in the folder UNK_START /home/you UNK_END which have been accessed in the last 30*24 hours 
find all the UNK_START .c UNK_END files in the folder /home/david which have been modified in the last 48 hours 
find all the UNK_START .jpg UNK_END files in current folder and display their count 
find all the UNK_START .sh UNK_END files in the current folder ( case insensitive search) 
find all the UNK_START .wma UNK_END files in the folder UNK_START $current_directory UNK_END 
find all the UNK_START error_log UNK_END files in the folder UNK_START /home UNK_END which are bigger than 5mb and force delete them 
find all the UNK_START jpg UNK_END file in a folder. 
find all the UNK_START passwd UNK_END files in the entire file system 
find all the *.conf files under / (root) 
find all the .jpg files in / and copy them to the current folder. 
find all the backup files in the current folder and delete them 
find all the backup files in the current folder and delete them 
find all the backup files in the current folder and delete them after user confirmation 
find all the config(.conf files) files in the folder /home/pat 
find all the configuration files in /etc folder along with the last access & modification time 
find all the configuration files in the file system 
find all the configuration files which have been accessed in the last 30 minutes. 
find all the configuration or text files in current directory 
find all the core files in the entire file system and delete them 
find all the core files in the temp folder and force delete them 
find all the cpp files in current folder 
find all the cpp files in the current folder 
find all the cpp files in the current folder and move them to another folder 
find all the cpp files in the current folder and move them to another folder(plus takes the bulk output of the find command and gives it as input to the move command in exec) 
find all the cpp(c++ source files), java, header files in the current directory 
find all the css files 
find all the database files in the folder /var/named 
find all the direcories in the current folder 
find all the directories with the name UNK_START c UNK_END in the current folder which are at least 3 levels deep and which are not present in the path "/p/". 
find all the directories with the name UNK_START c UNK_END in the current folder which are at least 3 levels deep and which are not present in the path "/p/". 
find all the directories in current folder and delete them 
find all the directories in current folder and do not search in sub directories 
find all the directories in current folder which start with test 
find all the directories in the $logdir folder which have been modified in the last 24 hours and compress them 
find all the directories in the current directory which dont have the execute permission. 
find all the directories in the current folder 
find all the directories in the current folder 
find all the directories in the current folder and create the same directory structure in a remote machine using ssh 
find all the directories in the current folder excluding search in the sub directories and create these directories in another path 
find all the directories in the current folder that are empty(size 0 bytes) 
find all the directories in the current folder which begin with the words UNK_START kt UNK_END and end with a digit 
find all the directories in the current folder which have been modified in 24 hours and move them to the folder /path/to/target-dir 
find all the directories in the current folder which have been modified in 24 hours and move them to the folder /path/to/target-dir 
find all the directories in the current folder which have been modified in 24 hours and move them to the folder /path/to/target-dir 
find all the directories in the current folder which have been modified in 24 hours and move them to the folder /path/to/target-dir 
find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory 
find all the directories in the entire file system whose size is greater than 50kb 
find all the directories in the file system which begin with UNK_START man UNK_END 
find all the directories in the file system which have read, write and execute to all the users 
find all the directories in the folder $logdir which have been modified in the last 5 days and delete them. 
find all the directories in the folder /raid with the extension local_sd_customize. 
find all the directories in the home folder do not search in sub directories 
find all the directories starting with the name UNK_START somenameprefix UNK_END which have not been modified in the last 10 days and force delete them 
find all the directories with the name UNK_START dirname UNK_END in the current folder and force delete them 
find all the directories with the name UNK_START some-dir UNK_END in the current folder and move them to another folder and do not search in subfolders 
find all the directories with the name UNK_START uploads UNK_END in current folder 
find all the empty directories in current folder and delete them 
find all the empty directories in the current folder 
find all the empty directories in the current folder and all its sub directories too 
find all the empty files and folders in your system 
find all the empty in the current folder do not search in sub directories 
find all the empty regular/normal files in the current folder and delete them 
find all the error, access, ssl_engine and rewrite logs which are bigger than 300mb and are less then 5gb in the folder /opt 
find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours ) 
find all the file that have been modified in the last 3 days ( considers day starting not 24 hours ) 
find all the file that have not been modified in the last 3 days ( considers day starting not 24 hours ) 
find all the file which name (name can contains space) end with c or h and content contain UNK_START thing UNK_END 
find all the file which name end with c or h and content contain UNK_START thing UNK_END 
find all the files in the folder /opt which have been changed in the last 120 minutes 
find all the files (under root file system /) that were changed within the last 24 hours 
find all the files (under root file system /) that were updated in the last 24 hours 
find all the files ending with UNK_START .coffee UNK_END in the current folder and search for the words UNK_START re UNK_END in each line 
find all the files ending with UNK_START .foo UNK_END in the folder /usr 
find all the files ending with UNK_START .sh UNK_END in the folder /dir excluding those wth the names foo and bar. 
find all the files ending with UNK_START clj UNK_END in the current folder and search for a pattern 
find all the files ending with UNK_START clj UNK_END in the current folder and search for a pattern 
find all the files ending with UNK_START mkv UNK_END in current folder 
find all the files ending with UNK_START rb UNK_END and display the first 10000 lines from these files. 
find all the files ending with UNK_START ~ UNK_END in current folder and move them to temp folder 
find all the files ending with .ini in the current directory. 
find all the files ending with .mp3 or .jpg 
find all the files ending with jpg in current folder and display their count ( case insensitive ) 
find all the files ending with jpg in current folder and display their count ( case insensitive ) 
find all the files from root folder which have nogroup or noname and dispaly their details. 
find all the files in current directory of size exactly 6mb. 
find all the files in current directory of size greater than 10mb and less than 20 mb. 
find all the files in current directory of size greater than 2gb. 
find all the files in current directory of size smaller than 10kb. 
find all the files in current folder ending with UNK_START ini UNK_END and search for a word in all these files 
find all the files in current folder which end with a speicifc regular expression and display their count 
find all the files in current folder which have been updated in the last 60 minutes 
find all the files in home folder which have been modified in the last 24 hours 
find all the files in the /usr folder that have been modified after the file /usr/firstfile. 
find all the files in the /usr folder which have modification date less than or equal to the file UNK_START /firstfile UNK_END 
find all the files in the current directory and change the permissions to 775. 
find all the files in the current directory and display them 
find all the files in the current directory and print them excluding those that have the name sccs. 
find all the files in the current directory and search for the word UNK_START pw0 UNK_END in them. 
find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified 
find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format 
find all the files in the current directory ending with UNK_START .i UNK_END 
find all the files in the current directory that have the extension UNK_START bar UNK_END and donot search in the subdirecotries directories. 
find all the files in the current directory that have the word UNK_START bash UNK_END in their name 
find all the files in the current directory that have the word UNK_START lib UNK_END in them 
find all the files in the current directory which are bigger than 1000mb 
find all the files in the current directory which end with orig 
find all the files in the current directory which have been accessed in the last 1 day and move them to tmp folder. 
find all the files in the current directory which have been modified after a file 
find all the files in the current directory which have been modified in the last 6 days. 
find all the files in the current directory which have been modified in the last 24 hours 
find all the files in the current directory which have been modified in the last 30 days and display the contents. 
find all the files in the current directory which have the inode number 31246 and remove them. 
find all the files in the current directory which have the size 40 bytes in the current disk partition. 
find all the files in the current directory which start with t and have been modified between one hour (60 minutes) and 12 hours (720 minutes) ago. 
find all the files in the current directory whose size is equal to exactly 126mb. 
find all the files in the current directory with the name UNK_START wagoneer UNK_END which are in the current device. 
find all the files in the current folder (handles files which contain newlines or only spaces in their names) 
find all the files in the current folder and display adding quotations to each file 
find all the files in the current folder and display adding quotations to each file and replace spaces with new line 
find all the files in the current folder and display them in the sorted order of their name 
find all the files in the current folder and display those that are not present in the list UNK_START file.lst UNK_END 
find all the files in the current folder and search for the word UNK_START vps admin UNK_END in them. 
find all the files in the current folder that are modified after the modification date of a file 
find all the files in the current folder that end with the word bar 
find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today 
find all the files in the current folder that have been accessed in today 
find all the files in the current folder that have been accessed in today from the start of the day 
find all the files in the current folder that have been modified exactly 24*3 hours ago 
find all the files in the current folder that have been modified in the last 24*3 hours 
find all the files in the current folder that have been modified in the last 7 days 
find all the files in the current folder that have not been modified in the last 24*3 hours 
find all the files in the current folder which are bigger than 10mb and less than 50mb 
find all the files in the current folder which are bigger than 1mb 
find all the files in the current folder which are bigger than 9mb 
find all the files in the current folder which are exactly 1234 bytes 
find all the files in the current folder which are modified after /bin/sh. 
find all the files in the current folder which are readable 
find all the files in the current folder which are smaller than 9mb 
find all the files in the current folder which are writable 
find all the files in the current folder which belong to the user root. 
find all the files in the current folder which do not belong to any user 
find all the files in the current folder which do not have the execute permission 
find all the files in the current folder which do not have the read permission 
find all the files in the current folder which end with UNK_START ext1 UNK_END or UNK_START ext2 UNK_END or UNK_START ext3 UNK_END 
find all the files in the current folder which end with .o or with the name a.out and display them. 
find all the files in the current folder which have a set uid set 
find all the files in the current folder which have been accessed in the last 24 hours 
find all the files in the current folder which have been accessed in the last 60 minutes 
find all the files in the current folder which have been changed in the last 60 minutes 
find all the files in the current folder which have been modified after the file disk.log 
find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old 
find all the files in the current folder which have been modified in the 10 minutes ago 
find all the files in the current folder which have been modified in the last 60 minutes 
find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files 
find all the files in the current folder which have been modified in the last one day 
find all the files in the current folder which have been modified in the last one minute 
find all the files in the current folder which have executable permission to all the users and display the ten files 
find all the files in the current folder which have execute permission 
find all the files in the current folder which have execute permission to all the users 
find all the files in the current folder which have not been modified in the last 90 days and force delete them 
find all the files in the current folder which have set guid bit on and list the top 10 files. 
find all the files in the current folder which have the name net or comm in them 
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder. 
find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1 
find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits. 
find all the files in the current folder with the name UNK_START test-a UNK_END and move them to the folder test-10 
find all the files in the current folder with the name UNK_START test-a UNK_END and move them to the folder test-10. execdir runs the command in the directory where the file is found. 
find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2. 
find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group 
find all the files in the entire file system starting with the word top 
find all the files in the entire file system that have been accessed exactly 50 days ago 
find all the files in the entire file system that have been accessed in the last 60 days ago 
find all the files in the entire file system that have been changed exactly 60 days and display ten files 
find all the files in the entire file system that have been modified between 50 to 100 days and display ten files 
find all the files in the entire file system that have been modified exactly 50 days ago 
find all the files in the entire file system that have been modified exactly 7 days before which end with UNK_START conf UNK_END 
find all the files in the entire file system that start with the word top and have 3 letters next to it. 
find all the files in the entire file system that start with top 
find all the files in the entire file system that were modified in the last 10 minutes 
find all the files in the entire file system which belong to the group UNK_START staff UNK_END 
find all the files in the entire file system which belong to the user UNK_START roger UNK_END 
find all the files in the entire file system which have been modified in the last 120 hours 
find all the files in the entire file system which have been modified in the last 48 hours 
find all the files in the entire file system which have been modified in the last 5 days 
find all the files in the entire file system whose size is between 50mb to 100mb 
find all the files in the entire file system whose size is exactly 15mb 
find all the files in the entire file system whose size is greater than 20mb 
find all the files in the entire filesystem which belong to the group root and display the ten files. 
find all the files in the entire filesystem which belong to the user root and display the ten files. 
find all the files in the file system that belong to the user www 
find all the files in the file system that start with UNK_START win UNK_END and searched only in the mounted file systems 
find all the files in the file system whcih have been modified in the last 1 day 
find all the files in the file system which are bigger than 3 bytes 
find all the files in the file system which belong to the groep UNK_START users UNK_END and with the name UNK_START dateiname UNK_END 
find all the files in the file system which belong to the user UNK_START pat UNK_END and with the name UNK_START dateiname UNK_END 
find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100mb save them to /root/big.txt 
find all the files in the file system which have been accessed in the last 1 day 
find all the files in the file system which have been changed 1 minute ago. 
find all the files in the file system which have been changed in the last 24 hours. 
find all the files in the file system which have been modified in the last 10 minutes 
find all the files in the file system which have been modified in the last 30*24 hours 
find all the files in the file system which have been modified in the last 60 minutes 
find all the files in the file system which have not been modified in the last 100*24 hours 
find all the files in the file system which have read permission to the user and display the ten files 
find all the files in the file system which have sticky bit enabled to the user 
find all the files in the file system which have the permission 777 and with the name UNK_START dateiname UNK_END 
find all the files in the filesystem which do not belong to any group 
find all the files in the folder UNK_START /mp3-collection UNK_END which are bigger than 10mb excluding those that start with the word metallica 
find all the files in the folder UNK_START /u/bill UNK_END which have been accessed in the last 2-6 minutes 
find all the files in the folder UNK_START /usr/app/etl/01/oth/log/tra UNK_END which have been modified in the last 240 hours excluding hidden files and those with the name UNK_START /usr/app/etl/01/cle/par/files_to_skip.par UNK_END 
find all the files in the folder UNK_START myfiles UNK_END which have been modified exactly 48 hours back. 
find all the files in the folder UNK_START myfiles UNK_END which have not been accessed in the last 30 days 
find all the files in the folder ./machbook and change the owner of them to the user with id UNK_START 184 UNK_END 
find all the files in the folder .home/calvin which have been modified in th last 45 minutes 
find all the files in the folder /home which are bigger than 10mb and smaller than 50 mb 
find all the files in the folder /home which are exactly of size 10mb 
find all the files in the folder /opt which have been accessed exactly 20 days ago 
find all the files in the folder /opt which have been modified between 20 to 50 days ago 
find all the files in the folder /opt which have been modified exactly 20 days ago 
find all the files in the folder /path/to/dir which have been modified after a specific date (feb 07) 
find all the files in the folder /usr/bin which have been modified in the last 10 days 
find all the files in the folder /work which belong to the user UNK_START olivier UNK_END 
find all the files in the folder musica and display them in a single line null separated 
find all the files in the folder ~/music which begin with UNK_START automatically add UNK_END 
find all the files in the home folder that are modified day before yesterday 
find all the files in the home folder that have been modified between 24 to 48 hours 
find all the files in the home folder that have not been modified in the last one year 
find all the files in the home folder which are bigger than 2mb and zip them 
find all the files in the home folder which are empty (size 0 bytes) 
find all the files in the home folder which are less than 300bytes 
find all the files in the home folder which are less than 42 bytes 
find all the files in the home folder which end with UNK_START .tex UNK_END 
find all the files in the home folder which have been modified after a file 
find all the files in the home folder which have been modified in 1 year or more ( which are not modified in the last 1 year ). 
find all the files in the home folder which have been modified in the last 24 hours 
find all the files in the home folder which have been modified in the last 30 minutes 
find all the files in the home folder which have been modified in the last 7 days 
find all the files in the home folder which have been modified today 
find all the files in the home folder which have not been modified in the last 1 year. 
find all the files in the present directory which have the group staff and check if is a symbolic link and display it. 
find all the files in the root folder which have been modified in the last 24 hours and print them 
find all the files older than 30 days 
find all the files starting with UNK_START config UNK_END in the folder symfony 
find all the files starting with UNK_START config UNK_END in the folder symfony ( case insensitive search) 
find all the files that are modified exactly one day ago 
find all the files that are modified in the last 1 day 
find all the files that are modified in the last 1 day 
find all the files that are modified in the last 7 days 
find all the files that are not modified in the last 7 days 
find all the files that have been changed exactly 24 hours ago 
find all the files that have been changed today 
find all the files that have been modified exactly 1 day ago 
find all the files that have been modified exactly 2 days ago 
find all the files that have been modified exactly 24 hours ago 
find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday) 
find all the files that have been modified in exactly 7*24 hours ago 
find all the files that have been modified in the last 1 day 
find all the files that have been modified in the last 1 day ago 
find all the files that have been modified in the last 12 hours 
find all the files that have been modified in the last 2 day 
find all the files that have been modified in the last 2 days 
find all the files that have been modified in the last 24 hours 
find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentday-4 00:00:00 to current day) and copy them to folder. 
find all the files that have been modified in the last 60 minutes 
find all the files that have been modified in the last 7 days, 
find all the files that have been modified since the last time we checked 
find all the files that have been modified today 
find all the files that have been modified today 
find all the files that have been modified today(from the strart of the day) 
find all the files that have not been modified in the last (24*7) hours. 
find all the files that have not been modified in the last 2 days 
find all the files that have not been modified in the last 24 hours 
find all the files that have the word UNK_START fstab UNK_END in their name in a folder 
find all the files that were modified two days ago 
find all the files that were modified yesterday in the current directory. 
find all the files under UNK_START /usr/local UNK_END directory tree which have been modified exactly 24 hours ago 
find all the files which are of size 0 bytes. 
find all the files which end with UNK_START .deb UNK_END and display their base name (strip the extension) 
find all the files which end with UNK_START .deb UNK_END and display their base name (strip the extension) 
find all the files which have been accessed after modifying the file /etc/hosts 
find all the files which have been changed after the modification of a file. 
find all the files which have been modified in the last 15 minutes excluding hidden files. 
find all the files which have size 0 bytes in temp folder 
find all the files which have the write permission to the group and remove the write permission. 
find all the files which start with the name UNK_START metallica UNK_END in the folder UNK_START /mp3-collection UNK_END and which are bigger than 10mb 
find all the files with the name UNK_START datainame UNK_END in the file system which are bigger than 50mb 
find all the files with the name september ( case insensitive ) 
find all the files with the name test in the current folder ( case insensitive ) 
find all the files within your home folder accessed more than 100 days ago 
find all the findme.txt files in the file system 
find all the fles that have .ssh in the end and redirect the output to ssh-stuff 
find all the header files in /usr/include which have been modified in the last 399 days and display the number of lines, number of files, number of characters of all these files 
find all the header files in /usr/include which have been modified in the last 400 days 
find all the hidden files in the temp folder 
find all the html files in the current folder 
find all the html files in the current folder and rename them to .var files 
find all the html files in the current folder which have been modified exactly 7 days ago 
find all the html files in the current folder which have been modified excatly 7 days before 
find all the html files in the current folder which have been modified in the last 7 days 
find all the html files in the current folder which have not been modified in the last 7 days 
find all the html files that are acces in the last 24 hours in the current folder 
find all the html files which are modified in the last 7 days 
find all the html, javascript and text files in the current folder 
find all the javascript files in current folder using regular expressions 
find all the jpg files in current folder and sort them 
find all the jpg files in the directory /ftp/dir which are bigger than 500kb 
find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names) 
find all the links in the current folder and following it to the pointed path 
find all the links in the current folder which are broken 
find all the log files in the file system 
find all the log files in the file system which are present in the current partition 
find all the mp3 files in the current folder and move them to another folder 
find all the mp3 files in the entire file system whose size is bigger than 10mb 
find all the mp3 files in the file system 
find all the mp3 files in the home folder which have been modified today 
find all the non compressed files in the current directory and compress them. 
find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k. 
find all the normal/regualar files in the current folder which have a size of 10kb and display a long listing details of them. 
find all the normal/regular files in /etc/sysconfig which have been accesses in the last 30 minutes 
find all the normal/regular files in current folder and search for a pattern 
find all the normal/regular files in the current directory 
find all the normal/regular files in the current directory and search for the word mail and display the file names 
find all the normal/regular files in the current directory which have been modified in the last 24 hours 
find all the normal/regular files in the current folder which are present in the pattern file UNK_START file_list.txt UNK_END 
find all the normal/regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them 
find all the normal/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them 
find all the normal/regular files in the current folder which have been modified in the last day and display a long listing of them 
find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them 
find all the normal/regular files in the folder UNK_START pathfolder UNK_END excluding all hidden files and display the count 
find all the normal/regular files in the folder UNK_START pathfolder UNK_END which are 2 levels deep, excluding all hidden files and display the count 
find all the normal/regular files in the folder main-directory 
find all the ogg files in the current directory which have the word UNK_START monfichier UNK_END in their name 
find all the patch files in current folder and copy them to separate folder patches 
find all the perl files in /var/www 
find all the perl files in /var/www ( case insensitive search ) 
find all the perl files in the current folder 
find all the perl files in the current folder and search for a pattern 
find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces 
find all the php files 
find all the php files in current folder and search for multiple patterns in these files 
find all the php files in current folder and search for multiple patterns in these files and display the file names 
find all the php files in current folder using regular expressions 
find all the php files in the current folder 
find all the php files in the current folder 
find all the php files in the current folder (discards any directory which has an extension of ".php") 
find all the php/javascript files in current folder using regular expressions 
find all the png files in the current folder which are present in the pattern list search .txt 
find all the png files in the current folder which begin with the word image 
find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories. 
find all the reguar/normal php files in current directory. 
find all the regular files in current folder, that have been changed in the last 3 days and display last 5 files 
find all the regular files in the current directory which do not have a read permission 
find all the regular files in the current folder which start with a UNK_START some text UNK_END 
find all the regular/normal files in all the directories in the /some/dir and delete them 
find all the regular/normal files in the /path folder and delete them 
find all the regular/normal files in the /path folder and delete them 
find all the regular/normal files in the /path folder and delete them 
find all the regular/normal files in the current direcoty which have not been accessed in the last 30 days. 
find all the regular/normal files in the current directory and print them skip searching all the directories in the current folders. 
find all the regular/normal files in the current directory which do not have the extension comment and and redirect the output to /tmp/list 
find all the regular/normal files in the current folder 
find all the regular/normal files in the current folder and do not search in the sub directories 
find all the regular/normal files in the current folder and rename them to html files 
find all the regular/normal files in the current folder which belong to the group UNK_START flossblog UNK_END 
find all the regular/normal files in the current folder which belong to the user UNK_START sedlav UNK_END 
find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000 
find all the regular/normal files in the folder UNK_START myfiles UNK_END which have the permission 647. 
find all the regular/normal files in the folder /travelphotos which are bigger than 200kb and which do not have the word UNK_START 2015 UNK_END in their name 
find all the shell scripts or perl files in the current directory 
find all the swap files (files ending with ~) in the current folder and delete them 
find all the swap files (files ending with ~) in the current folder and delete them 
find all the symbolic links in the current folder 
find all the symbolic links in the current folder and check the file type and display the output of those files which are broken 
find all the symbolic links in the current folder and follow to the original file 
find all the symbolic links in the current folder and follow to the pointing file 
find all the symbolic links in the current folder that are broken 
find all the text files in the current folder and do not search in somedir, bin directories 
find all the text files in the current folder and do not search in somedir, bin directories 
find all the text files in current folder and force delete them 
find all the text files in current folder and move all these to another folder appending UNK_START .bar UNK_END at the end of these files 
find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder 
find all the text files in the current folder 
find all the text files in the current folder 
find all the text files in the current folder 
find all the text files in the current folder and display their permissions and size along with their name 
find all the text files in the current folder and do not search in the sub directories 
find all the text files in the current folder expect those which are in the path UNK_START sk UNK_END 
find all the text files in the current folder starting with UNK_START somefiles- UNK_END 
find all the text files in the entire filesystem which belong to the user root and display the ten files. 
find all the text files in the file system and search only in the disk partition of the root. 
find all the text files in the file system and search only in the disk partition of the root. 
find all the text files in the folder /home/calvin and do not search beyond 2 levels 
find all the text files in the folder /home/calvin which are atleast below 2 levels 
find all the text files in the home directory 
find all the text files in the home folder 
find all the text files present in the current directory excluding the search in certain paths. 
find all the text files that have modified in the last 2 days and not modified today 
find all the text files which are present in the current directory excludinghidden files. 
find all the undo files in the current folder and display the toal lines, words, characters 
find all the video files in the home folder 
find all the wav files in the current folder and do not search in the sub directories 
find all the word press configuration php files in the folder /var/www 
find all the word press configuration php files in the folder /var/www and do not search beyond two levels 
find all the xml files in current folder and which are present in the pattern list file UNK_START /tmp/a UNK_END 
find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files 
find all the xml files in the current folder which are present in the pattern text file 
find all the zip files in the current folder 
find all the zip files in the current folder and create a tar ball of these zip files 
find all txt files under the current folder except ./directory folder 
find all txt files under the current folder except ./misc folder 
find and delete all the empty directories in the current folder and all its sub directories too 
find and delete all the files in the entire file system whose size is greater than 100mb. 
find and image in current folder (case insensitive search) 
find any files in the current directory that begin with a number 
find any files or directories called UNK_START .svn UNK_END under the current directory and run a recursive delete (without prompting) command on each one. 
find case-insentive example.com file, and whole dose not contain beta 
find case-insentive example.com file, omit ./beta path 
find dirctory files which modification time is 7 days ago 
find directories that have been modified in the last seven days 
find directories in the folder /usr/spool/uucp 
find directories under the $logdir directory where there has been no modifications within the last 24 hours and compresses the files. 
find directories under the $logdir directory where there have been no modifications for 5 days and deletes them. 
find directory names starts with UNK_START bar UNK_END 
find directory which case-insensitive name is foo in current directory. 
find directory which name is cookbook under /users/al 
find file end with UNK_START .txt UNK_END in current directory. 
find file named foo.txt under current directory. 
find file named foo.txt under root / directory. 
find file which case-insensitive name is foo in current directory. 
find file which name like UNK_START foo.* UNK_END in current directory. 
find files (under root file system /) that were accessed within the last 24 hours 
find files changed in the last 1 day 
find files ending with .jpg 
find files having the extension UNK_START bam UNK_END in current directory 
find files in $home ending in UNK_START txt UNK_END or UNK_START html UNK_END and case insensitive search for the word UNK_START vpn UNK_END 
find files in /dir/path/look/up directory that names are dir-name-here 
find files in /dir/path/look/up directory that names are dir-name-here 
find files in /tmp directory that named are core and deletes them 
find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled 
find files in /u/bill directory which are access an 2 to 6 minutes ago 
find files in /usr directory which are modified after february 1 of the current year 
find files in current directory that names are game 
find files in current folder ending with UNK_START .c UNK_END or UNK_START .h UNK_END or UNK_START .ch UNK_END and search for a word in these files and enable color highlighting of the matched text 
find files in home directory that accessed more than 100 days ago 
find files in home directory that names are game 
find files in home directory which are modified yesterday 
find files in root directory that names are game 
find files in the /usr/src directory with pattern` *.c that larger than 100 kilobytes 
find files in the current directory and sub-directories, that changed within last hour 
find files in the current directory and sub-directories, that were accessed within last hour 
find files in the current directory and sub-directories, whose content was updated within the last hour 
find files in the current directory having name UNK_START filename UNK_END 
find files in the current directory with pattern` UNK_START *.[ch] UNK_END which are contain ‘thing’ string and print file names 
find files in the current directory with pattern` UNK_START *.[ch] UNK_END which are contain ‘thing’ string and print file names which can contain spaces 
find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.) 
find files in the users home directory and for each one, ask the user to confirm to delete the file. 
find files under the current directory called UNK_START foo UNK_END or UNK_START bar UNK_END 
find files under the current directory containing a space in the filename and delete them 
find files under the current directory ending in UNK_START txt UNK_END and list them, or ending in UNK_START html UNK_END but do nothing. 
find files which do not have all permissions to all the users in the current directory 
find files which full path name is /tmp/foo/bar under /tmp/foo directory and print 
find files which full path name is /tmp/foo/bar under foo directory and print 
find files which full path name like UNK_START */*config UNK_END at current directory and print 
find files which full path name like UNK_START *f UNK_END at current directory and print 
find files which have all permissions to all the users in the current directory 
find files which modification time is 7 days ago 
find files which modification time is one day ago 
find files with pattern` UNK_START *.h UNK_END and print comparison between file and /tmp/master directory 
find files with the extension .conf in the /etc directory 
find foo, foo, foo, foo, etc. 
find foo, foo, foo, foo, etc., but only dirs 
find foo, foo, foo, foo, etc., but only files 
find for a filename with multiple patterns in the current folder 
find for a word in all the regular files in the current directory 
find for a word in all the regular files in the current directory 
find for lighttpd in /var 
find for the word UNK_START dba_2pc_pending UNK_END in all the files of current fodler having the word UNK_START sql UNK_END in their name 
find for xml files in current folder using regular expressions 
find httpd.conf file in /etc directory 
find in $home files ending in UNK_START txt UNK_END and do nothing with them, or files ending in UNK_START html UNK_END and list them null separated. 
find in the entire file system for the file mysql 
find in the entire file system for the files which have sticky bit. 
find in the file system for the directories with the name UNK_START httpdocs UNK_END 
find list of all files with file permission , link , owner , group , reation time , size , file name 
find md5sum of UNK_START string to be hashed UNK_END 
find md5sum of UNK_START string to be hashed UNK_END 
find md5sum of 401 
find md5sum of an empty string 
find md5sum of content from UNK_START www.google.com UNK_END 
find md5sum of string UNK_START hi UNK_END 
find md5sums of files named UNK_START file*.txt UNK_END 
find non-hidden files (ones that do not start with the period UNK_START . UNK_END chartacter) that were are modified in the last 15 minutes. 
find not case sensitive all directories that names are UNK_START apt UNK_END 
find not case sensitive all directories that names are UNK_START apt UNK_END and display details 
find not case sensitive all directories that names are UNK_START project.images UNK_END 
find out what group a given user has 
find regular file named foo.txt under root / directory. 
find regular file named foo.txt under root / directory. 
find regular files and directories that have been modified in the last seven days 
find regular files in the UNK_START mail UNK_END folder under the user's home directory, displaying filenames and lines that contain the text UNK_START linux UNK_END 
find regular files in the current directory, without descending into sub-directories and display as a null separated list. 
find regular files under the current directory and execute an md5sum command on each one 
find regular files which modification time is 7 days ago 
find regular which case-insensitive name is foo in current directory 
find regular/normal files in the current folder 
find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once 
find suffix tcl files under all directories started with UNK_START n UNK_END 
find symbolic links with pattern` UNK_START *sysdep.c UNK_END 
find the UNK_START mycprogram.c UNK_END file (case insensitive find) under the current directory 
find the mycprogram.c (case insensitive find) under the current directory and run the md5sum command against it 
find the biggest files only (but not directories) 
find the count of all the charcters of the list of regular files present in the current folder 
find the count of all the regular files in a directory 
find the count of text files that are present in the current working directory. 
find the depth of all the files in current folder and display the depth and file name 
find the file UNK_START mycprogram.c UNK_END in the current folder 
find the file UNK_START dateiname UNK_END in the current folder ( case insensitive search) 
find the file UNK_START dateiname UNK_END in the entire file system ( case insensitive search) 
find the file UNK_START filename.txt UNK_END in the entire file system 
find the file UNK_START filename.txt UNK_END in the usr folder 
find the file UNK_START foo.txt UNK_END in the current folder and assign the output to a variable 
find the file UNK_START httpd.log UNK_END in the entire file system 
find the file UNK_START httpd.log UNK_END in the folder /home/web-server/ 
find the file UNK_START httpd.log UNK_END in the folder /home/web-server/ ( case insensitive search ) 
find the file UNK_START myfile.txt UNK_END in the folder /home/user/myusername/ 
find the file arrow.jpg in the entire file system 
find the file with inode $inum under the current directory and delete it 
find the file with the name UNK_START esxcfg-firewall UNK_END in the current folder 
find the file with the name UNK_START file UNK_END in the entire file system 
find the md5 sum of all the regular files in multiple folders and display them in sorted order 
find the most recently changed files under current directory 
find the oldest normal file in the current directory 
find the oldest normal file in the current directory 
find the oldest normal file in the current directory and display its contents 
find the oldest normal file in the current directory and display with its timestamp 
find the path of a specfic video file in the current directory 
find the regular js files which path does not contains UNK_START */test/* UNK_END and name does not contains UNK_START *-min-* UNK_END or UNK_START *console* UNK_END 
find the regular/normal file UNK_START myfile UNK_END in the folder /root 
find the ten biggest files 
find the top 25 files in the current directory and its subdirectories 
find the type & description of all the regular/normal files in the home folder 
find the type of all the regular/normal files in the current folder 
find the type of all the regular/normal files in the current folder 
find the type of all the regular/normal files in the current folder (plus takes bulk of files as input to the file command) 
finda all the hidden files excluding those having the extension htaccess 
finda ll the files in the current folder that are modified today. 
finds all directories named cvs, and deletes them and their contents. 
finds all files modified within a certain time frame recursively 
force create hard link between $git_dir/../apresentacao/apresentacao.pdf and $git_dir/../capa/apresentacao.pdf 
force delete all the core files in the home folder 
force delete all the directories the folder UNK_START test folder UNK_END 
force delete all the files in the current folder expect xml files 
force delete all the files that have been modified in the last 3 days 
force delete all the files which have not been accessed in the last 240 hours in the temp folder 
force delete all the regular files with the name UNK_START test.txt UNK_END 
force delete all the regular/normal files in the current folder 
force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days 
force remove all the c files in the current folder 
force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name 
force remove all the directories with the name logs in the folder /var/www 
force remove all the regular/normal files which begin with sess in the temp folder 
force remove all the text files that have not been modified in the last 89 days 
forcible create a symbolic link named UNK_START /etc/file.conf UNK_END to file UNK_START /etc/configuration/file.conf UNK_END 
forcibly and verbosely create a symbolic link named UNK_START target UNK_END to file UNK_START source UNK_END 
forcibly and verbosely create symbolic links in directory UNK_START ~/library/launchagents UNK_END to all files located in /usr/local/opt/mongodb/ and that have filename extension UNK_START .plist UNK_END 
forcibly change owner to all files and directories in current directory to user www-data 
forcibly create a symbolic link named UNK_START linkname UNK_END to file UNK_START new_destination UNK_END 
generates a list of all files beneath the current directory whose filename does not end in .html, so it matches files like *.txt, *.jpg, and so on. 
get a pid of a process 
get all files in a current directory modified in the last 7 days 
get all files in a current directory modified in the last 7 days 
get all the files that are exactly 30 days old 
get all the files that have been modified within the last 30 days 
get second-to-last comma-separated field of each line in file.txt 
get the count of all the files that have been accessed in the last 30 days 
get the git user access 
get the root access 
get the root access 
get the root user access 
get year-month-day from date 
get year-month-day hour:minute:second from date 
gives the chars in line 5 and chars 5 to 8 of line 5, in tst.txt 
grep for the last occurrence of text between two tags 
grep from bottom of file 
insert UNK_START e UNK_END when it's pressed 
keep only read access to all the files in a directory. 
keep only read access to all the files in a directory. 
kill a number of background jobs 
kill all active jobs 
kill all background jobs 
kill all background processes 
kill all jobs 
kill group leader 
lines.txt contains a list of line numbers, one entry per line - output only these lines from text.txt omitting the rest of the file. 
list *.bmp and *.txt files under the /home/user/desktop directory. 
list *.pdf files under the /home/user/desktop directory. 
list *.pdf, *.bmp and *.txt files under the /home/user/desktop directory. 
list pid of a group leader 
list all *.java files under the src directory 
list all *.txt files in the user's home directory. 
list all .c or .sh regular files. 
list all css files (and directories ending with “.css”) under the current directory 
list all css files under the current directory 
list all active jobs and its ids 
list all files 
list all files in /home/bozo/projects directory tree that were modified exactly one day ago. 
list all files in /home/bozo/projects directory tree that were modified within the last day 
list all files in the current directory recursively 
list all files under the current directory called cookies.txt 
list all java file that stringbuff in context. 
list all javascipts file expect files under proc folder 
list all javascipts file which whole name does not contain UNK_START directory UNK_END 
list all javascipts file which whole name does not contain excludeddir 
list all javascipts file which whole name does not contain excludeddir or excludedir2 or excludedir3 
list all js files under currect directory exculde the directory which path contain UNK_START /path/to/search/exclude_me UNK_END or name isexclude_me_too_anywhere 
list all processes with its pids 
list all regular files under the directory UNK_START $directory UNK_END 
list all regular files which path is not dir1 or dir2 
list all regular files which path is not dir1 or dir2 
list all regular files which path is not dir1 or dir2 
list all running jobs 
list all samba files in /var/l* directory ( /var/lib or /var/log ) 
list all the UNK_START .ksh UNK_END files in the current directory 
list all the directories in the folder httpdocs 
list all the drectories present in the current directory and do not search in the sub directories. 
list all the files in the current directory which are of size 0 bytes. 
list all the files in the file system excluding proc folder and excluding symbolic links which have write permission for the user 
list all the sqlite files in the current folder 
list all zero-length files under the current directory 
list any files modified since /bin/sh was last modified 
list complete path name to process associated with pid UNK_START $1 UNK_END 
list directories owned by group id 100 in the file system 
list files found under the current directory ending in UNK_START txt UNK_END or ending in UNK_START html UNK_END 
list files in /u/bill that were last read from 2 to 6 minutes ago 
list files in /usr modified after february 1 of the current year 
list files in /usr modified after the time which /tmp/stamp$$ modified 
list files in the directory UNK_START $directory UNK_END with permissions UNK_START $permissions UNK_END 
list files that the user does not have permissions to read, do not try to descend into directories that cannot be read. 
list files that the user does not have permissions to read, do not try to descend into directories that cannot be read. 
list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching, and not descending into directories on other filesystems 
list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching. 
list jobs including its pids 
list names of bind functions containing UNK_START / UNK_END 
list regular file which file name end with UNK_START *.c UNK_END or UNK_START *.sh UNK_END in current directory 
list regular file which file name end with UNK_START cache UNK_END UNK_START xml UNK_END or UNK_START html UNK_END in current directory 
list regular file which file name is not end with UNK_START .html UNK_END in current directory in current directory 
list regular files ending in .mbox 
list regular files under the current directory 
list regular files under the current directory ending in .mbox putting a null between each file found 
list regular files under the user's home directory that are over 100kb and have not been accessed in over 30 days. 
list symbolic links under the directory UNK_START $directory UNK_END 
list symbolic links under the directory UNK_START $directory UNK_END using contents of the $ifs variable between output of each one 
list the details of all the directories in the current folder 
list the files with a name ending with UNK_START .mp3 UNK_END or UNK_START .jpg UNK_END and beginning with UNK_START foo UNK_END 
list the regular files in your home directory that were modified yesterday 
list txt files older than 5 days or html files of any age, null separated 
lists txt or html files older than 5 days, null separated 
locate large files (> 100 mb) in /home/ for UNK_START cleaning UNK_END 
locate large files (> 100 mb) in /home/ for UNK_START cleaning UNK_END 
login as user postgres 
login as user root 
long list al the files in the current directory which have all the permissions 
long list al the files in the current directory which have only read permission to the group 
long list al the files in the current directory which have read permission to the group 
long list all the files in the curent folder starting with UNK_START tes UNK_END 
long list the detials of all the shell scripts in current directory 
looks for all files larger than 10 megabytes (10485760 bytes) within /home 
make directory UNK_START /etc/cron.15sec UNK_END 
modify the permissions of all the folders in a directory 
move all files in the current folder another folder and do not move the files in the sub folder 
move all the files in the current folder to temp folder and search atleast in one subfolder 
move all the files in the current folder to temp folder and search atleast in one subfolder 
move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link 
move files accessed more than one day ago to directory tmp 
only get md5sum of a file 
perform a case insensitive search 
prevents curl from returning error (23) failed writing body when grepping for foo 
print all filenames of files under current dir containing 'foo', case-insensitive 
print all files in the current directory and all subdirectories 
print all files in the current directory and all subdirectories 
print all files in the directories except the ./src/emacs directory 
print all files in the file system excluding those ending with UNK_START .c UNK_END 
print all readline bindings 
print apparent size rather than disk usage 
print bindings for UNK_START p UNK_END and UNK_START e UNK_END with no case sensitivity 
print disk usage of files or folders in current directory 
print readline bindings that use key code UNK_START \\e\\c-k UNK_END 
print the line containing terminate and everything after in UNK_START file UNK_END 
print the names of all of the unstripped binaries in the /usr/local directory tree. builtin tests avoid running file on files that are not regular files or are not executable 
print top 10 largest files and directories 
prints a number stored among text in $filename 
prints absolute file paths for files in current directory 
prints first line of $bigfile 
prints the last non-empty line of a file 
prints the last non-empty line of a file 
prints the names of all files in the directory tree rooted in /usr/src whose name ends with ‘.c’ and that are larger than 100 kilobytes. 
prune all the files in the current directory, only current directory (.) is the output 
read all history lines not already read from the history file 
recall the second argument from a previous command by pressing alt-shift-y 
recursively change owner and group of the directory /opt/antoniod/ to user and group antoniod 
recursively change owner and group of the directory /vol/html and all files into it to user ec2-user and group apache 
recursively change owner and group of the directory /your/directory/to/fuel/ and all files into it to user and group nginx 
recursively change owner and group of the directory and all files into it to user UNK_START user UNK_END and group UNK_START www-data UNK_END 
recursively change owner and group of the directory and all files into it to user root and group root 
recursively change owner and group of the directory and group of the directory and all files into it to user and group dev_user 
recursively change owner of the directory /users/xxx/library/developer/xcode/templates and all files to user xxx 
recursively change owner of the directory /tmp to the current user 
recursively change owner of the directory /usr/lib/node_modules/ to the current user 
recursively change owner of the directory /usr/local to the current user 
recursively change owner of the directory /usr/local/lib to the current user 
recursively change owner of the directory /usr/local/lib/node_modules/ to the current user 
recursively change owner of the directory and all files into it to user nobody 
recursively change owner of the directory testproject and all files into it to user ftpuser 
recursively change owner of the directory ~/.npm to the current user 
recursively change user of the direct /home/test/ and all files into it to user test 
recursively change user of the direct public_html and all files into it to user owner 
recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number 
recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number 
recursively finds all files newer than a date 
recursively look for files ending in either .py or .py.server 
recursively look for files ending in either .py or .py.server 
remote copy all text files from one location to another 
remove all UNK_START foo* UNK_END files under current dir 
remove all core dump files from user's home directory 
remove all core files in the file system 
remove all core files in the file system 
remove all files that's older than 30 days in UNK_START /tmp UNK_END 
remove all subdirectories named UNK_START cvs UNK_END under current dir 
remove all text files from the current folder 
remove all text files from the current folder. print0 is used to handle files whose names have only spaces or those files which have newlines in their names 
remove all the UNK_START .core UNK_END files in the file system 
remove all the UNK_START .core UNK_END files in the file system 
remove all the UNK_START core UNK_END files in the current folder which have not been changed in the last 4 days. 
remove all the ds_store files in the current directory 
remove all the core files from /usr folder which have not been accessed in the last 7*24 hours 
remove all the core files in the current directory 
remove all the core files in the home folder 
remove all the core files in the temp file after user confirmation 
remove all the files in current folder which have the extension UNK_START ds_store UNK_END 
remove all the files in the current folder which have not been changed in the last 30*24 hours 
remove all the files in the current folder which have not been modified in the last 10 days 
remove all the files in the current working directory which have a specifc inode number 
remove all the files in the folder UNK_START myfiiles UNK_END which have not been accessed in the last 30*24 hours 
remove all the files in the present directory which have space in their name. 
remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder. 
remove all the files with the name UNK_START trash UNK_END in the folder /home 
remove all the log files which have not been modified in the last 5 days 
remove all the pdf files in the current folder and do not delete those in the sub folders 
remove all the permissions for others to all the files in the current folder which have read,write,execute access to users,group and others. 
remove all the regular/normal files in the temp folder and do not delete in the sub folders 
remove top-level domain (.com, .org) from url's in urllist.txt 
removes last n lines from file.txt 
rename all the text files in the current folder to html files 
renames all UNK_START .htm UNK_END files to UNK_START .html UNK_END files 
replace UNK_START exp_to_find_for_replacement UNK_END with UNK_START exp_to_replace UNK_END for all the files in the current folder 
return every file that does not have bar somewhere in its full pathname 
returns a list of files create time is 1 minute ago under the root directory. 
returns a list of files modification newer than poop 
returns the first 100 bytes in the file 
run ksh shell as user apache 
run ls command on *.pl files 
run ls command on files found 
same as above example with -exec , in this example with -ok it should ask for confirmation before executing the rm command . that is called user intractive command 
search all block spacial files called backup from /usr directory downwards and print them . 
search character special files called UNK_START backup UNK_END from /usr directory downwards and print them . 
search in current directory downwards all files which were accessed exactly 7 days back 
search in current directory downwards all files whose status has changed more then 7 days ago 
search in root ( / ) directory downwards all files which have less than 2 links. 
search in root ( / ) directory downwards all files which have exactly 2 links. 
search a url in all regular/normal files in a folder. 
search all files in the current folder which match the regular expression 
search all jpg files in current folder 
search all jpg images in current folder and rename them 
search all mp3 files in the folder UNK_START /home/you UNK_END which have been modified yesterday (from the start of day 00:00 to 23:59) 
search all the UNK_START .sh UNK_END files in the /usr folder and follow the symbolic links to their original file 
search all the files in the current folder and assign them to a variable 
search all the files in the current folder excluding those that are present in the folder test and using regex 
search all the files in the current folder using name patterns 
search all the files in the current folder using regex 
search all the files in the current folder using regex excluding those that are present in the folder test 
search all the files in the folder UNK_START myfiles UNK_END which have the word UNK_START blue UNK_END in their name 
search all the lines that start with the word malloc in the files ending with .c or .h or .ch 
search all undo files(ending with .undo) in the current folder and calculate the total size of them 
search all undo files(ending with .undo) in the current folder and calculate the total size of them 
search files in the file system excluding those in the paths UNK_START 10_recommended UNK_END and UNK_START /export/repo UNK_END 
search files in current folder using name patterns 
search files in the folder /home which have been modified after /tmp/after and before /tmp/before 
search for UNK_START flac UNK_END files in current folder using regular expressions 
search for UNK_START message.txt UNK_END in the folder .cache/bower and display its contents 
search for UNK_START some_function UNK_END in all the python files in the current directory 
search for UNK_START specified string UNK_END in all the php files in the current folder 
search for *.log files starting from / 
search for *.log files starting from / (root) and only in the current file system 
search for mp3 files in the current folder and subfolders except in dir1 subfolder. 
search for mp3 files in the current folder and subfolders exclude dir1 and dir2 
search for a cpp directory in current folder and display all its files 
search for a file UNK_START file UNK_END in current folder and display all instances of this file 
search for a file UNK_START file UNK_END in current folder and if the file is found quit ! 
search for a files UNK_START cart1 UNK_END in the folder junk which is in home folder and move the folder to ~/junk/a. 
search for a function in all python files in the current folder 
search for a regular/normal file UNK_START myfile UNK_END in the entire file system excluding the folder in excluded_path 
search for a regular/normal file myfile in the folder UNK_START /home/weedly UNK_END 
search for a shell script in the current folder and display the current folder path 
search for a shell script in the current folder and display the current folder path but search from the sub directories 
search for a word in all c files in the current folder 
search for a word in all files in a directory 
search for a word in all the .c files in the current directory 
search for a word in all the .c files( those having the extension "c") in current directory 
search for a word in all the fies in the current folder 
search for a word in all the files in the current directory 
search for a word in all the files in the current directory 
search for a word in all the files in the current directory 
search for a word in all the files in the current directory 
search for a word in all the files in the current directory (case insensitive search) 
search for a word in all the files in the current directory and display the file paths relative to the current directory 
search for a word in all the files in the current directory and display the list of matched files. 
search for a word in all the files in the entire filesystem and display the matched fline along with the file name 
search for a word in all the files with the extension UNK_START ch UNK_END in the current folder 
search for a word in all the normal/regular files in the current folder 
search for a word in all the php files in the current folder and display the count of all matching lines. 
search for a word in all the php files in the current folder and display the count of all matching lines. 
search for a word in all the php files in the current folder and display the count of all matching lines. 
search for a word in all the php files in the current folder and display the matching lines 
search for a word in all the php files in the current folder and display the matching lines. 
search for a word in all the php files in the current folder and display the matching lines. plus at the end takes multilple files as input 
search for a word in all the regular files in the current folder without traversing the sub directories . 
search for a word in all the regular files in the current folder. 
search for a word in all the regular/normal files in the current folder and display the filename along with the matched text 
search for a word in all the regular/normal files in the entire filesystem. ( + is used to give more than one file as input to the grep command. 
search for a word in all the shell scripts in the current folder and display the matched files. 
search for a word in all the shell scripts in the current folder and display the matched files.(case insensitive search in grep commad) 
search for al cpp files in current folder and display distinct parent directory of these files in sorted order 
search for al cpp files in current folder and display unique parent directory of these files in sorted order 
search for all UNK_START tif UNK_END images in current folder 
search for all UNK_START tif UNK_END images in the entire file system 
search for all scala files under the current directory that contain the string null 
search for all empty directories in the folder /home 
search for all files ending with UNK_START .mkv UNK_END in current folder 
search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago 
search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file 
search for all pdf files in the folder UNK_START /home/pdf UNK_END which have been accessed in the last 60*24 hours 
search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday 
search for all regular files in the current directory which have the extension UNK_START c UNK_END or UNK_START asm UNK_END 
search for all regular/normal files in current folder and display all the files which contain 16 lines 
search for all regular/normal files in the current folder and display the number of lines in the file 
search for all regular/normal files in the current folder and display the number of lines in the file 
search for all tar.gz compress files in the current folder 
search for all text files in the folder /home 
search for all the UNK_START .c UNK_END files in the folder UNK_START /home/david UNK_END which have been modified in the last 10 minutes 
search for all the .o files in the current directory which have permisssions 664 and print them. 
search for all the c files in the current folder 
search for all the directories ending with UNK_START .mp3 UNK_END in the file system and move them to the folder /mnt/mp3 
search for all the directories in the current directory and do not search in sub directories 
search for all the file sin the current folder which are bigger than 10kb and display them smallest file 
search for all the files ending with UNK_START fits UNK_END in the folder UNK_START /store/01 UNK_END 
search for all the files having spaces in the current folder and save the output to the variable founddata 
search for all the files in current folder and display all the file names separated by space 
search for all the files in current folder which start with UNK_START file2015-0 UNK_END and move them to another folder 
search for all the files in current folder which start with UNK_START file2015-0 UNK_END and move them to frst 400 fiiles to another folder 
search for all the files in the current directory which belong to the user UNK_START xuser1 UNK_END and change the owner ship of them to UNK_START user2 UNK_END 
search for all the files in the current directory which have been modified in the last 24 hours. 
search for all the files in the current directory which have size greater than 10kb (approx) and less than 32kb(approx). 
search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them. 
search for all the files in the current directory which have the name a.out or core or which end with .o and delete them. 
search for all the files in the current folder and sort them in the order of their depth and display the file names 
search for all the files in the current folder which are bigger than 10kb and display them biggest file 
search for all the files in the current folder which have spaces and force delete them 
search for all the files in the current folder which start with UNK_START my UNK_END 
search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var. 
search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file "files.secure". 
search for all the files in the folder /data/images which are modified after /tmp/foo 
search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end 
search for all the files in the folder /home which have sticky bit set and have the permissions 553 
search for all the files in the folder /home/user1 which end with UNK_START .bin UNK_END 
search for all the files in the folder /usr/bin which have not been accessed in the last 100*24 hours 
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them 
search for all the files with the name UNK_START dummy UNK_END in the current folder 
search for all the foo.txt files in the current folder and move them to another location 
search for all the jpg files in the folder UNK_START /mnt/hda1/zdjecia/test1/ UNK_END and copy these files to the folder /mnt/hda1/test/<same name as the found file> 
search for all the log files in the folder /apps which have not been modified in the last 60 days and which are present in the same file system as that of /apps and delete them 
search for all the mp3 files in the file system and move them to the folder /mnt/mp3 
search for all the mp3 files in the folder /home/you which have been accessed 24 ago 
search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size. 
search for all the perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified 8-10 days ago. 
search for all the php files in the folder UNK_START /home/mywebsite UNK_END which have been changed in the last 30*24 hours 
search for all the regular files in the current folder and display the contents 
search for all the regular files in the folder /home which have the permission 077 
search for all the regular files that have been changed in the last 48 hours and sync these to another folder 
search for all the regular/normal files in the /etc folder which have been modified in the last 24 hours 
search for all the regular/normal files in the current folder which start with UNK_START my UNK_END 
search for all the regular/normal files with the name UNK_START access.log UNK_END in the folder /var/www which are bigger than 100mb 
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3 
search for all the rpm files in the file system which reside in the same partition as that of the root 
search for all the text files and display the long listing of these files from that directory 
search for all the text files in the folder /foo and delete them 
search for all xml files in current folder and display them 
search for dbmsspool.sql file in the current folder 
search for directories in the folder UNK_START test UNK_END which end have 5 digits as their name 
search for directories in the folder UNK_START test UNK_END which end with 5 digits using regular expressions 
search for files cart4 or cart5 or cart6 in the folder junk which is in home folder and delete it. 
search for files having python in filename 
search for files having python in filename 
search for files in current folder using name patterns 
search for files in current folder using regular expressions 
search for files in the current folder ending with UNK_START .au UNK_END 
search for files in the current folder using name patterns 
search for files in the current folder which start with UNK_START myfile UNK_END ( case insensitive search ) 
search for files named UNK_START wsfy321.c UNK_END in a case-insensitive manner 
search for files starting with memo and which belong to the user ann in the folder /work 
search for files that are readable for everybody, have at least on write bit set but are not executable for anybody 
search for files that are readable for everybody, have at least on write bit set but are not executable for anybody 
search for files which are writable by both their owner and their group 
search for files which are writable by both their owner and their group 
search for files which are writable by either their owner or their group 
search for files which are writable by either their owner or their group 
search for files which are writable by either their owner or their group 
search for files with the name UNK_START temp UNK_END in the /usr folder 
search for mp3 files in the folder /mp3collection which are smaller than 5mb 
search for multiple files in the current folder 
search for pattern matched files in the current folder and subfolders exclude UNK_START excluded path UNK_END 
search for perl files in the folder /users/tom 
search for php files in current directory and search for a word in all these files 
search for regular files in the current folder which path is not UNK_START ./.* UNK_END and not UNK_START ./*/.* UNK_END 
search for regular/normal file with the name UNK_START myfile UNK_END in the entire file system 
search for soft links in current folder and display those links which are not pointed to files in current folder 
search for swap files (.swp files) in temp folder and remove them 
search for text files in the current folder which do not have write access to others 
search for text files in the current folder which do not have write access to others 
search for text files in the current folder which have write access to others 
search for text files in the directory UNK_START /home/user1 UNK_END and copy them to the directory /home/backup 
search for text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search) and display their contents 
search for text files in the folders /home/hobbes/ /home/calvin/ 
search for the directory UNK_START config UNK_END in the current folder 
search for the directory UNK_START config UNK_END in the current folder and change directory to it 
search for the directory UNK_START mysql UNK_END in the /etc folder 
search for the directory UNK_START mysql UNK_END in the entire file system 
search for the directory UNK_START ora10 UNK_END in the entire file system 
search for the directory UNK_START uploads UNK_END in current folder and change the permission of the folder and all the files to 755 
search for the directory starting with UNK_START ora10 UNK_END in the entire file system 
search for the directory testdir in the folder /home 
search for the directory with the name aa in the current folder 
search for the file UNK_START .user.log UNK_END in a folder 
search for the file UNK_START abc UNK_END in the current folder or display all the directories 
search for the file UNK_START file UNK_END in current folder and save the output to the same file 
search for the file UNK_START file UNK_END in the current folder excluding those in the sub directory UNK_START .git UNK_END 
search for the file UNK_START file1 UNK_END in the entire file system 
search for the file UNK_START file_name UNK_END in the folder /path 
search for the file UNK_START filename UNK_END in the entire file system 
search for the file UNK_START foo.txt UNK_END in the entire file system 
search for the file UNK_START foobar.txt UNK_END in the folder UNK_START /home/mywebsite UNK_END 
search for the file UNK_START job.history UNK_END in the folder /data/spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern 
search for the file UNK_START myfile UNK_END in the current folder and display all errors apart from permission denied error 
search for the file UNK_START myletter.doc UNK_END in the home folder 
search for the file UNK_START name_to_find UNK_END in the home folder 
search for the file UNK_START process.txt UNK_END in the current directory 
search for the file UNK_START process.txt UNK_END in the current folder (case insensitive search) 
search for the file UNK_START process.txt UNK_END in the entire file system 
search for the file UNK_START process.txt UNK_END in the entire file system (case insensitive search) 
search for the file centos in /usr folder ( case insenstive search ) 
search for the file chapter1 in the folder /work 
search for the file filename in the entire file system 
search for the file foo in the current folder and display a long listing of it in sorted order of modification date 
search for the file foo.txt in the entire file system 
search for the file in the entire file system which has the words UNK_START filename UNK_END in its name 
search for the file job.hostory in the folder UNK_START /data/spoolln UNK_END 
search for the file picasso in the folder /home/calvin/ (case insensitive search) 
search for the file test in the current folder 
search for the file test.txt in the folders /home and /opt 
search for the file test2 in the current folder 
search for the file, filename.txt in the current folder 
search for the file, filename.txt in the current folder ( case insensitive search ) 
search for the file, filename.txt in the folder /home 
search for the files UNK_START foo.txt UNK_END in the current folder 
search for the files UNK_START foo.txt UNK_END in the current folder and rename it to foo.xml 
search for the files in the current folder which begin with the word UNK_START kt UNK_END followed by a digit 
search for the files which contain the word start in their name excluding search in ./proc, ./sys, ./run folders 
search for the files with the name UNK_START temp UNK_END and which have not been accessed in the last 7*24 hours in the /usr folder 
search for the folder .dummy and remove it from the folder UNK_START test folder UNK_END 
search for the folder .dummy and remove it from the folder UNK_START test folder UNK_END 
search for the folder .dummy in the entire directory structure of UNK_START test folder UNK_END and remove it. 
search for the host UNK_START slc02oxm.us.oracle.com UNK_END in all the xml files in the current folder and display the files which has the matched content 
search for the ip UNK_START 192.168.1.5 UNK_END in all the files in /etc folder 
search for the pattern UNK_START tgt/etc/file1 UNK_END in the files tgt/etc/file2, tgt/etc/file3 
search for the pattern in all the regular/normal files in the entire file system 
search for the regular/normal file UNK_START dateiname UNK_END in the entire file system 
search for the regular/normal file UNK_START foo.bar UNK_END and force delete it 
search for the regular/normal file UNK_START myfile UNK_END in the current folder excluding search in the paths of UNK_START work UNK_END and UNK_START home UNK_END sub directories 
search for the regular/normal file UNK_START myfile UNK_END in the folder /root excluding those that are present in the UNK_START work UNK_END directory 
search for the regular/normal file UNK_START myfile UNK_END in the folder /root excluding those that are present in the /root/work directory 
search for the regulars file starting with hstd which have been modified yesterday from day start and copy them to /path/tonew/dir 
search for the word UNK_START damian UNK_END in all the regular/normal files in the /etc folder and display only the matched file name 
search for the word UNK_START foo UNK_END in all the regular/normal files in the directory UNK_START /path/to/dir UNK_END 
search for the word UNK_START foo UNK_END in all the regular/normal files in the directory UNK_START /path/to/dir UNK_END 
search for the word UNK_START foo UNK_END in all the regular/normal files with the name UNK_START file-pattern UNK_END in the directory UNK_START /path/to/dir UNK_END 
search for the word UNK_START methodnamehere UNK_END in all the python files in the folder UNK_START /mycool/project/ UNK_END and display color on the matched lines in the output 
search for the word UNK_START mysql UNK_END in all the files in the current containing the word UNK_START notes UNK_END in their name 
search for the word UNK_START mysql UNK_END in all the files in the current containing the word UNK_START notes UNK_END in their name. print0 is used to handle files with newlines in their names or those which have only spaces in their names 
search for the word UNK_START nameserver UNK_END in all the configuration files of the /etc folder 
search for the word UNK_START nameserver UNK_END in all the regular/normal files in the /etc directory and display the name of the file along with the matched line 
search for the word UNK_START nutshell UNK_END or UNK_START nutshell UNK_END in all the files in the folder book 
search for the word UNK_START put UNK_END in all the files in the current folder which have the word UNK_START bills UNK_END in their name and display the matched line along with the filename. 
search for the word UNK_START redeem reward UNK_END in all the regular/normal files in the current folder 
search for the word UNK_START search-pattern UNK_END in all the regular/normal files in the current folder and display the matched file name 
search for the word UNK_START slrn UNK_END in all the files in the current folder 
search for the word UNK_START slrn UNK_END in all the files in the folder $home/html/andrews-corner 
search for the word log in all the files in the folder ~/jsmith 
search for the word bananas in the all the regular/normal files in the entire file system 
search for the word echo all the bash files(files ending with .bash) in the current folder 
search for the word error in all the xml files in the current folder 
search for the word foo in all the js files in the current folder 
search for the word foo in all the js files in the current folder 
search for the word text in all the python files in the current folder 
search for version in system.info files. 
search for word linux in all the regular/normal files in the folder mail. 
search in all the regular/normal files of the current folder for the word UNK_START word UNK_END and display the matched file name 
search in current directory downwards all files whose size is less then 10 bytes 
search in the current directory for any file named chapter1.txt 
search in the current folder for all the directories with the name UNK_START test UNK_END 
search in the current folder for all the regular/normal file with the name UNK_START test UNK_END 
search in the current folder for the file UNK_START myletter.doc UNK_END 
search in the current folder for the file with the name UNK_START test UNK_END 
search in the current folder for the file with the name UNK_START test UNK_END ( case insensitive search ) 
search in the current folder for the files that begin with UNK_START myletter UNK_END 
search in the home folder for all the files with the name UNK_START monfichier UNK_END 
search normal files called UNK_START banckup UNK_END from /usr directory downward and print them. 
search the entire file system for the file UNK_START jan92.rpt UNK_END 
search the file UNK_START myfile.txt UNK_END in home folder 
search the file myfile.txt in the current folder 
search the pattern ^pyerr in all the UNK_START .c UNK_END files in the folder lib/ 
search the word UNK_START mysearchstr UNK_END in all the regular/normal files in the current folder and display the line number and the file name 
search through only the /usr and /home directories for any file named chapter1.txt 
searches through the /usr directory for the regular file named UNK_START chapter1* UNK_END 
searches through the /usr/local directory for files that end with the extension .html 
searches through the root filesystem ("/") for the file named chapter1, and prints the location 
searches through the root filesystem ("/") for the file named chapter1, and prints the location 
searches through the root filesystem ("/") for the file named chapter1. 
searches through the root filesystem ("/") for the file named chapter1. 
searching for all files with the extension mp3 
set myvariable to the value of variable_name 
set a crontab to create or update the timestamp of UNK_START washere1 UNK_END in the current directory every minute. 
set a crontab to create or update the timestamp of UNK_START washere2 UNK_END in the current directory every 30 minutes. 
set variable UNK_START uname_m UNK_END to machine architecture, ie. x86_64 
set variable r to currently running kernel release, ie. 4.4.0-81-generic 
show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories 
show all .cpp, .c, .h, .hpp files in the folder ~/src 
show all directories in the current folder excluding those that are present in the sub directories of media, images and backups 
show all directories in the current folder excluding those that are present only in the paths ./media, ./images and ./backups 
show all files in /usr/tom and display only files ending with UNK_START .pl UNK_END or UNK_START .pm UNK_END 
show all files in the current directory and all subdirectories 
show all files in the current directory and all subdirectories 
show all regular/normal the files in the current folder whose size is bigger than 0 bytes excluding everything 
show all the UNK_START .acc UNK_END files in the folder /home 
show all the UNK_START .flac UNK_END files in the current folder and do not search in the sub directories 
show all the directories in the current folder 
show all the files in current directory 
show all the files in the current folder excluding those from the directories whose name starts with UNK_START git UNK_END 
show all the files in the current folder which has the word UNK_START itm UNK_END 
show all the files in the entire file system which are bigger than 1.1gb 
show all the files in the entire file system which are bigger than 100mb 
show all the files in the folder /etc which have been modified in the last 24 hours 
show all the mp3 files in the folder /home 
show all the regular files in current folder 
show all the regular/normal files in the folder /home/user/demo 
show the disk use of all the regular/normal files in the current folder which are bigger than 50mb 
show the disk use of all the regular/normal files in the file system which are bigger than 100mb 
show the list of all the files in the current folder which have been modified within the 24 hours 
simulate a full login of user builder 
simulate a full login of user root 
sleep for 1 second 
sleep for 10 seconds 
sleep for 5 seconds 
sleep for 500 seconds 
sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days 
sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp ) 
sort based on size and display top ten largest normal/regular files in the current folder 
sort based on size and display top ten small normal/regular files in the current folder 
sort each file in the bills directory, leaving the output in that file name with .sorted appended 
sort each file in the bills directory, leaving the output in that file name with .sorted appended 
split $source_file" into pieces per 100 lines 
split a file UNK_START list.txt UNK_END into pieces per 600 lines 
split all files in directory UNK_START /dev/shm/split/ UNK_END into pieces per 1000 lines 
split all files in directory UNK_START posns UNK_END into pieces per 10000 lines 
split compressed content of the directory /home into pieces per 4000 mb named as UNK_START /media/drivename/backupname.tgz.nnn UNK_END 
split compressed content of the file www into pieces per 1073741824 bytes named as UNK_START backup.tar.nnn UNK_END 
split content all files file1..40000 into pieces per 1445 lines named as outputprefixnnn as digital prefix 
split content of the file file.txt started from second line into pieces per 4 lines named as split_nnn 
split content of the file inputfile except lines started with UNK_START ^t: UNK_END into pieces per 200 lines 
split content of the files *.txt beginning with 1001st line into pieces per 1000 lines 
split file "$file into pieces named with 5 character suffix 
split file "${fspec} into pieces named as UNK_START xyzzynnn UNK_END with numeric prefix from 1 to 6 
split file UNK_START your_file UNK_END into pieces per 9 lines 
split file /etc/gconf/schemas/gnome-terminal.schemas into pieces per 1000000 lines 
split file /usr/bin/firefox into pieces per 1000 lines 
split file /usr/bin/gcc into pieces per 100000 lines 
split file abc.txt into pieces per 1500000000 bytes named as UNK_START abc.nnn UNK_END 
split file data.csv into pieces per 100 lines 
split file input.txt into pieces per 1 line named output.nnnnn 
split file t.txt into pieces per 30000000 lines named as UNK_START t.nn UNK_END with numeric suffix 
split listing of the current directory into pieces per 500 lines named UNK_START outputxyznnn UNK_END 
split result of the command UNK_START tar [your params] UNK_END into pieces per 500 mb named as UNK_START output_prefixnnn UNK_END 
split the file UNK_START /path/to/large/file UNK_END into pieces per 50000 lines named as /path/to/output/file/prefixnnn 
split the file UNK_START file UNK_END into pieces per 2 lines 
split the file data.csv into pieces per 100 mb named as data.tsv.nnn with digital prefixes 
split the file hugefile.txt into pieces per 100000 lines named as partnnn with digital prefixes 
split the result of command UNK_START ping -c 25 google.com | tee UNK_END into pieces per 100000 bytes named as UNK_START /home/user/mylogfile.lognnn UNK_END 
ssh into UNK_START hostname UNK_END as user UNK_START buck UNK_END 
ssh into UNK_START hostname UNK_END as user UNK_START buck UNK_END 
ssh into UNK_START ssh.myhost.net UNK_END as user UNK_START myusername UNK_END and run command UNK_START mkdir -p $2 UNK_END 
ssh into default vagrant host without running UNK_START vagrant ssh UNK_END by passing the configuration parameters vagrant uses for ssh 
ssh into localhost on port 10022 
ssh into localhost on port 4444 
start 2 sleep processes in the background 
start from current directory, skip the directory src/emacs and all files and directories under it, and print the names of the other files found 
start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found 
start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found 
switch to user username 
tar all files in the current folder and ask for user confirmation before creating the tar ball 
tar all the regular java files to myfile.tar 
this find command substitute space with underscore in the file name replaces space in all the *.mp3 files with _ 
unsafed rm all file which name start with UNK_START # UNK_END 
unzip and search for a word in all the jar files in the current folder and display the matched file name 
update the permission of all the files in the folder /u/netinst to 500 
update the permission of all the php files in current directory and save the output to a file 
update the permissions of the directories in the folder folder_name to 775 
use find -exec with multiple commands 
use find command to search for .png and .jpg files 
use regex with find command 
use regex with find command 
use regex with find command 
using exec in find command to dispaly the searched files 
verbosely create intermediate directoriy tmp as required and directory boostinst 
view the manual page of find 
wait 2 seconds and then print UNK_START hello UNK_END 
when using vi-insert keymap bind command UNK_START \c-v{}\ei UNK_END to key UNK_START { UNK_END 
